"use strict";(self.webpackChunkocap=self.webpackChunkocap||[]).push([[9593],{"./packages/sql/src/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AggregateFunctions:()=>AggregateFunctions,C_ALL_MEMBER_CAPTION:()=>C_ALL_MEMBER_CAPTION,C_ALL_MEMBER_NAME:()=>C_ALL_MEMBER_NAME,C_MEASURES_ROW_COUNT:()=>C_MEASURES_ROW_COUNT,SQLDataSource:()=>SQLDataSource,SQLEntityService:()=>SQLEntityService,SQLError:()=>SQLError,SQLErrorCode:()=>SQLErrorCode,allMemberCaption:()=>allMemberCaption,allMemberName:()=>allMemberName,decideRole:()=>decideRole,getErrorMessage:()=>getErrorMessage,isCaseInsensitive:()=>isCaseInsensitive,isSQLDialect:()=>isSQLDialect,serializeIntrinsicName:()=>serializeIntrinsicName,serializeMeasureName:()=>serializeMeasureName,serializeName:()=>utils_serializeName,serializeTableAlias:()=>serializeTableAlias,serializeUniqueName:()=>serializeUniqueName,serializeWrapCatalog:()=>serializeWrapCatalog,typeOfObj:()=>typeOfObj});var asyncToGenerator=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"),src=__webpack_require__("./packages/core/src/index.ts"),BehaviorSubject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js"),switchMap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/switchMap.js");const C_MEASURES_ROW_COUNT="Measures_Row_Count";var AggregateFunctions;!function(AggregateFunctions){AggregateFunctions[AggregateFunctions.COUNT=0]="COUNT",AggregateFunctions[AggregateFunctions.COUNT_DISTINCT=1]="COUNT_DISTINCT"}(AggregateFunctions||(AggregateFunctions={}));const C_ALL_MEMBER_NAME="(All)",C_ALL_MEMBER_CAPTION="All";function allMemberName(hierarchy){return hierarchy.allMemberName||C_ALL_MEMBER_NAME}function allMemberCaption(hierarchy){return hierarchy.allMemberCaption||C_ALL_MEMBER_CAPTION}const SQLErrorCode={CUBE_DEFAULT_MEASURE:"Cube default measure is required!"};class SQLError extends Error{constructor(code){super(SQLErrorCode[code])}}function typeOfObj(obj){return Object.entries(obj).map((([key,value])=>({name:key,label:key,type:(0,src.kKJ)(value)?null:typeof value})))}function decideRole(type){switch(type){case"string":default:return src.uFO.dimension;case"number":return src.uFO.measure}}function utils_serializeName(name,dialect,catalog){return["duckdb"].includes(dialect)&&catalog?`"${catalog}"."${name}"`:["pg","trino","presto","duckdb","hana"].includes(dialect)?`"${name}"`:["hive"].includes(dialect)&&catalog?`\`${catalog}\`.\`${name}\``:`\`${name}\``}function serializeWrapCatalog(expression,dialect,catalog){return["pg"].includes(dialect)&&catalog?`SET search_path TO ${catalog};${expression}`:expression}function serializeUniqueName(dialect,dimension,hierarchy,level,intrinsic){const separator=["hive"].includes(dialect)?"|":".",connector=["hive"].includes(dialect)?"":".";let name=hierarchy&&dimension!==hierarchy?`[${dimension}${separator}${hierarchy}]`:`[${dimension}]`;return intrinsic?name=`${name}${connector}[${level}]${connector}[${intrinsic}]`:level&&(name=`${name}${connector}[${level}]`),isCaseInsensitive(dialect)&&(name=name.toLowerCase()),name}function serializeIntrinsicName(dialect,base,intrinsic){let name=`${base}${["hive"].includes(dialect)?"":"."}[${intrinsic}]`;return isCaseInsensitive(dialect)&&(name=name.toLowerCase()),name}function serializeMeasureName(dialect,measure){return isCaseInsensitive(dialect)&&(measure=measure.toLowerCase()),measure}function isCaseInsensitive(dialect){return["hive"].includes(dialect)}function serializeTableAlias(hierarchy,table){return hierarchy.replace(/\s/g,"_").toLowerCase()+"_"+table}function isSQLDialect(sql,dialect){return!sql.dialect||"generic"===sql.dialect||sql.dialect===dialect}function getErrorMessage(err){let error;return error="string"==typeof err?err:err instanceof Error?err?.message:err?.error instanceof Error?err?.error?.message:err,error}function buildCubeContext(cube,options,entityType,dialect){const factTable=function CubeFactTableAlias(cube){if(!cube.tables?.[0]?.name)throw new Error(`未找到多维数据集 '${cube.name}' 的事实表`);return serializeTableAlias(cube.name,cube.tables[0].name)}(cube);if(!factTable)throw new Error("在模型中未找到事实表");const context={schema:cube,entityType,dimensions:[],measures:[],slicers:[],factTable};if([...options.rows?.map((row=>({row,role:"row"})))??[],...options.columns?.map((row=>({row,role:"column"})))??[]].forEach((({row,role})=>{let dimension=context.dimensions.find((item=>item.dimension.dimension===row.dimension));if(!dimension){const property=(0,src.ZBB)(entityType,row);dimension={dialect,factTable,schema:property,dimension:row,levels:[],role},context.dimensions.push(dimension)}if((0,src.kb1)(row)){dimension.schema={...dimension.schema,memberCaption:"caption"},dimension.members=dimension.members??[];const members=row.members?[...row.members]:[];!members.length&&row.measure&&members.push(row.measure),members.forEach((measureName=>{const measure=(0,src.ZBB)(entityType,{dimension:src.QPo,measure:measureName});if(!measure)throw new Error(`未找到度量'${measureName}'`);context.measures.push({...measure,alias:measure.name,order:row.order}),dimension.members.push({value:measure.name,caption:measure.caption})}))}else buildCubeDimensionContext(dimension,entityType)})),!context.measures.length){const defaultMeasure=(0,src.Fuv)(entityType);context.measures.push({...defaultMeasure,alias:defaultMeasure.name})}return context}function buildCubeDimensionContext(context,entityType){const row=context.dimension,_hierarchy=context.schema.hierarchies?.find((item=>row.hierarchy?item.name===row.hierarchy:item.name===row.dimension));if(!_hierarchy)throw new Error(`未找到层级结构'${row.hierarchy||row.dimension}'`);if(context.hierarchy&&context.hierarchy.name!==_hierarchy.name)throw new Error("不能同时查询不同层级结构");context.hierarchy=_hierarchy,context.keyColumn=context.hierarchy.name,context.captionColumn=context.hierarchy.memberCaption,context.parentKeyColumn=serializeIntrinsicName(context.dialect,context.hierarchy.name,src.bcM.PARENT_UNIQUE_NAME),context.childrenCardinalityColumn=serializeIntrinsicName(context.dialect,context.hierarchy.name,src.bcM.CHILDREN_CARDINALITY);const lIndex=row.level?context.hierarchy.levels?.findIndex((item=>item.name===row.level)):0;if(!(lIndex>-1))throw new Error(`Can't find level ${row.level}`);context.dimensionTable=context.hierarchy.primaryKeyTable||context.hierarchy.tables?.[0]?.name;for(let index=row.displayHierarchy?0:lIndex;index<=lIndex;index++){const level=context.hierarchy.levels[index];context.levels.push(buildLevelContext(context,row,level,index))}return context.dimension.members?.length&&(context.slicers=context.slicers??[],context.slicers.push({dimension:(0,src.eiS)(context.dimension,"dimension","hierarchy"),exclude:context.dimension.exclude,members:context.dimension.members})),context}function buildLevelContext(context,row,level,lIndex){const levelContext={level,selectFields:[],orderBys:[],groupBys:[]},hAlias=context.keyColumn,levelTable=level.table||context.dimensionTable,table=levelTable?serializeTableAlias(context.hierarchy.name,levelTable):context.factTable,levels=context.hierarchy.levels.slice(context.hierarchy.hasAll?1:0,lIndex+1);if(0===level.levelNumber&&context.hierarchy.hasAll?(levelContext.selectFields.push({expression:`'${allMemberName(context.hierarchy)}'`,alias:hAlias}),levelContext.selectFields.push({expression:`'${allMemberCaption(context.hierarchy)}'`,alias:context.hierarchy.memberCaption})):(levelContext.selectFields.push({columns:LevelsToColumns(levels,context),alias:hAlias}),levelContext.selectFields.push({...LevelCaptionField(table,level,context.dialect),alias:context.hierarchy.memberCaption}),levelContext.orderBys.push(...levels.map((level=>({table,column:level.ordinalColumn||level.column})))),levelContext.groupBys.push(...levelContext.orderBys)),row.properties?.forEach((name=>{const property=level.properties?.find((item=>item.name===name));property&&levelContext.selectFields.push({table,column:property.column,alias:property.name})})),row.displayHierarchy){1===level.levelNumber&&context.hierarchy.hasAll?levelContext.selectFields.push({expression:`'${allMemberName(context.hierarchy)}'`,alias:serializeIntrinsicName(context.dialect,hAlias,src.bcM.PARENT_UNIQUE_NAME)}):levelContext.selectFields.push({columns:LevelsToColumns(levels.slice(0,levels.length-1),context),alias:serializeIntrinsicName(context.dialect,hAlias,src.bcM.PARENT_UNIQUE_NAME)});const childrenLevels=context.hierarchy.levels.slice(context.hierarchy.hasAll?1:0,Math.min(lIndex+2,context.hierarchy.levels.length));childrenLevels.length>levels.length?levelContext.selectFields.push({columns:LevelsToColumns(childrenLevels,context),alias:context.childrenCardinalityColumn,aggregate:AggregateFunctions.COUNT_DISTINCT}):levelContext.selectFields.push({expression:"0",alias:context.childrenCardinalityColumn})}return levelContext}function LevelsToColumns(levels,context){return levels.map((level=>{const levelTable=level.table||context.dimensionTable;return getLevelColumn(level,levelTable?serializeTableAlias(context.hierarchy.name,levelTable):context.factTable)}))}function Not(statement){return`NOT ( ${statement} )`}function functions_Parentheses(...statements){return statements.length>1&&(statements=statements.map((item=>`( ${item} )`))),statements}function functions_And(...statements){return statements.join(" AND ")}function Or(...statements){return statements.join(" OR ")}function Aggregate(statement,aggregator){return"distinct-count"===aggregator?`COUNT(DISTINCT ${statement} )`:`${(aggregator||"SUM").toUpperCase()}( ${statement} )`}function serializeHierarchyFrom(factTable,hierarchy,dialect,catalog){return hierarchy.tables?.length?serializeTablesJoin(hierarchy.name,hierarchy.tables,dialect,catalog):utils_serializeName(hierarchy.primaryKeyTable?serializeTableAlias(hierarchy.name,hierarchy.primaryKeyTable):factTable,dialect)}function serializeTablesJoin(prefix,tables,dialect,catalog){const factTable=tables[0],factTableAlias=utils_serializeName(serializeTableAlias(prefix,factTable.name),dialect);let statement=utils_serializeName(factTable.name,dialect,catalog)+` AS ${factTableAlias}`;const tableNames=[factTable.name];let leftTableAlias=factTableAlias;return tables.slice(1).forEach(((table,i)=>{const exists=tableNames.filter((name=>name===table.name)),tableAlias=utils_serializeName(serializeTableAlias(prefix,exists.length?`${table.name}(${exists.length})`:table.name),dialect),conditions=table.join.fields.map((field=>`${leftTableAlias}.${utils_serializeName(field.leftKey,dialect)} = ${tableAlias}.${utils_serializeName(field.rightKey,dialect)}`)).join(" AND ");statement=`${statement} ${table.join.type} JOIN ${utils_serializeName(table.name,dialect,catalog)} AS ${tableAlias} ON ${conditions}`,leftTableAlias=tableAlias,tableNames.push(table.name)})),tables.length>1&&(statement=`(${statement})`),statement}function getLevelColumn(level,table){const dimensionField={table,column:level.nameColumn||level.column};return"String"!==level.type&&(dimensionField.cast="VARCHAR"),dimensionField}function serializeColumn(field,dialect){let statement="";if(field.columns?statement=field.columns.length?function concat(dialect,...params){if(["sqlite"].includes(dialect))return"'[' || "+params.join(" || '].[' || ")+" || ']'";return"concat('[', "+params.join(",'].[',")+", ']')"}(dialect,...field.columns.map((col=>col.expression??function unassignedMember(column,dialect){return`CASE WHEN ${utils_serializeName(column.table,dialect)}.${utils_serializeName(column.column,dialect)} IS NULL THEN '#' ELSE ${["pg"].includes(dialect)&&column.cast?function Cast(field,type){return`CAST(${field} AS ${type})`}(`${utils_serializeName(column.table,dialect)}.${utils_serializeName(column.column,dialect)}`,column.cast):`${utils_serializeName(column.table,dialect)}.${utils_serializeName(column.column,dialect)}`} END`}(col,dialect)))):"''":(statement=`${field.expression??`${utils_serializeName(field.table,dialect)}.${utils_serializeName(field.column,dialect)}`}`,field.cast&&(statement=`CAST(${statement} AS ${field.cast})`)),field.aggregate&&field.aggregate===AggregateFunctions.COUNT_DISTINCT)statement=`COUNT(DISTINCT ${statement})`;return statement+=` AS ${utils_serializeName(field.alias,dialect)}`,statement}function TableColumnMembers(dimension,entityType,dialect,catalog){return`SELECT DISTINCT ${utils_serializeName(dimension.dimension,dialect)} AS ${utils_serializeName("memberKey",dialect)} FROM ${utils_serializeName(entityType.name,dialect,catalog)}`}function DimensionTable(hierarchy){return hierarchy.primaryKeyTable||hierarchy.tables?.[0]?.name}function DimensionMembers(entity,dimension,entityType,schema,dialect,catalog){if(!schema?.cubes?.find((item=>item.name===entity))&&!schema?.dimensions?.find((item=>item.name===entity)))return[TableColumnMembers(dimension,entityType,dialect,catalog)];const hierarchy=(0,src.jEU)(entityType,dimension);if(!hierarchy)throw new Error(`未找到维度'${dimension.dimension}'或层级结构'${dimension.hierarchy}'`);const cube=schema.cubes?.find((item=>item.name===entity)),factTable=cube?function CubeFactTable(cube){if(!cube.tables?.[0]?.name)throw new Error(`未找到多维数据集 '${cube.name}' 的事实表`);return cube.tables[0].name}(cube):null;return hierarchy.levels.map(((level,i)=>function LevelMembers(factTable,hierarchy,i,dialect,catalog){const selectFields=[];let orderBys;if(hierarchy.hasAll&&0===i)selectFields.push({expression:`'[${allMemberName(hierarchy)}]'`,alias:"memberKey"}),selectFields.push({expression:`'${allMemberCaption(hierarchy)}'`,alias:"memberCaption"});else{const levels=hierarchy.levels.slice(hierarchy.hasAll?1:0,i+1),dimensionTable=DimensionTable(hierarchy);selectFields.push({columns:levels.map((level=>{const table=level.table||dimensionTable;return getLevelColumn(level,table?serializeTableAlias(hierarchy.name,table):factTable)})),alias:"memberKey"});const level=levels[levels.length-1],table=level.table||dimensionTable;selectFields.push({...LevelCaptionField(table?serializeTableAlias(hierarchy.name,table):factTable,level,dialect),alias:"memberCaption"}),levels.length>1?selectFields.push({columns:levels.slice(0,levels.length-1).map((level=>{const table=level.table||dimensionTable;return getLevelColumn(level,table?serializeTableAlias(hierarchy.name,table):factTable)})),alias:"parentKey"}):hierarchy.hasAll&&selectFields.push({expression:`'[${allMemberName(hierarchy)}]'`,alias:"parentKey"}),orderBys=levels.map((level=>{const table=level.table||dimensionTable;return{table:table?serializeTableAlias(hierarchy.name,table):factTable,column:level.ordinalColumn||level.column}}))}let statement=`SELECT ${selectFields.map((item=>serializeColumn(item,dialect))).join(", ")} FROM ${serializeHierarchyFrom(factTable,hierarchy,dialect,catalog)}`;return statement+=" GROUP BY "+(serializeGroupByDimensions([{dialect,hierarchy,selectFields:[...selectFields,...orderBys??[]],role:"row",levels:[]}],dialect)||1),orderBys&&(statement+=" ORDER BY "+orderBys.map((({table,column})=>`${utils_serializeName(table,dialect)}.${utils_serializeName(column,dialect)}`)).join(",")),statement}(factTable,hierarchy,i,dialect,catalog)))}function LevelCaptionField(table,level,dialect){const captionColumn=level.captionColumn||level.nameColumn||level.column;if(level.captionExpression?.sql?.content&&isSQLDialect(level.captionExpression.sql,dialect))return{table,column:captionColumn,expression:level.captionExpression.sql.content};if(captionColumn)return{table,column:captionColumn};throw new Error(`Can't find caption column for level '${level.name}'`)}function queryDimension(dimension,entityType,options,dialect,catalog){let context={selectFields:[]};const measures=[];[...options.rows??[],...options.columns??[]].forEach((row=>{(0,src.kb1)(row)?row.measure===C_MEASURES_ROW_COUNT&&measures.push({column:1,aggregator:"SUM",alias:C_MEASURES_ROW_COUNT}):context=function buildDimensionContext(context,entityType,row,dialect){const property=(0,src.ZBB)(entityType,row);if(!property)throw new Error(`未找到维度'${row.dimension}'`);context.selectFields=context.selectFields??[],context.schema=property,context.dimension=row;const _hierarchy=property.hierarchies?.find((item=>row.hierarchy?item.name===(row.hierarchy??""):item.name===row.dimension));if(context.hierarchy&&context.hierarchy.name!==_hierarchy.name)throw new Error("不能同时查询不同层级结构");context.hierarchy=_hierarchy;const lIndex=row.level?context.hierarchy.levels?.findIndex((item=>item.name===row.level)):0;if(!(lIndex>-1))throw new Error(`找不到 Level ${row.level}`);{const level=context.hierarchy.levels[lIndex];context.dimensionTable=context.hierarchy.primaryKeyTable||context.hierarchy.tables[0].name;const table=serializeTableAlias(context.hierarchy.name,level.table||context.dimensionTable)||context.factTable,memberUniqueNameColumns=context.hierarchy.levels.slice(context.hierarchy.hasAll?1:0,lIndex+1).map((level=>{const levelTable=level.table||context.dimensionTable;return getLevelColumn(level,levelTable?serializeTableAlias(context.hierarchy.name,levelTable):context.factTable)}));if(context.selectFields.push({table,columns:memberUniqueNameColumns,alias:level.name}),context.selectFields.push({...LevelCaptionField(table,level,dialect),alias:level.memberCaption}),level.parentColumn){context.parentKeyColumn=level.column,context.parentColumn=level.parentColumn;const parentTable=table+"(1)";context.selectFields.push({table:parentTable,columns:memberUniqueNameColumns.map((column=>({...column,table:parentTable}))),alias:serializeIntrinsicName(dialect,level.name,"PARENT_UNIQUE_NAME")})}row.properties?.forEach((name=>{const property=level.properties?.find((item=>item.name===name));property&&context.selectFields.push({table,column:property.column,alias:property.name})}))}return context}(context,entityType,row,dialect)}));let statement=context.selectFields.map((field=>serializeColumn(field,dialect))).join(", ");return measures.length&&(statement+=", "+measures.map((measure=>`${measure.aggregator}(${"number"==typeof measure.column?measure.column:utils_serializeName(measure.table,dialect)+"."+utils_serializeName(measure.column,dialect)}) AS ${utils_serializeName(measure.alias,dialect)}`)).join(", ")),statement+=" FROM "+(context.parentColumn?serializeTablesJoin(context.hierarchy.name,[context.hierarchy.tables[0],{name:context.hierarchy.tables[0].name,join:{type:"Left",fields:[{leftKey:context.parentColumn,rightKey:context.parentKeyColumn}]}}],dialect,catalog):serializeHierarchyFrom("",context.hierarchy,dialect,catalog)),measures.length&&(statement+=" GROUP BY "+serializeGroupByDimensions([context],dialect)),statement="SELECT "+statement,statement}function serializeGroupByDimensions(dimensions,dialect){return[...new Set((0,src.Ar6)(dimensions.map((context=>[...context.selectFields?.filter((field=>!field.aggregate)).map((field=>field.columns?field.columns:[field]))??[],...context.groupBys??[]]))).filter((field=>!!field?.column)).map((field=>`${utils_serializeName(field.table,dialect)}.${utils_serializeName(field.column,dialect)}`)))].join(", ")}function compileDimensionSchema(entity,dimension,dialect){Object.entries((0,src.VFc)(dimension.hierarchies?.map((hierarchy=>({name:hierarchy.name||""}))),"name")).forEach((([name,count])=>{if(count>1)throw new Error(`Hierarchy name '${name}' cannot be duplicated.`)}));const dimensionUniqueName=serializeUniqueName(dialect,dimension.name),hierarchies=dimension.hierarchies?.map((hierarchy=>{if(hierarchy.tables?.length&&!hierarchy.primaryKey)throw new Error(`The primaryKey '${hierarchy.primaryKey}' of hierarchy '${hierarchy.name??""}' is not correct!`);if(hierarchy.tables?.length>1&&(function tablesValidator(tables){if(tables.slice(1).some((table=>!table.join?.fields?.length)))throw new Error("tables join fields is need!")}(hierarchy.tables),!hierarchy.primaryKeyTable))throw new Error(`The primaryKeyTable of hierarchy '${hierarchy.name??""}' is need!`);const hierarchyUniqueName=serializeUniqueName(dialect,dimension.name,hierarchy.name),levels=hierarchy.levels?.map((level=>({...level,caption:level.caption??level.name,name:serializeUniqueName(dialect,dimension.name,hierarchy.name,level.name),memberCaption:serializeUniqueName(dialect,dimension.name,hierarchy.name,level.name,src.bcM.MEMBER_CAPTION),role:src.uFO.level,properties:level.properties?.map((property=>({...property,name:serializeUniqueName(dialect,dimension.name,hierarchy.name,property.name),caption:property.caption||property.name})))??[]})));if(hierarchy.hasAll){const allLevelName=hierarchy.allLevelName||`(All ${hierarchy.name||dimension.name}s)`,allLevelUniqueName=serializeUniqueName(dialect,dimension.name,hierarchy.name,allLevelName);levels?.splice(0,0,{name:allLevelUniqueName,caption:allLevelName,role:src.uFO.level,memberCaption:serializeIntrinsicName(dialect,allLevelUniqueName,src.bcM.MEMBER_CAPTION),properties:[]})}return{...hierarchy,name:hierarchyUniqueName,caption:hierarchy.caption||dimension.caption,entity,dimension:dimensionUniqueName,role:src.uFO.hierarchy,memberCaption:serializeUniqueName(dialect,dimension.name,hierarchy.name,src.bcM.MEMBER_CAPTION),allMember:hierarchy.hasAll?`[${allMemberName(hierarchy)}]`:null,levels:levels?.map(((level,i)=>({...level,levelNumber:i,entity,dimension:dimensionUniqueName,hierarchy:hierarchyUniqueName})))??[]}}));return{...dimension,entity,name:dimensionUniqueName,memberCaption:serializeIntrinsicName(dialect,dimensionUniqueName,src.bcM.MEMBER_CAPTION),hierarchies,role:src.uFO.dimension}}function compileSlicer(slicer,cube,dialect){const{entityType}=cube;if((0,src.wMY)(slicer)){const children=slicer.children.map((child=>compileSlicer(child,cube,dialect))).filter(Boolean);return slicer.filteringLogic===src.vLo.And?functions_And(...functions_Parentheses(...children)):Or(...functions_Parentheses(...children))}const factTable=cube.factTable;let dimensionContext=cube.dimensions.find((item=>item.dimension.dimension===slicer.dimension.dimension));if(dimensionContext||(dimensionContext=function createDimensionContext(entityType,dimension){const hierarchy=(0,src.jEU)(entityType,dimension);if(!hierarchy)throw new Error(`Can't find hierarchy for '${dimension.hierarchy||dimension.dimension}'`);const dimensionTable=DimensionTable(hierarchy);return{dimension:{dimension:dimension.dimension,hierarchy:dimension.hierarchy||dimension.dimension},schema:(0,src.ZBB)(entityType,dimension),hierarchy,dimensionTable,selectFields:[]}}(entityType,slicer.dimension),dimensionContext.dialect=dialect,dimensionContext.factTable=factTable,cube.dimensions.push(dimensionContext)),dimensionContext.hierarchy.name!==(slicer.dimension.hierarchy||slicer.dimension.dimension))throw new Error(`不能同时查询不同层级结构${dimensionContext.hierarchy.name}和${slicer.dimension.hierarchy||slicer.dimension.dimension}`);const levels=dimensionContext.hierarchy.levels.slice(dimensionContext.hierarchy.hasAll?1:0),operator=slicer.operator;if(operator===src.pgc.BT){const btMembers=compileMembers(slicer.members,levels,dimensionContext),statement=functions_And(...functions_Parentheses(serializeCPMembers(btMembers[0],src.pgc.GE),serializeCPMembers(btMembers[1],src.pgc.LE)));return slicer.exclude?Not(statement):statement}const conditions=compileMembers(slicer.members,levels,dimensionContext).map((members=>{switch(operator){case src.pgc.GT:case src.pgc.GE:case src.pgc.LT:case src.pgc.LE:return serializeCPMembers(members,operator);case src.pgc.NE:return Not(serializeEQMembers(members));case src.pgc.EQ:case null:case void 0:case"":return serializeEQMembers(members);default:throw new Error(`Not implement operator '${operator}'`)}})).filter((value=>!!value));return slicer.exclude?functions_And(...conditions.map((item=>Not(item)))):Or(...functions_Parentheses(...conditions))}function compileMembers(members,levels,dimensionContext){return members.map((member=>`${member.value}`.replace(/^\[/,"").replace(/\]$/,"").split("].[").filter(((value,i)=>!(0===i&&dimensionContext.hierarchy.hasAll&&allMemberName(dimensionContext.hierarchy)===value))).map(((value,i)=>{const level=levels[i],levelTable=level.table||dimensionContext.dimensionTable,levelColumn=level.nameColumn||level.column;if(!levelColumn)throw new Error(`Can't find table column for level '${level.name}' of dimension '${dimensionContext.dimension.dimension}'`);const columnName=`${utils_serializeName(levelTable?serializeTableAlias(dimensionContext.hierarchy.name,levelTable):dimensionContext.factTable,dimensionContext.dialect)}.${utils_serializeName(levelColumn,dimensionContext.dialect)}`;return"#"===value?`${columnName} IS NULL`:("Numeric"!==level.type&&"Integer"!==level.type&&(value=`'${value}'`),{columnName,value})}))))}function serializeCPMembers(members,operator){let op="=";switch(operator){case src.pgc.GT:case src.pgc.GE:op=">";break;case src.pgc.LT:case src.pgc.LE:op="<"}const conditions=members.reduce(((conditions,member,currentIndex)=>{const conditionGroup=[...members.slice(0,currentIndex).map((member=>(0,src.HD0)(member)?member:`${member.columnName} = ${member.value}`)),(0,src.HD0)(member)?member:`${member.columnName} ${op} ${member.value}`];return conditions.push(1===conditionGroup.length?conditionGroup[0]:`( ${functions_And(...conditionGroup)} )`),conditions}),[]);return[src.pgc.GE,src.pgc.LE].includes(operator)&&conditions.push(`( ${serializeEQMembers(members)} )`),Or(...conditions)}function serializeEQMembers(members){return functions_And(...members.map((member=>(0,src.HD0)(member)?member:`${member.columnName} = ${member.value}`)))}function serializeCalculationProperty(cubeContext,property,aggregate,dialect){let formula;if(!(0,src.Ryb)(property)){if((0,src.reL)(property))return serializeCalculatedMeasure(cubeContext,property,aggregate,dialect);if((0,src.BJr)(property)||(0,src.sT)(property))return function serializeRestrictedMeasure(cubeContext,indicator,aggregate,dialect){const{factTable}=cubeContext;if(indicator.measure){const measure=(0,src.ZBB)(cubeContext.entityType,indicator.measure);if(!measure)throw new Error(`Can't find measure for '${indicator.measure}'`);const conditions=(0,src.oA$)(indicator.slicers?.map((slicer=>compileSlicer(slicer,cubeContext,dialect)))??indicator.dimensions?.map((dimension=>compileSlicer((0,src.lOq)(dimension),cubeContext,dialect)))??[]);let column="",statement="";return(0,src.reL)(measure)?(column=serializeCalculatedMeasure(cubeContext,measure,aggregate&&!indicator.aggregator,dialect),statement=aggregate&&indicator.aggregator?Aggregate(conditions?.length?`CASE WHEN ${functions_And(...functions_Parentheses(...conditions))} THEN ${column} ELSE NULL END`:column,measure.aggregator):conditions?.length?`CASE WHEN ${functions_And(...functions_Parentheses(...conditions))} THEN ${column} ELSE NULL END`:column):(column="number"==typeof measure.column?measure.column:utils_serializeName(factTable,dialect)+"."+utils_serializeName(measure.column,dialect),statement=Aggregate(conditions?.length?`CASE WHEN ${functions_And(...functions_Parentheses(...conditions))} THEN ${column} ELSE NULL END`:column,measure.aggregator)),statement}throw new Error("未支持的方法")}(cubeContext,property,aggregate,dialect);throw new Error(`Unimplemented calculation type ${property.calculationType}`)}return formula="TODO",formula}function serializeCalculatedMeasure(cubeContext,measure,aggregate,dialect){const regex=/\[[m|M][e|E][a|A][s|S][u|U][r|R][e|E][s|S]\]\.\[([\w\s\-_]*)\]/gm,measures=[];let m;for(;null!==(m=regex.exec(measure.formula));)m.index===regex.lastIndex&&regex.lastIndex++,measures.push({origin:m[0],measureName:m[1]});const aggregator=measure.aggregator;let formula=measure.formula;return measures.forEach((({origin,measureName})=>{const property=(0,src.ZBB)(cubeContext.entityType,measureName);formula=formula.replace(origin,serializeMeasure(cubeContext,property,aggregate&&!aggregator,dialect))})),aggregate&&aggregator?Aggregate(formula,aggregator):formula}function serializeMeasure(cubeContext,measure,aggregate,dialect){const{factTable}=cubeContext;if((0,src.ewE)(measure))return serializeCalculationProperty(cubeContext,measure,aggregate,dialect);let measureExpression="";return measureExpression=measure.measureExpression?.sql?.content?measure.measureExpression.sql.content:"number"==typeof measure.column?measure.column:utils_serializeName(factTable,dialect)+"."+utils_serializeName(measure.column,dialect),aggregate?`${Aggregate(measureExpression,measure.aggregator)}`:measureExpression}function queryCube(cube,options,entityType,dialect,catalog){const cubeContext=buildCubeContext(cube,options,entityType,dialect),conditions=[];cubeContext.filterString=options.filterString||"";const filters=[];options.filters?.forEach((item=>{(0,src.ieb)(item)?conditions.push(item):filters.push(item)})),cubeContext.dimensions.forEach((dimension=>{dimension.slicers?.length&&filters.push(...dimension.slicers)})),filters.length&&(cubeContext.filterString+=(cubeContext.filterString?" AND ":"")+function compileFilters(filters,cube,dialect){return functions_And(...functions_Parentheses(...(0,src.oA$)((0,src.xHg)(filters.map((item=>compileSlicer(item,cube,dialect)))))))}(filters,cubeContext,dialect));let levels=[];cubeContext.dimensions.filter((({dimension})=>dimension.dimension!==src.QPo)).forEach((dimensionContext=>{const _levels=levels.length?[...levels]:[{...cubeContext,dimensions:[]}];levels=[],dimensionContext.levels?.length?dimensionContext.levels?.forEach((level=>{levels.push(..._levels.map((context=>({...context,dimensions:[...context.dimensions,{...dimensionContext,level:level.level,selectFields:level.selectFields,orderBys:level.orderBys,groupBys:level.groupBys}]}))))})):levels.push(..._levels.map((context=>({...context,dimensions:[...context.dimensions,{...dimensionContext}]}))))}));const levelStatements=levels.map((cubeContext=>serializeLevelSelect(cubeContext,dialect,catalog)));let statement=levelStatements.length>1?levelStatements.map((statement=>`(${statement})`)).join(" union "):1===levelStatements.length?levelStatements[0]:serializeLevelSelect(cubeContext,dialect,catalog);return(options.paging?.top||options.orderbys?.length)&&(statement=`SELECT * FROM (${statement}) AS LIMIT_ALIAS`,options.orderbys?.length&&(statement=`${statement} ORDER BY `+options.orderbys.map((orderBy=>utils_serializeName(orderBy.by,dialect)+" "+(orderBy.order||"ASC"))).join(", ")),options.paging?.top&&(statement=`${statement} LIMIT ${options.paging.top}`)),{cubeContext,statement}}function serializeLevelSelect(cubeContext,dialect,catalog){const dimensionsStatement=cubeContext.dimensions.map((dimensionContext=>dimensionContext.selectFields?.map((field=>serializeColumn(field,dialect))).join(", "))).filter((statement=>!!statement)).join(", ");let statement;cubeContext.measures.length&&(statement=dimensionsStatement+(dimensionsStatement?", ":"")+cubeContext.measures.map((measure=>`${serializeMeasure(cubeContext,measure,!0,dialect)} AS ${utils_serializeName(measure.alias,dialect)}`)).join(", ")),statement+=" FROM "+function serializeCubeFrom(cubeContext,dialect,catalog){return serializeTablesJoin(cubeContext.schema.name,cubeContext.schema.tables,dialect,catalog)+cubeContext.dimensions.filter((dimensionContext=>!!dimensionContext.dimensionTable)).map((dimensionContext=>{const primaryKeyTable=dimensionContext.hierarchy.primaryKeyTable||dimensionContext.hierarchy.tables[0].name;if(!primaryKeyTable)throw new Error(`Can't find primary key table for hierarchy '${dimensionContext.hierarchy.name}'`);if(!dimensionContext.hierarchy.primaryKey)throw new Error(`Can't find primary key column for hierarchy '${dimensionContext.hierarchy.name}'`);return" INNER JOIN "+serializeHierarchyFrom("",dimensionContext.hierarchy,dialect,catalog)+` ON ${utils_serializeName(cubeContext.factTable,dialect)}.${utils_serializeName(dimensionContext.schema.foreignKey,dialect)} = ${utils_serializeName(serializeTableAlias(dimensionContext.hierarchy.name,primaryKeyTable),dialect)}.${utils_serializeName(dimensionContext.hierarchy.primaryKey,dialect)}`})).join("")}(cubeContext,dialect,catalog),cubeContext.filterString&&(statement+=" WHERE "+cubeContext.filterString);const groupByStatement=serializeGroupByDimensions(cubeContext.dimensions,dialect)||(dimensionsStatement?1:"");groupByStatement&&(statement+=" GROUP BY "+groupByStatement);let orderBy="";const measureOrders=cubeContext.measures.filter((({order})=>order)).map((measure=>utils_serializeName(measure.alias,dialect)+" "+measure.order));return measureOrders.length&&(orderBy=measureOrders.join(", ")),orderBy=cubeContext.dimensions.reduce(((orderBy,{orderBys})=>{const _orderByCols=orderBys?.map((col=>function serializeColumnContext(column,dialect){return`${utils_serializeName(column.table,dialect)}.${utils_serializeName(column.column,dialect)}`}(col,dialect)));return _orderByCols?.length?(orderBy&&_orderByCols.splice(0,0,orderBy),_orderByCols.join(", ")):orderBy}),orderBy),orderBy&&(statement+=" ORDER BY "+orderBy),"SELECT "+statement}class SQLEntityService extends src.Idx{constructor(){super(...arguments),this.refresh$=new BehaviorSubject.X(null)}get agent(){return this.dataSource.agent}query(options){return this.selectQuery(options)}selectQuery(options){var _this=this;const schema=this.dataSource.options.schema,entityType=this.entityType,dialect=this.dataSource.options.dialect,catalog=this.dataSource.options.catalog;return this.refresh$.pipe((0,switchMap.w)((0,asyncToGenerator.Z)((function*(){let _cubeContext,_statement=options?.statement;if(!_statement)try{const{cubeContext,statement}=yield(0,asyncToGenerator.Z)((function*(){const dimension=schema?.dimensions?.find((item=>item.name===entityType.name));if(dimension)return{cubeContext:null,statement:queryDimension(0,entityType,options,dialect,catalog)};const cube=schema?.cubes?.find((item=>item.name===entityType.name));if(cube)return queryCube(cube,options,entityType,dialect,catalog);if(entityType.semantics===src.CwT.table)return function queryTable(options,entityType,dialect,catalog){return queryCube(entityType.cube,options,entityType,dialect,catalog)}(options,entityType,dialect,catalog);throw new Error(`未找到模型'${_this.entitySet}'`)}))();_cubeContext=cubeContext,_statement=statement}catch(err){const error=getErrorMessage(err);return _this.agent.error(err),{error}}_statement=serializeWrapCatalog(_statement,_this.dataSource.options.dialect,_this.dataSource.options.catalog);try{const result=yield _this.dataSource.agent.request(_this.dataSource.options,{method:"post",url:"query",body:{statement:_statement,forceRefresh:options.force},catalog:_this.dataSource.options.catalog}),{data,schema}=_cubeContext?function transposePivot(cubeContext,data){const rowContexts=cubeContext.dimensions.filter((context=>"row"===context.role)),columnContexts=cubeContext.dimensions.filter((context=>"column"===context.role));let recursiveHierarchy,rowHierarchy;const hRow=rowContexts?.find((row=>row.dimension.displayHierarchy));if(hRow&&(rowHierarchy=hRow.hierarchy.name,recursiveHierarchy={parentNodeProperty:(0,src.qZt)(hRow.keyColumn,src.bcM.PARENT_UNIQUE_NAME),valueProperty:hRow.keyColumn,labelProperty:hRow.captionColumn}),!columnContexts.length)return{data,schema:{recursiveHierarchy,rowHierarchy}};const columns=[],columnsKeyMap={},results=[],resultKeyMap={};return data.forEach((item=>{rowContexts.forEach((({schema,dimension,keyColumn,captionColumn,members})=>{dimension.dimension===src.QPo?item[schema.name]=members[0].label:(item[dimension.dimension]=item[keyColumn],item[schema.memberCaption]=item[captionColumn])}));const rowKey=rowContexts.map((({keyColumn})=>item[keyColumn])).join("");resultKeyMap[rowKey]||(resultKeyMap[rowKey]={...item},results.push(resultKeyMap[rowKey]));let parent=null,parentColumns=columns;columnContexts.forEach((({keyColumn,captionColumn,parentKeyColumn,childrenCardinalityColumn,dimension,members},key,arr)=>{if((0,src.kb1)(dimension))members.forEach((member=>{const keyColumn=member.value,columnName=(parent?.name?parent.name+"/":"")+keyColumn;if(columnsKeyMap[columnName]||(columnsKeyMap[columnName]={name:columnName,caption:member.caption||member.value,uniqueName:keyColumn,measure:keyColumn,member:{key:keyColumn,caption:member.caption||member.value,value:member.value},columns:[]},parentColumns.push(columnsKeyMap[columnName])),Object.is(arr.length-1,key)){const measure=columnsKeyMap[columnName].measure??cubeContext.schema.defaultMeasure;resultKeyMap[rowKey][columnName]=item[measure]}}));else{const columnName=(parent?.name?parent.name+"/":"")+item[keyColumn];if(columnsKeyMap[columnName]||(columnsKeyMap[columnName]={name:columnName,caption:item[captionColumn],uniqueName:item[keyColumn],parentUniqueName:item[parentKeyColumn],childrenCardinality:item[childrenCardinalityColumn],member:{key:item[keyColumn],caption:item[captionColumn],value:item[keyColumn]},columns:[]},parentColumns.push(columnsKeyMap[columnName])),Object.is(arr.length-1,key)){const measure=columnsKeyMap[columnName].measure??cubeContext.schema.defaultMeasure;resultKeyMap[rowKey][columnName]=item[measure]}parent=columnsKeyMap[columnName],parentColumns=columnsKeyMap[columnName].columns}}))})),{data:results,schema:{recursiveHierarchy,rowHierarchy,columns,columnAxes:columnContexts.map((({dimension,members})=>({...dimension,members})))}}}(_cubeContext,result.data):{data:result.data,schema:{columns:result.columns}};return{...result,data,schema,stats:{...result.stats??{},statements:[_statement]}}}catch(err){const error=getErrorMessage(err);return _this.agent.error(err),{data:[],error,stats:{statements:[_statement]}}}}))))}refresh(){this.refresh$.next()}getCalculatedMember(measure,type,calendar){throw new Error("Method not implemented.")}}var from=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/from.js"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),distinctUntilChanged=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js"),catchError=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/catchError.js"),shareReplay=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js"),filter=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/filter.js"),combineLatest=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/combineLatest.js");class SQLDataSource extends src.mK7{discoverDBCatalogs(){return(0,from.D)(this.agent.request(this.options,{method:"get",url:"catalogs"}).catch((error=>(this.agent.error(error),[]))))}discoverDBTables(){return(0,from.D)(this.fetchSchema(this.options.name,this.options.catalog||"")).pipe((0,map.U)((schemas=>{const entitySets=[];return schemas.forEach((schema=>{schema.tables.forEach((table=>{entitySets.push({catalog:schema.schema,name:table.name,label:table.label,caption:table.label,visible:!0})}))})),entitySets})))}discoverMDCubes(){return this.selectSchema().pipe((0,map.U)((schema=>schema?.cubes?.map((cube=>({name:cube.name,caption:cube.caption}))))),(0,distinctUntilChanged.x)(src.Xyp))}discoverMDMembers(entity,dimension){return this.getMembers(entity,dimension)}getCatalogs(refresh){return this._catalogs$&&!refresh||(this._catalogs$=(0,from.D)(this.agent.request(this.options,{method:"get",url:"catalogs"}).catch((error=>(this.agent.error(error),[]))))),this._catalogs$}getEntitySets(refresh){return this.selectEntitySets(refresh)}selectEntitySets(refresh){return this._entitySets$&&!refresh||(this._entitySets$=(0,from.D)(this.fetchSchema(this.options.name,this.options.catalog||"")).pipe((0,catchError.K)((err=>(this.agent.error(err),[]))),(0,map.U)((schemas=>{const entitySets=[];return schemas.filter((schema=>!this.options.catalog||schema.schema===this.options.catalog)).forEach((schema=>{schema.tables.forEach((table=>{entitySets.push({catalog:schema.schema,name:table.name,caption:table.label})}))})),entitySets})),(0,shareReplay.d)(1))),this._entitySets$}getMembers(entity,dimension){return this.selectMembers(entity,dimension)}fetchSchema(modelName,catalog){var _this=this;return(0,asyncToGenerator.Z)((function*(){return _this.agent.request(_this.options,{method:"get",url:"schema",catalog})}))()}fetchTableSchema(modelName,catalog,table,statement){var _this2=this;return(0,asyncToGenerator.Z)((function*(){return _this2.agent.request(_this2.options,{method:"get",url:"schema",catalog,table,statement})}))()}getEntityType(entity){var _this3=this;return this.selectSchema().pipe((0,map.U)((schema=>{const cube=schema?.cubes?.find((item=>item.name===entity));if(cube){const dimensions=cube.dimensionUsages?.map((usage=>{const dimension=schema.dimensions.find((item=>item.name===usage.source));if(!dimension)throw new Error(`未找到源维度'${usage.source}'`);return dimension}));return{type:"CUBE",cube,dimensions}}const dimension=schema?.dimensions?.find((item=>item.name===entity));return dimension?{type:"DIMENSION",dimension}:{}})),(0,distinctUntilChanged.x)(src.Xyp)).pipe((0,switchMap.w)(function(){var _ref=(0,asyncToGenerator.Z)((function*({type,cube,dimension,dimensions}){try{if(dimension){const rtDimension=compileDimensionSchema(entity,dimension,_this3.options.dialect);return{visible:!0,name:entity,properties:{[rtDimension.name]:rtDimension,[C_MEASURES_ROW_COUNT]:{name:C_MEASURES_ROW_COUNT,role:src.uFO.measure,entity}}}}if(cube)return function compileCubeSchema(entity,cube,dimensions,dialect){const properties={};return cube.dimensionUsages?.forEach((usage=>{const dimension=dimensions?.find((item=>item.name===usage.source));if(!usage.foreignKey)throw new Error(`The foreignKey '${usage.foreignKey}' of dimension usage '${usage.name}' is not correct!`);if(!dimension)throw new Error(`Can't find source dimension '${usage.source}' for dimension usage '${usage.name}'`);{const property=compileDimensionSchema(entity,{...dimension,name:usage.name,foreignKey:usage.foreignKey||dimension.foreignKey},dialect);properties[property.name]=property}})),cube.dimensions?.forEach((dimension=>{const property=compileDimensionSchema(entity,dimension,dialect);properties[property.name]=property})),cube.measures?.forEach((measure=>{const name=serializeMeasureName(dialect,measure.name);properties[name]={...measure,name,role:src.uFO.measure}})),cube.calculatedMembers?.filter((member=>member.visible)).forEach((calculatedMember=>{if(calculatedMember.dimension===src.QPo){const name=serializeMeasureName(dialect,calculatedMember.name);properties[name]={...calculatedMember,name,role:src.uFO.measure,dataType:"number",calculationType:src.eNW.Calculated}}})),{name:entity,caption:cube.caption,defaultMeasure:cube.defaultMeasure,visible:!0,properties,semantics:src.CwT.aggregate}}(entity,cube,dimensions,_this3.options.dialect);let schemas;entity&&!cube&&(schemas=yield _this3.fetchTableSchema(_this3.options.name,_this3.options.catalog||"",entity));const table=schemas[0]?.tables?.[0];if(!table)throw new Error(`未能获取到实体 '${entity}' 的运行时元数据`);const _entityType=function mapTableSchemaEntityType(entity,item,dialect){const cube=function mapTableToCube(entity,table){const measures=table.columns.filter((column=>decideRole(column.type)===src.uFO.measure)).map((column=>({__id__:column.name,name:column.name,caption:column.label,column:column.name}))),defaultMeasure=measures[0]?.name,cube={__id__:(0,src.VjN)(),name:entity,caption:table.label,defaultMeasure,tables:[{name:table.name}],dimensions:table.columns.filter((column=>decideRole(column.type)===src.uFO.dimension)).map((column=>({entity,__id__:column.name,name:column.name,caption:column.label,column:column.name,hierarchies:[{__id__:column.name,name:"",caption:column.label,levels:[{__id__:column.name,name:column.name,caption:column.label,column:column.name}]}]}))),measures};return cube}(entity,item),entityType={name:entity,caption:item.label,properties:{},semantics:src.CwT.table,defaultMeasure:cube.defaultMeasure,cube};return item.columns?.forEach((column=>{entityType.properties[column.name]={entity,__id__:column.name,name:column.name,caption:column.label,dataType:column.type,role:decideRole(column.type),column:column.name},entityType.properties[column.name].role===src.uFO.dimension&&(entityType.properties[column.name].hierarchies=[{name:column.name,caption:column.label,dimension:column.name,memberCaption:serializeUniqueName(dialect,column.name,column.name,src.bcM.MEMBER_CAPTION),levels:[{name:column.name,caption:column.label,dimension:column.name,hierarchy:column.name,column:column.name,captionColumn:column.name}]}])})),entityType}(entity,schemas[0]?.tables?.[0],_this3.options.dialect);return _entityType}catch(err){const error=getErrorMessage(err);return _this3.agent.error(error),new Error(error)}}));return function(_x){return _ref.apply(this,arguments)}}()),(0,shareReplay.d)(1))}selectMembers(entity,dimension){return this.getEntityType(entity).pipe((0,filter.h)(src.OCY),(0,switchMap.w)((entityType=>(0,combineLatest.a)(DimensionMembers(entity,dimension,entityType,this.options.schema,this.options.dialect,this.options.catalog).map((statement=>this.query({statement})))).pipe((0,map.U)((memberLevels=>{const _dimension=(0,src.eiS)(dimension,"dimension","hierarchy"),members=[];return memberLevels.forEach((level=>{members.push(...level.data.map((item=>isCaseInsensitive(this.options.dialect)?{...item,..._dimension,memberKey:item.memberkey,memberCaption:item.membercaption,parentKey:item.parentkey,entity}:{...item,..._dimension,entity})))})),members}))))))}createEntity(name,columns,{data,mergeType}){return this.agent._request(this.options,{method:"post",url:"import",body:{name,columns,data,mergeType},catalog:this.options.catalog})}dropEntity(name){var _this4=this;return(0,asyncToGenerator.Z)((function*(){return _this4.agent.request(_this4.options,{method:"post",url:"drop",body:{name},catalog:_this4.options.catalog})}))()}createEntityService(entity){return new SQLEntityService(this,entity)}query(q){const statement=serializeWrapCatalog(q.statement,this.options.dialect,this.options.catalog);return(0,from.D)(this.agent.request(this.options,{method:"post",url:"query",body:{statement},catalog:this.options.catalog})).pipe((0,map.U)((result=>({...result,data:result.data,schema:{columns:result.columns},statement}))))}}}}]);