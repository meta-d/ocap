{
  "name": "cloud",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "projectType": "application",
  "sourceRoot": "apps/cloud/src",
  "prefix": "pac",
  "targets": {
    "build": {
      "executor": "@angular-devkit/build-angular:browser",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/apps/cloud",
        "index": "apps/cloud/src/index.html",
        "main": "apps/cloud/src/main.ts",
        "polyfills": ["zone.js"],
        "tsConfig": "apps/cloud/tsconfig.app.json",
        "inlineStyleLanguage": "scss",
        "assets": [
          {
            "glob": "**/*",
            "input": "node_modules/monaco-editor/min/vs/base",
            "output": "./assets/monaco-editor/min/vs/base"
          },
          {
            "glob": "**/*",
            "input": "node_modules/monaco-editor/min/vs/editor",
            "output": "./assets/monaco-editor/min/vs/editor"
          },
          {
            "glob": "**/*",
            "input": "node_modules/monaco-editor/min/vs/language",
            "output": "./assets/monaco-editor/min/vs/language"
          },
          {
            "glob": "**/*",
            "input": "node_modules/monaco-editor/min/vs/basic-languages/javascript",
            "output": "./assets/monaco-editor/min/vs/basic-languages/javascript"
          },
          {
            "glob": "**/*",
            "input": "node_modules/monaco-editor/min/vs/basic-languages/sql",
            "output": "./assets/monaco-editor/min/vs/basic-languages/sql"
          },
          {
            "glob": "**/*",
            "input": "node_modules/monaco-editor/min/vs/basic-languages/css",
            "output": "./assets/monaco-editor/min/vs/basic-languages/css"
          },
          {
            "glob": "loader.js",
            "input": "node_modules/monaco-editor/min/vs/",
            "output": "./assets/monaco-editor/min/vs/"
          },
          {
            "glob": "**/*",
            "input": "node_modules/lato-font/fonts/",
            "output": "./assets/fonts/lato/"
          },
          {
            "glob": "**/*",
            "input": "node_modules/noto-serif-sc/",
            "output": "./assets/fonts/noto-serif-sc/"
          },
          {
            "glob": "**/*",
            "input": "node_modules/tinymce",
            "output": "./assets/tinymce/"
          },
          {
            "glob": "*.wasm",
            "input": "node_modules/@duckdb/duckdb-wasm/dist/",
            "output": "./assets/"
          },
          {
            "glob": "*.worker.js",
            "input": "node_modules/@duckdb/duckdb-wasm/dist/",
            "output": "./assets/"
          },
          {
            "glob": "*.worker.js",
            "input": "packages/duckdb/dist/",
            "output": "./assets/"
          },
          "apps/cloud/src/favicon.ico",
          "apps/cloud/src/assets",
          "apps/cloud/src/manifest.webmanifest"
        ],
        "styles": [
          "packages/angular/_index.scss",
          "packages/copilot-angular/_index.scss",
          "apps/cloud/src/styles.scss"
        ],
        "stylePreprocessorOptions": {
          "includePaths": ["node_modules/"]
        },
        "scripts": [
          "node_modules/marked/marked.min.js",
          "node_modules/prismjs/prism.js",
          "node_modules/prismjs/components/prism-json.min.js",
          "node_modules/prismjs/components/prism-javascript.min.js",
          "node_modules/prismjs/components/prism-typescript.min.js",
          "node_modules/prismjs/components/prism-yaml.min.js",
          "node_modules/prismjs/components/prism-scss.min.js",
          "node_modules/prismjs/components/prism-css.min.js",
          "node_modules/prismjs/components/prism-sql.min.js",
          "node_modules/prismjs/plugins/copy-to-clipboard/prism-copy-to-clipboard.min.js",
          "node_modules/clipboard/dist/clipboard.min.js"
        ],
        "serviceWorker": true,
        "ngswConfigPath": "apps/cloud/ngsw-config.json",
        "webWorkerTsConfig": "apps/cloud/tsconfig.worker.json"
      },
      "configurations": {
        "production": {
          "budgets": [
            {
              "type": "initial",
              "maximumWarning": "500kb",
              "maximumError": "15mb"
            },
            {
              "type": "anyComponentStyle",
              "maximumWarning": "2kb",
              "maximumError": "50kb"
            }
          ],
          "fileReplacements": [
            {
              "replace": "apps/cloud/src/environments/environment.ts",
              "with": "apps/cloud/src/environments/environment.prod.ts"
            }
          ],
          "outputHashing": "all",
          "serviceWorker": true,
          "ngswConfigPath": "apps/cloud/ngsw-config.json"
        },
        "development": {
          "buildOptimizer": false,
          "optimization": false,
          "vendorChunk": true,
          "extractLicenses": false,
          "sourceMap": true,
          "namedChunks": true
        }
      },
      "defaultConfiguration": "production",
      "dependsOn": [
        {
          "projects": ["contracts"],
          "target": "build",
          "params": "ignore"
        },
        {
          "projects": ["sql"],
          "target": "build",
          "params": "ignore"
        }
      ]
    },
    "serve": {
      "executor": "@angular-devkit/build-angular:dev-server",
      "options": {
        "proxyConfig": "apps/cloud/proxy.conf.json"
      },
      "configurations": {
        "production": {
          "buildTarget": "cloud:build:production"
        },
        "development": {
          "buildTarget": "cloud:build:development",
          "proxyConfig": "apps/cloud/proxy.conf.json"
        }
      },
      "defaultConfiguration": "development"
    },
    "extract-i18n": {
      "executor": "@angular-devkit/build-angular:extract-i18n",
      "options": {
        "buildTarget": "cloud:build"
      }
    },
    "lint": {
      "executor": "@nx/eslint:lint",
      "options": {
        "lintFilePatterns": ["apps/cloud/src/**/*.ts", "apps/cloud/src/**/*.html"]
      }
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/apps/cloud"],
      "options": {
        "jestConfig": "apps/cloud/jest.config.ts",
        "webWorkerTsConfig": "apps/cloud/tsconfig.worker.json"
      }
    }
  },
  "tags": []
}
