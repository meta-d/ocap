"use strict";(self.webpackChunkocap=self.webpackChunkocap||[]).push([[1670],{"./node_modules/d3-geo/src/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{geoAlbers:()=>albers,geoAlbersUsa:()=>albersUsa,geoArea:()=>src_area,geoAzimuthalEqualArea:()=>azimuthalEqualArea,geoAzimuthalEqualAreaRaw:()=>azimuthalEqualAreaRaw,geoAzimuthalEquidistant:()=>azimuthalEquidistant,geoAzimuthalEquidistantRaw:()=>azimuthalEquidistantRaw,geoBounds:()=>bounds,geoCentroid:()=>centroid,geoCircle:()=>circle,geoClipAntimeridian:()=>antimeridian,geoClipCircle:()=>clip_circle,geoClipExtent:()=>extent,geoClipRectangle:()=>clipRectangle,geoConicConformal:()=>conicConformal,geoConicConformalRaw:()=>conicConformalRaw,geoConicEqualArea:()=>conicEqualArea,geoConicEqualAreaRaw:()=>conicEqualAreaRaw,geoConicEquidistant:()=>conicEquidistant,geoConicEquidistantRaw:()=>conicEquidistantRaw,geoContains:()=>contains,geoDistance:()=>distance,geoEqualEarth:()=>equalEarth,geoEqualEarthRaw:()=>equalEarthRaw,geoEquirectangular:()=>equirectangular,geoEquirectangularRaw:()=>equirectangularRaw,geoGnomonic:()=>gnomonic,geoGnomonicRaw:()=>gnomonicRaw,geoGraticule:()=>graticule,geoGraticule10:()=>graticule10,geoIdentity:()=>projection_identity,geoInterpolate:()=>interpolate,geoLength:()=>src_length,geoMercator:()=>mercator,geoMercatorRaw:()=>mercatorRaw,geoNaturalEarth1:()=>naturalEarth1,geoNaturalEarth1Raw:()=>naturalEarth1Raw,geoOrthographic:()=>orthographic,geoOrthographicRaw:()=>orthographicRaw,geoPath:()=>path,geoProjection:()=>projection,geoProjectionMutator:()=>projectionMutator,geoRotation:()=>rotation,geoStereographic:()=>stereographic,geoStereographicRaw:()=>stereographicRaw,geoStream:()=>stream,geoTransform:()=>transform,geoTransverseMercator:()=>transverseMercator,geoTransverseMercatorRaw:()=>transverseMercatorRaw});class Adder{constructor(){this._partials=new Float64Array(32),this._n=0}add(x){const p=this._partials;let i=0;for(let j=0;j<this._n&&j<32;j++){const y=p[j],hi=x+y,lo=Math.abs(x)<Math.abs(y)?x-(hi-y):y-(hi-x);lo&&(p[i++]=lo),x=hi}return p[i]=x,this._n=i+1,this}valueOf(){const p=this._partials;let x,y,lo,n=this._n,hi=0;if(n>0){for(hi=p[--n];n>0&&(x=hi,y=p[--n],hi=x+y,lo=y-(hi-x),!lo););n>0&&(lo<0&&p[n-1]<0||lo>0&&p[n-1]>0)&&(y=2*lo,x=hi+y,y==x-hi&&(hi=x))}return hi}}var epsilon=1e-6,epsilon2=1e-12,pi=Math.PI,halfPi=pi/2,quarterPi=pi/4,tau=2*pi,degrees=180/pi,radians=pi/180,abs=Math.abs,atan=Math.atan,atan2=Math.atan2,cos=Math.cos,ceil=Math.ceil,exp=Math.exp,hypot=(Math.floor,Math.hypot),log=Math.log,pow=Math.pow,sin=Math.sin,sign=Math.sign||function(x){return x>0?1:x<0?-1:0},sqrt=Math.sqrt,tan=Math.tan;function acos(x){return x>1?0:x<-1?pi:Math.acos(x)}function asin(x){return x>1?halfPi:x<-1?-halfPi:Math.asin(x)}function haversin(x){return(x=sin(x/2))*x}function noop(){}function streamGeometry(geometry,stream){geometry&&streamGeometryType.hasOwnProperty(geometry.type)&&streamGeometryType[geometry.type](geometry,stream)}var streamObjectType={Feature:function(object,stream){streamGeometry(object.geometry,stream)},FeatureCollection:function(object,stream){for(var features=object.features,i=-1,n=features.length;++i<n;)streamGeometry(features[i].geometry,stream)}},streamGeometryType={Sphere:function(object,stream){stream.sphere()},Point:function(object,stream){object=object.coordinates,stream.point(object[0],object[1],object[2])},MultiPoint:function(object,stream){for(var coordinates=object.coordinates,i=-1,n=coordinates.length;++i<n;)object=coordinates[i],stream.point(object[0],object[1],object[2])},LineString:function(object,stream){streamLine(object.coordinates,stream,0)},MultiLineString:function(object,stream){for(var coordinates=object.coordinates,i=-1,n=coordinates.length;++i<n;)streamLine(coordinates[i],stream,0)},Polygon:function(object,stream){streamPolygon(object.coordinates,stream)},MultiPolygon:function(object,stream){for(var coordinates=object.coordinates,i=-1,n=coordinates.length;++i<n;)streamPolygon(coordinates[i],stream)},GeometryCollection:function(object,stream){for(var geometries=object.geometries,i=-1,n=geometries.length;++i<n;)streamGeometry(geometries[i],stream)}};function streamLine(coordinates,stream,closed){var coordinate,i=-1,n=coordinates.length-closed;for(stream.lineStart();++i<n;)coordinate=coordinates[i],stream.point(coordinate[0],coordinate[1],coordinate[2]);stream.lineEnd()}function streamPolygon(coordinates,stream){var i=-1,n=coordinates.length;for(stream.polygonStart();++i<n;)streamLine(coordinates[i],stream,1);stream.polygonEnd()}function stream(object,stream){object&&streamObjectType.hasOwnProperty(object.type)?streamObjectType[object.type](object,stream):streamGeometry(object,stream)}var lambda00,phi00,lambda0,cosPhi0,sinPhi0,bounds_lambda0,phi0,lambda1,phi1,lambda2,bounds_lambda00,bounds_phi00,p0,deltaSum,ranges,range,areaRingSum=new Adder,areaSum=new Adder,areaStream={point:noop,lineStart:noop,lineEnd:noop,polygonStart:function(){areaRingSum=new Adder,areaStream.lineStart=areaRingStart,areaStream.lineEnd=areaRingEnd},polygonEnd:function(){var areaRing=+areaRingSum;areaSum.add(areaRing<0?tau+areaRing:areaRing),this.lineStart=this.lineEnd=this.point=noop},sphere:function(){areaSum.add(tau)}};function areaRingStart(){areaStream.point=areaPointFirst}function areaRingEnd(){areaPoint(lambda00,phi00)}function areaPointFirst(lambda,phi){areaStream.point=areaPoint,lambda00=lambda,phi00=phi,lambda0=lambda*=radians,cosPhi0=cos(phi=(phi*=radians)/2+quarterPi),sinPhi0=sin(phi)}function areaPoint(lambda,phi){var dLambda=(lambda*=radians)-lambda0,sdLambda=dLambda>=0?1:-1,adLambda=sdLambda*dLambda,cosPhi=cos(phi=(phi*=radians)/2+quarterPi),sinPhi=sin(phi),k=sinPhi0*sinPhi,u=cosPhi0*cosPhi+k*cos(adLambda),v=k*sdLambda*sin(adLambda);areaRingSum.add(atan2(v,u)),lambda0=lambda,cosPhi0=cosPhi,sinPhi0=sinPhi}function src_area(object){return areaSum=new Adder,stream(object,areaStream),2*areaSum}function spherical(cartesian){return[atan2(cartesian[1],cartesian[0]),asin(cartesian[2])]}function cartesian(spherical){var lambda=spherical[0],phi=spherical[1],cosPhi=cos(phi);return[cosPhi*cos(lambda),cosPhi*sin(lambda),sin(phi)]}function cartesianDot(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]}function cartesianCross(a,b){return[a[1]*b[2]-a[2]*b[1],a[2]*b[0]-a[0]*b[2],a[0]*b[1]-a[1]*b[0]]}function cartesianAddInPlace(a,b){a[0]+=b[0],a[1]+=b[1],a[2]+=b[2]}function cartesianScale(vector,k){return[vector[0]*k,vector[1]*k,vector[2]*k]}function cartesianNormalizeInPlace(d){var l=sqrt(d[0]*d[0]+d[1]*d[1]+d[2]*d[2]);d[0]/=l,d[1]/=l,d[2]/=l}var W0,W1,X0,Y0,Z0,X1,Y1,Z1,X2,Y2,Z2,centroid_lambda00,centroid_phi00,x0,y0,z0,boundsStream={point:boundsPoint,lineStart:boundsLineStart,lineEnd:boundsLineEnd,polygonStart:function(){boundsStream.point=boundsRingPoint,boundsStream.lineStart=boundsRingStart,boundsStream.lineEnd=boundsRingEnd,deltaSum=new Adder,areaStream.polygonStart()},polygonEnd:function(){areaStream.polygonEnd(),boundsStream.point=boundsPoint,boundsStream.lineStart=boundsLineStart,boundsStream.lineEnd=boundsLineEnd,areaRingSum<0?(bounds_lambda0=-(lambda1=180),phi0=-(phi1=90)):deltaSum>epsilon?phi1=90:deltaSum<-epsilon&&(phi0=-90),range[0]=bounds_lambda0,range[1]=lambda1},sphere:function(){bounds_lambda0=-(lambda1=180),phi0=-(phi1=90)}};function boundsPoint(lambda,phi){ranges.push(range=[bounds_lambda0=lambda,lambda1=lambda]),phi<phi0&&(phi0=phi),phi>phi1&&(phi1=phi)}function linePoint(lambda,phi){var p=cartesian([lambda*radians,phi*radians]);if(p0){var normal=cartesianCross(p0,p),inflection=cartesianCross([normal[1],-normal[0],0],normal);cartesianNormalizeInPlace(inflection),inflection=spherical(inflection);var phii,delta=lambda-lambda2,sign=delta>0?1:-1,lambdai=inflection[0]*degrees*sign,antimeridian=abs(delta)>180;antimeridian^(sign*lambda2<lambdai&&lambdai<sign*lambda)?(phii=inflection[1]*degrees)>phi1&&(phi1=phii):antimeridian^(sign*lambda2<(lambdai=(lambdai+360)%360-180)&&lambdai<sign*lambda)?(phii=-inflection[1]*degrees)<phi0&&(phi0=phii):(phi<phi0&&(phi0=phi),phi>phi1&&(phi1=phi)),antimeridian?lambda<lambda2?angle(bounds_lambda0,lambda)>angle(bounds_lambda0,lambda1)&&(lambda1=lambda):angle(lambda,lambda1)>angle(bounds_lambda0,lambda1)&&(bounds_lambda0=lambda):lambda1>=bounds_lambda0?(lambda<bounds_lambda0&&(bounds_lambda0=lambda),lambda>lambda1&&(lambda1=lambda)):lambda>lambda2?angle(bounds_lambda0,lambda)>angle(bounds_lambda0,lambda1)&&(lambda1=lambda):angle(lambda,lambda1)>angle(bounds_lambda0,lambda1)&&(bounds_lambda0=lambda)}else ranges.push(range=[bounds_lambda0=lambda,lambda1=lambda]);phi<phi0&&(phi0=phi),phi>phi1&&(phi1=phi),p0=p,lambda2=lambda}function boundsLineStart(){boundsStream.point=linePoint}function boundsLineEnd(){range[0]=bounds_lambda0,range[1]=lambda1,boundsStream.point=boundsPoint,p0=null}function boundsRingPoint(lambda,phi){if(p0){var delta=lambda-lambda2;deltaSum.add(abs(delta)>180?delta+(delta>0?360:-360):delta)}else bounds_lambda00=lambda,bounds_phi00=phi;areaStream.point(lambda,phi),linePoint(lambda,phi)}function boundsRingStart(){areaStream.lineStart()}function boundsRingEnd(){boundsRingPoint(bounds_lambda00,bounds_phi00),areaStream.lineEnd(),abs(deltaSum)>epsilon&&(bounds_lambda0=-(lambda1=180)),range[0]=bounds_lambda0,range[1]=lambda1,p0=null}function angle(lambda0,lambda1){return(lambda1-=lambda0)<0?lambda1+360:lambda1}function rangeCompare(a,b){return a[0]-b[0]}function rangeContains(range,x){return range[0]<=range[1]?range[0]<=x&&x<=range[1]:x<range[0]||range[1]<x}function bounds(feature){var i,n,a,b,merged,deltaMax,delta;if(phi1=lambda1=-(bounds_lambda0=phi0=1/0),ranges=[],stream(feature,boundsStream),n=ranges.length){for(ranges.sort(rangeCompare),i=1,merged=[a=ranges[0]];i<n;++i)rangeContains(a,(b=ranges[i])[0])||rangeContains(a,b[1])?(angle(a[0],b[1])>angle(a[0],a[1])&&(a[1]=b[1]),angle(b[0],a[1])>angle(a[0],a[1])&&(a[0]=b[0])):merged.push(a=b);for(deltaMax=-1/0,i=0,a=merged[n=merged.length-1];i<=n;a=b,++i)b=merged[i],(delta=angle(a[1],b[0]))>deltaMax&&(deltaMax=delta,bounds_lambda0=b[0],lambda1=a[1])}return ranges=range=null,bounds_lambda0===1/0||phi0===1/0?[[NaN,NaN],[NaN,NaN]]:[[bounds_lambda0,phi0],[lambda1,phi1]]}var centroidStream={sphere:noop,point:centroidPoint,lineStart:centroidLineStart,lineEnd:centroidLineEnd,polygonStart:function(){centroidStream.lineStart=centroidRingStart,centroidStream.lineEnd=centroidRingEnd},polygonEnd:function(){centroidStream.lineStart=centroidLineStart,centroidStream.lineEnd=centroidLineEnd}};function centroidPoint(lambda,phi){lambda*=radians;var cosPhi=cos(phi*=radians);centroidPointCartesian(cosPhi*cos(lambda),cosPhi*sin(lambda),sin(phi))}function centroidPointCartesian(x,y,z){++W0,X0+=(x-X0)/W0,Y0+=(y-Y0)/W0,Z0+=(z-Z0)/W0}function centroidLineStart(){centroidStream.point=centroidLinePointFirst}function centroidLinePointFirst(lambda,phi){lambda*=radians;var cosPhi=cos(phi*=radians);x0=cosPhi*cos(lambda),y0=cosPhi*sin(lambda),z0=sin(phi),centroidStream.point=centroidLinePoint,centroidPointCartesian(x0,y0,z0)}function centroidLinePoint(lambda,phi){lambda*=radians;var cosPhi=cos(phi*=radians),x=cosPhi*cos(lambda),y=cosPhi*sin(lambda),z=sin(phi),w=atan2(sqrt((w=y0*z-z0*y)*w+(w=z0*x-x0*z)*w+(w=x0*y-y0*x)*w),x0*x+y0*y+z0*z);W1+=w,X1+=w*(x0+(x0=x)),Y1+=w*(y0+(y0=y)),Z1+=w*(z0+(z0=z)),centroidPointCartesian(x0,y0,z0)}function centroidLineEnd(){centroidStream.point=centroidPoint}function centroidRingStart(){centroidStream.point=centroidRingPointFirst}function centroidRingEnd(){centroidRingPoint(centroid_lambda00,centroid_phi00),centroidStream.point=centroidPoint}function centroidRingPointFirst(lambda,phi){centroid_lambda00=lambda,centroid_phi00=phi,lambda*=radians,phi*=radians,centroidStream.point=centroidRingPoint;var cosPhi=cos(phi);x0=cosPhi*cos(lambda),y0=cosPhi*sin(lambda),z0=sin(phi),centroidPointCartesian(x0,y0,z0)}function centroidRingPoint(lambda,phi){lambda*=radians;var cosPhi=cos(phi*=radians),x=cosPhi*cos(lambda),y=cosPhi*sin(lambda),z=sin(phi),cx=y0*z-z0*y,cy=z0*x-x0*z,cz=x0*y-y0*x,m=hypot(cx,cy,cz),w=asin(m),v=m&&-w/m;X2.add(v*cx),Y2.add(v*cy),Z2.add(v*cz),W1+=w,X1+=w*(x0+(x0=x)),Y1+=w*(y0+(y0=y)),Z1+=w*(z0+(z0=z)),centroidPointCartesian(x0,y0,z0)}function centroid(object){W0=W1=X0=Y0=Z0=X1=Y1=Z1=0,X2=new Adder,Y2=new Adder,Z2=new Adder,stream(object,centroidStream);var x=+X2,y=+Y2,z=+Z2,m=hypot(x,y,z);return m<epsilon2&&(x=X1,y=Y1,z=Z1,W1<epsilon&&(x=X0,y=Y0,z=Z0),(m=hypot(x,y,z))<epsilon2)?[NaN,NaN]:[atan2(y,x)*degrees,asin(z/m)*degrees]}function constant(x){return function(){return x}}function compose(a,b){function compose(x,y){return x=a(x,y),b(x[0],x[1])}return a.invert&&b.invert&&(compose.invert=function(x,y){return(x=b.invert(x,y))&&a.invert(x[0],x[1])}),compose}function rotationIdentity(lambda,phi){return[abs(lambda)>pi?lambda+Math.round(-lambda/tau)*tau:lambda,phi]}function rotateRadians(deltaLambda,deltaPhi,deltaGamma){return(deltaLambda%=tau)?deltaPhi||deltaGamma?compose(rotationLambda(deltaLambda),rotationPhiGamma(deltaPhi,deltaGamma)):rotationLambda(deltaLambda):deltaPhi||deltaGamma?rotationPhiGamma(deltaPhi,deltaGamma):rotationIdentity}function forwardRotationLambda(deltaLambda){return function(lambda,phi){return[(lambda+=deltaLambda)>pi?lambda-tau:lambda<-pi?lambda+tau:lambda,phi]}}function rotationLambda(deltaLambda){var rotation=forwardRotationLambda(deltaLambda);return rotation.invert=forwardRotationLambda(-deltaLambda),rotation}function rotationPhiGamma(deltaPhi,deltaGamma){var cosDeltaPhi=cos(deltaPhi),sinDeltaPhi=sin(deltaPhi),cosDeltaGamma=cos(deltaGamma),sinDeltaGamma=sin(deltaGamma);function rotation(lambda,phi){var cosPhi=cos(phi),x=cos(lambda)*cosPhi,y=sin(lambda)*cosPhi,z=sin(phi),k=z*cosDeltaPhi+x*sinDeltaPhi;return[atan2(y*cosDeltaGamma-k*sinDeltaGamma,x*cosDeltaPhi-z*sinDeltaPhi),asin(k*cosDeltaGamma+y*sinDeltaGamma)]}return rotation.invert=function(lambda,phi){var cosPhi=cos(phi),x=cos(lambda)*cosPhi,y=sin(lambda)*cosPhi,z=sin(phi),k=z*cosDeltaGamma-y*sinDeltaGamma;return[atan2(y*cosDeltaGamma+z*sinDeltaGamma,x*cosDeltaPhi+k*sinDeltaPhi),asin(k*cosDeltaPhi-x*sinDeltaPhi)]},rotation}function rotation(rotate){function forward(coordinates){return(coordinates=rotate(coordinates[0]*radians,coordinates[1]*radians))[0]*=degrees,coordinates[1]*=degrees,coordinates}return rotate=rotateRadians(rotate[0]*radians,rotate[1]*radians,rotate.length>2?rotate[2]*radians:0),forward.invert=function(coordinates){return(coordinates=rotate.invert(coordinates[0]*radians,coordinates[1]*radians))[0]*=degrees,coordinates[1]*=degrees,coordinates},forward}function circleStream(stream,radius,delta,direction,t0,t1){if(delta){var cosRadius=cos(radius),sinRadius=sin(radius),step=direction*delta;null==t0?(t0=radius+direction*tau,t1=radius-step/2):(t0=circleRadius(cosRadius,t0),t1=circleRadius(cosRadius,t1),(direction>0?t0<t1:t0>t1)&&(t0+=direction*tau));for(var point,t=t0;direction>0?t>t1:t<t1;t-=step)point=spherical([cosRadius,-sinRadius*cos(t),-sinRadius*sin(t)]),stream.point(point[0],point[1])}}function circleRadius(cosRadius,point){(point=cartesian(point))[0]-=cosRadius,cartesianNormalizeInPlace(point);var radius=acos(-point[1]);return((-point[2]<0?-radius:radius)+tau-epsilon)%tau}function circle(){var ring,rotate,center=constant([0,0]),radius=constant(90),precision=constant(6),stream={point:function point(x,y){ring.push(x=rotate(x,y)),x[0]*=degrees,x[1]*=degrees}};function circle(){var c=center.apply(this,arguments),r=radius.apply(this,arguments)*radians,p=precision.apply(this,arguments)*radians;return ring=[],rotate=rotateRadians(-c[0]*radians,-c[1]*radians,0).invert,circleStream(stream,r,p,1),c={type:"Polygon",coordinates:[ring]},ring=rotate=null,c}return circle.center=function(_){return arguments.length?(center="function"==typeof _?_:constant([+_[0],+_[1]]),circle):center},circle.radius=function(_){return arguments.length?(radius="function"==typeof _?_:constant(+_),circle):radius},circle.precision=function(_){return arguments.length?(precision="function"==typeof _?_:constant(+_),circle):precision},circle}function buffer(){var line,lines=[];return{point:function(x,y,m){line.push([x,y,m])},lineStart:function(){lines.push(line=[])},lineEnd:noop,rejoin:function(){lines.length>1&&lines.push(lines.pop().concat(lines.shift()))},result:function(){var result=lines;return lines=[],line=null,result}}}function pointEqual(a,b){return abs(a[0]-b[0])<epsilon&&abs(a[1]-b[1])<epsilon}function Intersection(point,points,other,entry){this.x=point,this.z=points,this.o=other,this.e=entry,this.v=!1,this.n=this.p=null}function rejoin(segments,compareIntersection,startInside,interpolate,stream){var i,n,subject=[],clip=[];if(segments.forEach((function(segment){if(!((n=segment.length-1)<=0)){var n,x,p0=segment[0],p1=segment[n];if(pointEqual(p0,p1)){if(!p0[2]&&!p1[2]){for(stream.lineStart(),i=0;i<n;++i)stream.point((p0=segment[i])[0],p0[1]);return void stream.lineEnd()}p1[0]+=2*epsilon}subject.push(x=new Intersection(p0,segment,null,!0)),clip.push(x.o=new Intersection(p0,null,x,!1)),subject.push(x=new Intersection(p1,segment,null,!1)),clip.push(x.o=new Intersection(p1,null,x,!0))}})),subject.length){for(clip.sort(compareIntersection),rejoin_link(subject),rejoin_link(clip),i=0,n=clip.length;i<n;++i)clip[i].e=startInside=!startInside;for(var points,point,start=subject[0];;){for(var current=start,isSubject=!0;current.v;)if((current=current.n)===start)return;points=current.z,stream.lineStart();do{if(current.v=current.o.v=!0,current.e){if(isSubject)for(i=0,n=points.length;i<n;++i)stream.point((point=points[i])[0],point[1]);else interpolate(current.x,current.n.x,1,stream);current=current.n}else{if(isSubject)for(points=current.p.z,i=points.length-1;i>=0;--i)stream.point((point=points[i])[0],point[1]);else interpolate(current.x,current.p.x,-1,stream);current=current.p}points=(current=current.o).z,isSubject=!isSubject}while(!current.v);stream.lineEnd()}}}function rejoin_link(array){if(n=array.length){for(var n,b,i=0,a=array[0];++i<n;)a.n=b=array[i],b.p=a,a=b;a.n=b=array[0],b.p=a}}function longitude(point){return abs(point[0])<=pi?point[0]:sign(point[0])*((abs(point[0])+pi)%tau-pi)}function polygonContains(polygon,point){var lambda=longitude(point),phi=point[1],sinPhi=sin(phi),normal=[sin(lambda),-cos(lambda),0],angle=0,winding=0,sum=new Adder;1===sinPhi?phi=halfPi+epsilon:-1===sinPhi&&(phi=-halfPi-epsilon);for(var i=0,n=polygon.length;i<n;++i)if(m=(ring=polygon[i]).length)for(var ring,m,point0=ring[m-1],lambda0=longitude(point0),phi0=point0[1]/2+quarterPi,sinPhi0=sin(phi0),cosPhi0=cos(phi0),j=0;j<m;++j,lambda0=lambda1,sinPhi0=sinPhi1,cosPhi0=cosPhi1,point0=point1){var point1=ring[j],lambda1=longitude(point1),phi1=point1[1]/2+quarterPi,sinPhi1=sin(phi1),cosPhi1=cos(phi1),delta=lambda1-lambda0,sign=delta>=0?1:-1,absDelta=sign*delta,antimeridian=absDelta>pi,k=sinPhi0*sinPhi1;if(sum.add(atan2(k*sign*sin(absDelta),cosPhi0*cosPhi1+k*cos(absDelta))),angle+=antimeridian?delta+sign*tau:delta,antimeridian^lambda0>=lambda^lambda1>=lambda){var arc=cartesianCross(cartesian(point0),cartesian(point1));cartesianNormalizeInPlace(arc);var intersection=cartesianCross(normal,arc);cartesianNormalizeInPlace(intersection);var phiArc=(antimeridian^delta>=0?-1:1)*asin(intersection[2]);(phi>phiArc||phi===phiArc&&(arc[0]||arc[1]))&&(winding+=antimeridian^delta>=0?1:-1)}}return(angle<-epsilon||angle<epsilon&&sum<-epsilon2)^1&winding}function merge(arrays){return Array.from(function*flatten(arrays){for(const array of arrays)yield*array}(arrays))}function clip(pointVisible,clipLine,interpolate,start){return function(sink){var polygon,segments,ring,line=clipLine(sink),ringBuffer=buffer(),ringSink=clipLine(ringBuffer),polygonStarted=!1,clip={point,lineStart,lineEnd,polygonStart:function(){clip.point=pointRing,clip.lineStart=ringStart,clip.lineEnd=ringEnd,segments=[],polygon=[]},polygonEnd:function(){clip.point=point,clip.lineStart=lineStart,clip.lineEnd=lineEnd,segments=merge(segments);var startInside=polygonContains(polygon,start);segments.length?(polygonStarted||(sink.polygonStart(),polygonStarted=!0),rejoin(segments,compareIntersection,startInside,interpolate,sink)):startInside&&(polygonStarted||(sink.polygonStart(),polygonStarted=!0),sink.lineStart(),interpolate(null,null,1,sink),sink.lineEnd()),polygonStarted&&(sink.polygonEnd(),polygonStarted=!1),segments=polygon=null},sphere:function(){sink.polygonStart(),sink.lineStart(),interpolate(null,null,1,sink),sink.lineEnd(),sink.polygonEnd()}};function point(lambda,phi){pointVisible(lambda,phi)&&sink.point(lambda,phi)}function pointLine(lambda,phi){line.point(lambda,phi)}function lineStart(){clip.point=pointLine,line.lineStart()}function lineEnd(){clip.point=point,line.lineEnd()}function pointRing(lambda,phi){ring.push([lambda,phi]),ringSink.point(lambda,phi)}function ringStart(){ringSink.lineStart(),ring=[]}function ringEnd(){pointRing(ring[0][0],ring[0][1]),ringSink.lineEnd();var i,m,segment,point,clean=ringSink.clean(),ringSegments=ringBuffer.result(),n=ringSegments.length;if(ring.pop(),polygon.push(ring),ring=null,n)if(1&clean){if((m=(segment=ringSegments[0]).length-1)>0){for(polygonStarted||(sink.polygonStart(),polygonStarted=!0),sink.lineStart(),i=0;i<m;++i)sink.point((point=segment[i])[0],point[1]);sink.lineEnd()}}else n>1&&2&clean&&ringSegments.push(ringSegments.pop().concat(ringSegments.shift())),segments.push(ringSegments.filter(validSegment))}return clip}}function validSegment(segment){return segment.length>1}function compareIntersection(a,b){return((a=a.x)[0]<0?a[1]-halfPi-epsilon:halfPi-a[1])-((b=b.x)[0]<0?b[1]-halfPi-epsilon:halfPi-b[1])}rotationIdentity.invert=rotationIdentity;const antimeridian=clip((function(){return!0}),(function clipAntimeridianLine(stream){var clean,lambda0=NaN,phi0=NaN,sign0=NaN;return{lineStart:function(){stream.lineStart(),clean=1},point:function(lambda1,phi1){var sign1=lambda1>0?pi:-pi,delta=abs(lambda1-lambda0);abs(delta-pi)<epsilon?(stream.point(lambda0,phi0=(phi0+phi1)/2>0?halfPi:-halfPi),stream.point(sign0,phi0),stream.lineEnd(),stream.lineStart(),stream.point(sign1,phi0),stream.point(lambda1,phi0),clean=0):sign0!==sign1&&delta>=pi&&(abs(lambda0-sign0)<epsilon&&(lambda0-=sign0*epsilon),abs(lambda1-sign1)<epsilon&&(lambda1-=sign1*epsilon),phi0=function clipAntimeridianIntersect(lambda0,phi0,lambda1,phi1){var cosPhi0,cosPhi1,sinLambda0Lambda1=sin(lambda0-lambda1);return abs(sinLambda0Lambda1)>epsilon?atan((sin(phi0)*(cosPhi1=cos(phi1))*sin(lambda1)-sin(phi1)*(cosPhi0=cos(phi0))*sin(lambda0))/(cosPhi0*cosPhi1*sinLambda0Lambda1)):(phi0+phi1)/2}(lambda0,phi0,lambda1,phi1),stream.point(sign0,phi0),stream.lineEnd(),stream.lineStart(),stream.point(sign1,phi0),clean=0),stream.point(lambda0=lambda1,phi0=phi1),sign0=sign1},lineEnd:function(){stream.lineEnd(),lambda0=phi0=NaN},clean:function(){return 2-clean}}}),(function clipAntimeridianInterpolate(from,to,direction,stream){var phi;if(null==from)phi=direction*halfPi,stream.point(-pi,phi),stream.point(0,phi),stream.point(pi,phi),stream.point(pi,0),stream.point(pi,-phi),stream.point(0,-phi),stream.point(-pi,-phi),stream.point(-pi,0),stream.point(-pi,phi);else if(abs(from[0]-to[0])>epsilon){var lambda=from[0]<to[0]?pi:-pi;phi=direction*lambda/2,stream.point(-lambda,phi),stream.point(0,phi),stream.point(lambda,phi)}else stream.point(to[0],to[1])}),[-pi,-halfPi]);function clip_circle(radius){var cr=cos(radius),delta=6*radians,smallRadius=cr>0,notHemisphere=abs(cr)>epsilon;function visible(lambda,phi){return cos(lambda)*cos(phi)>cr}function intersect(a,b,two){var n1=[1,0,0],n2=cartesianCross(cartesian(a),cartesian(b)),n2n2=cartesianDot(n2,n2),n1n2=n2[0],determinant=n2n2-n1n2*n1n2;if(!determinant)return!two&&a;var c1=cr*n2n2/determinant,c2=-cr*n1n2/determinant,n1xn2=cartesianCross(n1,n2),A=cartesianScale(n1,c1);cartesianAddInPlace(A,cartesianScale(n2,c2));var u=n1xn2,w=cartesianDot(A,u),uu=cartesianDot(u,u),t2=w*w-uu*(cartesianDot(A,A)-1);if(!(t2<0)){var t=sqrt(t2),q=cartesianScale(u,(-w-t)/uu);if(cartesianAddInPlace(q,A),q=spherical(q),!two)return q;var z,lambda0=a[0],lambda1=b[0],phi0=a[1],phi1=b[1];lambda1<lambda0&&(z=lambda0,lambda0=lambda1,lambda1=z);var delta=lambda1-lambda0,polar=abs(delta-pi)<epsilon;if(!polar&&phi1<phi0&&(z=phi0,phi0=phi1,phi1=z),polar||delta<epsilon?polar?phi0+phi1>0^q[1]<(abs(q[0]-lambda0)<epsilon?phi0:phi1):phi0<=q[1]&&q[1]<=phi1:delta>pi^(lambda0<=q[0]&&q[0]<=lambda1)){var q1=cartesianScale(u,(-w+t)/uu);return cartesianAddInPlace(q1,A),[q,spherical(q1)]}}}function code(lambda,phi){var r=smallRadius?radius:pi-radius,code=0;return lambda<-r?code|=1:lambda>r&&(code|=2),phi<-r?code|=4:phi>r&&(code|=8),code}return clip(visible,(function clipLine(stream){var point0,c0,v0,v00,clean;return{lineStart:function(){v00=v0=!1,clean=1},point:function(lambda,phi){var point2,point1=[lambda,phi],v=visible(lambda,phi),c=smallRadius?v?0:code(lambda,phi):v?code(lambda+(lambda<0?pi:-pi),phi):0;if(!point0&&(v00=v0=v)&&stream.lineStart(),v!==v0&&(!(point2=intersect(point0,point1))||pointEqual(point0,point2)||pointEqual(point1,point2))&&(point1[2]=1),v!==v0)clean=0,v?(stream.lineStart(),point2=intersect(point1,point0),stream.point(point2[0],point2[1])):(point2=intersect(point0,point1),stream.point(point2[0],point2[1],2),stream.lineEnd()),point0=point2;else if(notHemisphere&&point0&&smallRadius^v){var t;c&c0||!(t=intersect(point1,point0,!0))||(clean=0,smallRadius?(stream.lineStart(),stream.point(t[0][0],t[0][1]),stream.point(t[1][0],t[1][1]),stream.lineEnd()):(stream.point(t[1][0],t[1][1]),stream.lineEnd(),stream.lineStart(),stream.point(t[0][0],t[0][1],3)))}!v||point0&&pointEqual(point0,point1)||stream.point(point1[0],point1[1]),point0=point1,v0=v,c0=c},lineEnd:function(){v0&&stream.lineEnd(),point0=null},clean:function(){return clean|(v00&&v0)<<1}}}),(function interpolate(from,to,direction,stream){circleStream(stream,radius,delta,direction,from,to)}),smallRadius?[0,-radius]:[-pi,radius-pi])}var lengthSum,length_lambda0,length_sinPhi0,length_cosPhi0,clipMax=1e9,clipMin=-clipMax;function clipRectangle(x0,y0,x1,y1){function visible(x,y){return x0<=x&&x<=x1&&y0<=y&&y<=y1}function interpolate(from,to,direction,stream){var a=0,a1=0;if(null==from||(a=corner(from,direction))!==(a1=corner(to,direction))||comparePoint(from,to)<0^direction>0)do{stream.point(0===a||3===a?x0:x1,a>1?y1:y0)}while((a=(a+direction+4)%4)!==a1);else stream.point(to[0],to[1])}function corner(p,direction){return abs(p[0]-x0)<epsilon?direction>0?0:3:abs(p[0]-x1)<epsilon?direction>0?2:1:abs(p[1]-y0)<epsilon?direction>0?1:0:direction>0?3:2}function compareIntersection(a,b){return comparePoint(a.x,b.x)}function comparePoint(a,b){var ca=corner(a,1),cb=corner(b,1);return ca!==cb?ca-cb:0===ca?b[1]-a[1]:1===ca?a[0]-b[0]:2===ca?a[1]-b[1]:b[0]-a[0]}return function(stream){var segments,polygon,ring,x__,y__,v__,x_,y_,v_,first,clean,activeStream=stream,bufferStream=buffer(),clipStream={point,lineStart:function lineStart(){clipStream.point=linePoint,polygon&&polygon.push(ring=[]);first=!0,v_=!1,x_=y_=NaN},lineEnd:function lineEnd(){segments&&(linePoint(x__,y__),v__&&v_&&bufferStream.rejoin(),segments.push(bufferStream.result()));clipStream.point=point,v_&&activeStream.lineEnd()},polygonStart:function polygonStart(){activeStream=bufferStream,segments=[],polygon=[],clean=!0},polygonEnd:function polygonEnd(){var startInside=function polygonInside(){for(var winding=0,i=0,n=polygon.length;i<n;++i)for(var a0,a1,ring=polygon[i],j=1,m=ring.length,point=ring[0],b0=point[0],b1=point[1];j<m;++j)a0=b0,a1=b1,b0=(point=ring[j])[0],b1=point[1],a1<=y1?b1>y1&&(b0-a0)*(y1-a1)>(b1-a1)*(x0-a0)&&++winding:b1<=y1&&(b0-a0)*(y1-a1)<(b1-a1)*(x0-a0)&&--winding;return winding}(),cleanInside=clean&&startInside,visible=(segments=merge(segments)).length;(cleanInside||visible)&&(stream.polygonStart(),cleanInside&&(stream.lineStart(),interpolate(null,null,1,stream),stream.lineEnd()),visible&&rejoin(segments,compareIntersection,startInside,interpolate,stream),stream.polygonEnd());activeStream=stream,segments=polygon=ring=null}};function point(x,y){visible(x,y)&&activeStream.point(x,y)}function linePoint(x,y){var v=visible(x,y);if(polygon&&ring.push([x,y]),first)x__=x,y__=y,v__=v,first=!1,v&&(activeStream.lineStart(),activeStream.point(x,y));else if(v&&v_)activeStream.point(x,y);else{var a=[x_=Math.max(clipMin,Math.min(clipMax,x_)),y_=Math.max(clipMin,Math.min(clipMax,y_))],b=[x=Math.max(clipMin,Math.min(clipMax,x)),y=Math.max(clipMin,Math.min(clipMax,y))];!function line(a,b,x0,y0,x1,y1){var r,ax=a[0],ay=a[1],t0=0,t1=1,dx=b[0]-ax,dy=b[1]-ay;if(r=x0-ax,dx||!(r>0)){if(r/=dx,dx<0){if(r<t0)return;r<t1&&(t1=r)}else if(dx>0){if(r>t1)return;r>t0&&(t0=r)}if(r=x1-ax,dx||!(r<0)){if(r/=dx,dx<0){if(r>t1)return;r>t0&&(t0=r)}else if(dx>0){if(r<t0)return;r<t1&&(t1=r)}if(r=y0-ay,dy||!(r>0)){if(r/=dy,dy<0){if(r<t0)return;r<t1&&(t1=r)}else if(dy>0){if(r>t1)return;r>t0&&(t0=r)}if(r=y1-ay,dy||!(r<0)){if(r/=dy,dy<0){if(r>t1)return;r>t0&&(t0=r)}else if(dy>0){if(r<t0)return;r<t1&&(t1=r)}return t0>0&&(a[0]=ax+t0*dx,a[1]=ay+t0*dy),t1<1&&(b[0]=ax+t1*dx,b[1]=ay+t1*dy),!0}}}}}(a,b,x0,y0,x1,y1)?v&&(activeStream.lineStart(),activeStream.point(x,y),clean=!1):(v_||(activeStream.lineStart(),activeStream.point(a[0],a[1])),activeStream.point(b[0],b[1]),v||activeStream.lineEnd(),clean=!1)}x_=x,y_=y,v_=v}return clipStream}}function extent(){var cache,cacheStream,clip,x0=0,y0=0,x1=960,y1=500;return clip={stream:function(stream){return cache&&cacheStream===stream?cache:cache=clipRectangle(x0,y0,x1,y1)(cacheStream=stream)},extent:function(_){return arguments.length?(x0=+_[0][0],y0=+_[0][1],x1=+_[1][0],y1=+_[1][1],cache=cacheStream=null,clip):[[x0,y0],[x1,y1]]}}}var lengthStream={sphere:noop,point:noop,lineStart:function lengthLineStart(){lengthStream.point=lengthPointFirst,lengthStream.lineEnd=lengthLineEnd},lineEnd:noop,polygonStart:noop,polygonEnd:noop};function lengthLineEnd(){lengthStream.point=lengthStream.lineEnd=noop}function lengthPointFirst(lambda,phi){length_lambda0=lambda*=radians,length_sinPhi0=sin(phi*=radians),length_cosPhi0=cos(phi),lengthStream.point=lengthPoint}function lengthPoint(lambda,phi){lambda*=radians;var sinPhi=sin(phi*=radians),cosPhi=cos(phi),delta=abs(lambda-length_lambda0),cosDelta=cos(delta),x=cosPhi*sin(delta),y=length_cosPhi0*sinPhi-length_sinPhi0*cosPhi*cosDelta,z=length_sinPhi0*sinPhi+length_cosPhi0*cosPhi*cosDelta;lengthSum.add(atan2(sqrt(x*x+y*y),z)),length_lambda0=lambda,length_sinPhi0=sinPhi,length_cosPhi0=cosPhi}function src_length(object){return lengthSum=new Adder,stream(object,lengthStream),+lengthSum}var coordinates=[null,null],object={type:"LineString",coordinates};function distance(a,b){return coordinates[0]=a,coordinates[1]=b,src_length(object)}var containsObjectType={Feature:function(object,point){return containsGeometry(object.geometry,point)},FeatureCollection:function(object,point){for(var features=object.features,i=-1,n=features.length;++i<n;)if(containsGeometry(features[i].geometry,point))return!0;return!1}},containsGeometryType={Sphere:function(){return!0},Point:function(object,point){return containsPoint(object.coordinates,point)},MultiPoint:function(object,point){for(var coordinates=object.coordinates,i=-1,n=coordinates.length;++i<n;)if(containsPoint(coordinates[i],point))return!0;return!1},LineString:function(object,point){return containsLine(object.coordinates,point)},MultiLineString:function(object,point){for(var coordinates=object.coordinates,i=-1,n=coordinates.length;++i<n;)if(containsLine(coordinates[i],point))return!0;return!1},Polygon:function(object,point){return containsPolygon(object.coordinates,point)},MultiPolygon:function(object,point){for(var coordinates=object.coordinates,i=-1,n=coordinates.length;++i<n;)if(containsPolygon(coordinates[i],point))return!0;return!1},GeometryCollection:function(object,point){for(var geometries=object.geometries,i=-1,n=geometries.length;++i<n;)if(containsGeometry(geometries[i],point))return!0;return!1}};function containsGeometry(geometry,point){return!(!geometry||!containsGeometryType.hasOwnProperty(geometry.type))&&containsGeometryType[geometry.type](geometry,point)}function containsPoint(coordinates,point){return 0===distance(coordinates,point)}function containsLine(coordinates,point){for(var ao,bo,ab,i=0,n=coordinates.length;i<n;i++){if(0===(bo=distance(coordinates[i],point)))return!0;if(i>0&&(ab=distance(coordinates[i],coordinates[i-1]))>0&&ao<=ab&&bo<=ab&&(ao+bo-ab)*(1-Math.pow((ao-bo)/ab,2))<epsilon2*ab)return!0;ao=bo}return!1}function containsPolygon(coordinates,point){return!!polygonContains(coordinates.map(ringRadians),pointRadians(point))}function ringRadians(ring){return(ring=ring.map(pointRadians)).pop(),ring}function pointRadians(point){return[point[0]*radians,point[1]*radians]}function contains(object,point){return(object&&containsObjectType.hasOwnProperty(object.type)?containsObjectType[object.type]:containsGeometry)(object,point)}function range_range(start,stop,step){start=+start,stop=+stop,step=(n=arguments.length)<2?(stop=start,start=0,1):n<3?1:+step;for(var i=-1,n=0|Math.max(0,Math.ceil((stop-start)/step)),range=new Array(n);++i<n;)range[i]=start+i*step;return range}function graticuleX(y0,y1,dy){var y=range_range(y0,y1-epsilon,dy).concat(y1);return function(x){return y.map((function(y){return[x,y]}))}}function graticuleY(x0,x1,dx){var x=range_range(x0,x1-epsilon,dx).concat(x1);return function(y){return x.map((function(x){return[x,y]}))}}function graticule(){var x1,x0,X1,X0,y1,y0,Y1,Y0,x,y,X,Y,dx=10,dy=dx,DX=90,DY=360,precision=2.5;function graticule(){return{type:"MultiLineString",coordinates:lines()}}function lines(){return range_range(ceil(X0/DX)*DX,X1,DX).map(X).concat(range_range(ceil(Y0/DY)*DY,Y1,DY).map(Y)).concat(range_range(ceil(x0/dx)*dx,x1,dx).filter((function(x){return abs(x%DX)>epsilon})).map(x)).concat(range_range(ceil(y0/dy)*dy,y1,dy).filter((function(y){return abs(y%DY)>epsilon})).map(y))}return graticule.lines=function(){return lines().map((function(coordinates){return{type:"LineString",coordinates}}))},graticule.outline=function(){return{type:"Polygon",coordinates:[X(X0).concat(Y(Y1).slice(1),X(X1).reverse().slice(1),Y(Y0).reverse().slice(1))]}},graticule.extent=function(_){return arguments.length?graticule.extentMajor(_).extentMinor(_):graticule.extentMinor()},graticule.extentMajor=function(_){return arguments.length?(X0=+_[0][0],X1=+_[1][0],Y0=+_[0][1],Y1=+_[1][1],X0>X1&&(_=X0,X0=X1,X1=_),Y0>Y1&&(_=Y0,Y0=Y1,Y1=_),graticule.precision(precision)):[[X0,Y0],[X1,Y1]]},graticule.extentMinor=function(_){return arguments.length?(x0=+_[0][0],x1=+_[1][0],y0=+_[0][1],y1=+_[1][1],x0>x1&&(_=x0,x0=x1,x1=_),y0>y1&&(_=y0,y0=y1,y1=_),graticule.precision(precision)):[[x0,y0],[x1,y1]]},graticule.step=function(_){return arguments.length?graticule.stepMajor(_).stepMinor(_):graticule.stepMinor()},graticule.stepMajor=function(_){return arguments.length?(DX=+_[0],DY=+_[1],graticule):[DX,DY]},graticule.stepMinor=function(_){return arguments.length?(dx=+_[0],dy=+_[1],graticule):[dx,dy]},graticule.precision=function(_){return arguments.length?(precision=+_,x=graticuleX(y0,y1,90),y=graticuleY(x0,x1,precision),X=graticuleX(Y0,Y1,90),Y=graticuleY(X0,X1,precision),graticule):precision},graticule.extentMajor([[-180,-90+epsilon],[180,90-epsilon]]).extentMinor([[-180,-80-epsilon],[180,80+epsilon]])}function graticule10(){return graticule()()}function interpolate(a,b){var x0=a[0]*radians,y0=a[1]*radians,x1=b[0]*radians,y1=b[1]*radians,cy0=cos(y0),sy0=sin(y0),cy1=cos(y1),sy1=sin(y1),kx0=cy0*cos(x0),ky0=cy0*sin(x0),kx1=cy1*cos(x1),ky1=cy1*sin(x1),d=2*asin(sqrt(haversin(y1-y0)+cy0*cy1*haversin(x1-x0))),k=sin(d),interpolate=d?function(t){var B=sin(t*=d)/k,A=sin(d-t)/k,x=A*kx0+B*kx1,y=A*ky0+B*ky1,z=A*sy0+B*sy1;return[atan2(y,x)*degrees,atan2(z,sqrt(x*x+y*y))*degrees]}:function(){return[x0*degrees,y0*degrees]};return interpolate.distance=d,interpolate}const identity=x=>x;var x00,y00,area_x0,area_y0,area_areaSum=new Adder,area_areaRingSum=new Adder,area_areaStream={point:noop,lineStart:noop,lineEnd:noop,polygonStart:function(){area_areaStream.lineStart=area_areaRingStart,area_areaStream.lineEnd=area_areaRingEnd},polygonEnd:function(){area_areaStream.lineStart=area_areaStream.lineEnd=area_areaStream.point=noop,area_areaSum.add(abs(area_areaRingSum)),area_areaRingSum=new Adder},result:function(){var area=area_areaSum/2;return area_areaSum=new Adder,area}};function area_areaRingStart(){area_areaStream.point=area_areaPointFirst}function area_areaPointFirst(x,y){area_areaStream.point=area_areaPoint,x00=area_x0=x,y00=area_y0=y}function area_areaPoint(x,y){area_areaRingSum.add(area_y0*x-area_x0*y),area_x0=x,area_y0=y}function area_areaRingEnd(){area_areaPoint(x00,y00)}const path_area=area_areaStream;var bounds_x0=1/0,bounds_y0=bounds_x0,x1=-bounds_x0,y1=x1,bounds_boundsStream={point:function bounds_boundsPoint(x,y){x<bounds_x0&&(bounds_x0=x);x>x1&&(x1=x);y<bounds_y0&&(bounds_y0=y);y>y1&&(y1=y)},lineStart:noop,lineEnd:noop,polygonStart:noop,polygonEnd:noop,result:function(){var bounds=[[bounds_x0,bounds_y0],[x1,y1]];return x1=y1=-(bounds_y0=bounds_x0=1/0),bounds}};const path_bounds=bounds_boundsStream;var centroid_x00,centroid_y00,centroid_x0,centroid_y0,centroid_X0=0,centroid_Y0=0,centroid_Z0=0,centroid_X1=0,centroid_Y1=0,centroid_Z1=0,centroid_X2=0,centroid_Y2=0,centroid_Z2=0,centroid_centroidStream={point:centroid_centroidPoint,lineStart:centroid_centroidLineStart,lineEnd:centroid_centroidLineEnd,polygonStart:function(){centroid_centroidStream.lineStart=centroid_centroidRingStart,centroid_centroidStream.lineEnd=centroid_centroidRingEnd},polygonEnd:function(){centroid_centroidStream.point=centroid_centroidPoint,centroid_centroidStream.lineStart=centroid_centroidLineStart,centroid_centroidStream.lineEnd=centroid_centroidLineEnd},result:function(){var centroid=centroid_Z2?[centroid_X2/centroid_Z2,centroid_Y2/centroid_Z2]:centroid_Z1?[centroid_X1/centroid_Z1,centroid_Y1/centroid_Z1]:centroid_Z0?[centroid_X0/centroid_Z0,centroid_Y0/centroid_Z0]:[NaN,NaN];return centroid_X0=centroid_Y0=centroid_Z0=centroid_X1=centroid_Y1=centroid_Z1=centroid_X2=centroid_Y2=centroid_Z2=0,centroid}};function centroid_centroidPoint(x,y){centroid_X0+=x,centroid_Y0+=y,++centroid_Z0}function centroid_centroidLineStart(){centroid_centroidStream.point=centroidPointFirstLine}function centroidPointFirstLine(x,y){centroid_centroidStream.point=centroidPointLine,centroid_centroidPoint(centroid_x0=x,centroid_y0=y)}function centroidPointLine(x,y){var dx=x-centroid_x0,dy=y-centroid_y0,z=sqrt(dx*dx+dy*dy);centroid_X1+=z*(centroid_x0+x)/2,centroid_Y1+=z*(centroid_y0+y)/2,centroid_Z1+=z,centroid_centroidPoint(centroid_x0=x,centroid_y0=y)}function centroid_centroidLineEnd(){centroid_centroidStream.point=centroid_centroidPoint}function centroid_centroidRingStart(){centroid_centroidStream.point=centroidPointFirstRing}function centroid_centroidRingEnd(){centroidPointRing(centroid_x00,centroid_y00)}function centroidPointFirstRing(x,y){centroid_centroidStream.point=centroidPointRing,centroid_centroidPoint(centroid_x00=centroid_x0=x,centroid_y00=centroid_y0=y)}function centroidPointRing(x,y){var dx=x-centroid_x0,dy=y-centroid_y0,z=sqrt(dx*dx+dy*dy);centroid_X1+=z*(centroid_x0+x)/2,centroid_Y1+=z*(centroid_y0+y)/2,centroid_Z1+=z,centroid_X2+=(z=centroid_y0*x-centroid_x0*y)*(centroid_x0+x),centroid_Y2+=z*(centroid_y0+y),centroid_Z2+=3*z,centroid_centroidPoint(centroid_x0=x,centroid_y0=y)}const path_centroid=centroid_centroidStream;function PathContext(context){this._context=context}PathContext.prototype={_radius:4.5,pointRadius:function(_){return this._radius=_,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(x,y){switch(this._point){case 0:this._context.moveTo(x,y),this._point=1;break;case 1:this._context.lineTo(x,y);break;default:this._context.moveTo(x+this._radius,y),this._context.arc(x,y,this._radius,0,tau)}},result:noop};var lengthRing,measure_x00,measure_y00,measure_x0,measure_y0,measure_lengthSum=new Adder,measure_lengthStream={point:noop,lineStart:function(){measure_lengthStream.point=measure_lengthPointFirst},lineEnd:function(){lengthRing&&measure_lengthPoint(measure_x00,measure_y00),measure_lengthStream.point=noop},polygonStart:function(){lengthRing=!0},polygonEnd:function(){lengthRing=null},result:function(){var length=+measure_lengthSum;return measure_lengthSum=new Adder,length}};function measure_lengthPointFirst(x,y){measure_lengthStream.point=measure_lengthPoint,measure_x00=measure_x0=x,measure_y00=measure_y0=y}function measure_lengthPoint(x,y){measure_x0-=x,measure_y0-=y,measure_lengthSum.add(sqrt(measure_x0*measure_x0+measure_y0*measure_y0)),measure_x0=x,measure_y0=y}const measure=measure_lengthStream;function PathString(){this._string=[]}function string_circle(radius){return"m0,"+radius+"a"+radius+","+radius+" 0 1,1 0,"+-2*radius+"a"+radius+","+radius+" 0 1,1 0,"+2*radius+"z"}function path(projection,context){var projectionStream,contextStream,pointRadius=4.5;function path(object){return object&&("function"==typeof pointRadius&&contextStream.pointRadius(+pointRadius.apply(this,arguments)),stream(object,projectionStream(contextStream))),contextStream.result()}return path.area=function(object){return stream(object,projectionStream(path_area)),path_area.result()},path.measure=function(object){return stream(object,projectionStream(measure)),measure.result()},path.bounds=function(object){return stream(object,projectionStream(path_bounds)),path_bounds.result()},path.centroid=function(object){return stream(object,projectionStream(path_centroid)),path_centroid.result()},path.projection=function(_){return arguments.length?(projectionStream=null==_?(projection=null,identity):(projection=_).stream,path):projection},path.context=function(_){return arguments.length?(contextStream=null==_?(context=null,new PathString):new PathContext(context=_),"function"!=typeof pointRadius&&contextStream.pointRadius(pointRadius),path):context},path.pointRadius=function(_){return arguments.length?(pointRadius="function"==typeof _?_:(contextStream.pointRadius(+_),+_),path):pointRadius},path.projection(projection).context(context)}function transform(methods){return{stream:transformer(methods)}}function transformer(methods){return function(stream){var s=new TransformStream;for(var key in methods)s[key]=methods[key];return s.stream=stream,s}}function TransformStream(){}function fit(projection,fitBounds,object){var clip=projection.clipExtent&&projection.clipExtent();return projection.scale(150).translate([0,0]),null!=clip&&projection.clipExtent(null),stream(object,projection.stream(path_bounds)),fitBounds(path_bounds.result()),null!=clip&&projection.clipExtent(clip),projection}function fitExtent(projection,extent,object){return fit(projection,(function(b){var w=extent[1][0]-extent[0][0],h=extent[1][1]-extent[0][1],k=Math.min(w/(b[1][0]-b[0][0]),h/(b[1][1]-b[0][1])),x=+extent[0][0]+(w-k*(b[1][0]+b[0][0]))/2,y=+extent[0][1]+(h-k*(b[1][1]+b[0][1]))/2;projection.scale(150*k).translate([x,y])}),object)}function fitSize(projection,size,object){return fitExtent(projection,[[0,0],size],object)}function fitWidth(projection,width,object){return fit(projection,(function(b){var w=+width,k=w/(b[1][0]-b[0][0]),x=(w-k*(b[1][0]+b[0][0]))/2,y=-k*b[0][1];projection.scale(150*k).translate([x,y])}),object)}function fitHeight(projection,height,object){return fit(projection,(function(b){var h=+height,k=h/(b[1][1]-b[0][1]),x=-k*b[0][0],y=(h-k*(b[1][1]+b[0][1]))/2;projection.scale(150*k).translate([x,y])}),object)}PathString.prototype={_radius:4.5,_circle:string_circle(4.5),pointRadius:function(_){return(_=+_)!==this._radius&&(this._radius=_,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push("Z"),this._point=NaN},point:function(x,y){switch(this._point){case 0:this._string.push("M",x,",",y),this._point=1;break;case 1:this._string.push("L",x,",",y);break;default:null==this._circle&&(this._circle=string_circle(this._radius)),this._string.push("M",x,",",y,this._circle)}},result:function(){if(this._string.length){var result=this._string.join("");return this._string=[],result}return null}},TransformStream.prototype={constructor:TransformStream,point:function(x,y){this.stream.point(x,y)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var maxDepth=16,cosMinDistance=cos(30*radians);function resample(project,delta2){return+delta2?function resample_resample(project,delta2){function resampleLineTo(x0,y0,lambda0,a0,b0,c0,x1,y1,lambda1,a1,b1,c1,depth,stream){var dx=x1-x0,dy=y1-y0,d2=dx*dx+dy*dy;if(d2>4*delta2&&depth--){var a=a0+a1,b=b0+b1,c=c0+c1,m=sqrt(a*a+b*b+c*c),phi2=asin(c/=m),lambda2=abs(abs(c)-1)<epsilon||abs(lambda0-lambda1)<epsilon?(lambda0+lambda1)/2:atan2(b,a),p=project(lambda2,phi2),x2=p[0],y2=p[1],dx2=x2-x0,dy2=y2-y0,dz=dy*dx2-dx*dy2;(dz*dz/d2>delta2||abs((dx*dx2+dy*dy2)/d2-.5)>.3||a0*a1+b0*b1+c0*c1<cosMinDistance)&&(resampleLineTo(x0,y0,lambda0,a0,b0,c0,x2,y2,lambda2,a/=m,b/=m,c,depth,stream),stream.point(x2,y2),resampleLineTo(x2,y2,lambda2,a,b,c,x1,y1,lambda1,a1,b1,c1,depth,stream))}}return function(stream){var lambda00,x00,y00,a00,b00,c00,lambda0,x0,y0,a0,b0,c0,resampleStream={point,lineStart,lineEnd,polygonStart:function(){stream.polygonStart(),resampleStream.lineStart=ringStart},polygonEnd:function(){stream.polygonEnd(),resampleStream.lineStart=lineStart}};function point(x,y){x=project(x,y),stream.point(x[0],x[1])}function lineStart(){x0=NaN,resampleStream.point=linePoint,stream.lineStart()}function linePoint(lambda,phi){var c=cartesian([lambda,phi]),p=project(lambda,phi);resampleLineTo(x0,y0,lambda0,a0,b0,c0,x0=p[0],y0=p[1],lambda0=lambda,a0=c[0],b0=c[1],c0=c[2],maxDepth,stream),stream.point(x0,y0)}function lineEnd(){resampleStream.point=point,stream.lineEnd()}function ringStart(){lineStart(),resampleStream.point=ringPoint,resampleStream.lineEnd=ringEnd}function ringPoint(lambda,phi){linePoint(lambda00=lambda,phi),x00=x0,y00=y0,a00=a0,b00=b0,c00=c0,resampleStream.point=linePoint}function ringEnd(){resampleLineTo(x0,y0,lambda0,a0,b0,c0,x00,y00,lambda00,a00,b00,c00,maxDepth,stream),resampleStream.lineEnd=lineEnd,lineEnd()}return resampleStream}}(project,delta2):function resampleNone(project){return transformer({point:function(x,y){x=project(x,y),this.stream.point(x[0],x[1])}})}(project)}var transformRadians=transformer({point:function(x,y){this.stream.point(x*radians,y*radians)}});function scaleTranslateRotate(k,dx,dy,sx,sy,alpha){if(!alpha)return function scaleTranslate(k,dx,dy,sx,sy){function transform(x,y){return[dx+k*(x*=sx),dy-k*(y*=sy)]}return transform.invert=function(x,y){return[(x-dx)/k*sx,(dy-y)/k*sy]},transform}(k,dx,dy,sx,sy);var cosAlpha=cos(alpha),sinAlpha=sin(alpha),a=cosAlpha*k,b=sinAlpha*k,ai=cosAlpha/k,bi=sinAlpha/k,ci=(sinAlpha*dy-cosAlpha*dx)/k,fi=(sinAlpha*dx+cosAlpha*dy)/k;function transform(x,y){return[a*(x*=sx)-b*(y*=sy)+dx,dy-b*x-a*y]}return transform.invert=function(x,y){return[sx*(ai*x-bi*y+ci),sy*(fi-bi*x-ai*y)]},transform}function projection(project){return projectionMutator((function(){return project}))()}function projectionMutator(projectAt){var project,rotate,y0,x1,y1,projectResample,projectTransform,projectRotateTransform,cache,cacheStream,k=150,x=480,y=250,lambda=0,phi=0,deltaLambda=0,deltaPhi=0,deltaGamma=0,alpha=0,sx=1,sy=1,theta=null,preclip=antimeridian,x0=null,postclip=identity,delta2=.5;function projection(point){return projectRotateTransform(point[0]*radians,point[1]*radians)}function invert(point){return(point=projectRotateTransform.invert(point[0],point[1]))&&[point[0]*degrees,point[1]*degrees]}function recenter(){var center=scaleTranslateRotate(k,0,0,sx,sy,alpha).apply(null,project(lambda,phi)),transform=scaleTranslateRotate(k,x-center[0],y-center[1],sx,sy,alpha);return rotate=rotateRadians(deltaLambda,deltaPhi,deltaGamma),projectTransform=compose(project,transform),projectRotateTransform=compose(rotate,projectTransform),projectResample=resample(projectTransform,delta2),reset()}function reset(){return cache=cacheStream=null,projection}return projection.stream=function(stream){return cache&&cacheStream===stream?cache:cache=transformRadians(function transformRotate(rotate){return transformer({point:function(x,y){var r=rotate(x,y);return this.stream.point(r[0],r[1])}})}(rotate)(preclip(projectResample(postclip(cacheStream=stream)))))},projection.preclip=function(_){return arguments.length?(preclip=_,theta=void 0,reset()):preclip},projection.postclip=function(_){return arguments.length?(postclip=_,x0=y0=x1=y1=null,reset()):postclip},projection.clipAngle=function(_){return arguments.length?(preclip=+_?clip_circle(theta=_*radians):(theta=null,antimeridian),reset()):theta*degrees},projection.clipExtent=function(_){return arguments.length?(postclip=null==_?(x0=y0=x1=y1=null,identity):clipRectangle(x0=+_[0][0],y0=+_[0][1],x1=+_[1][0],y1=+_[1][1]),reset()):null==x0?null:[[x0,y0],[x1,y1]]},projection.scale=function(_){return arguments.length?(k=+_,recenter()):k},projection.translate=function(_){return arguments.length?(x=+_[0],y=+_[1],recenter()):[x,y]},projection.center=function(_){return arguments.length?(lambda=_[0]%360*radians,phi=_[1]%360*radians,recenter()):[lambda*degrees,phi*degrees]},projection.rotate=function(_){return arguments.length?(deltaLambda=_[0]%360*radians,deltaPhi=_[1]%360*radians,deltaGamma=_.length>2?_[2]%360*radians:0,recenter()):[deltaLambda*degrees,deltaPhi*degrees,deltaGamma*degrees]},projection.angle=function(_){return arguments.length?(alpha=_%360*radians,recenter()):alpha*degrees},projection.reflectX=function(_){return arguments.length?(sx=_?-1:1,recenter()):sx<0},projection.reflectY=function(_){return arguments.length?(sy=_?-1:1,recenter()):sy<0},projection.precision=function(_){return arguments.length?(projectResample=resample(projectTransform,delta2=_*_),reset()):sqrt(delta2)},projection.fitExtent=function(extent,object){return fitExtent(projection,extent,object)},projection.fitSize=function(size,object){return fitSize(projection,size,object)},projection.fitWidth=function(width,object){return fitWidth(projection,width,object)},projection.fitHeight=function(height,object){return fitHeight(projection,height,object)},function(){return project=projectAt.apply(this,arguments),projection.invert=project.invert&&invert,recenter()}}function conicProjection(projectAt){var phi0=0,phi1=pi/3,m=projectionMutator(projectAt),p=m(phi0,phi1);return p.parallels=function(_){return arguments.length?m(phi0=_[0]*radians,phi1=_[1]*radians):[phi0*degrees,phi1*degrees]},p}function conicEqualAreaRaw(y0,y1){var sy0=sin(y0),n=(sy0+sin(y1))/2;if(abs(n)<epsilon)return function cylindricalEqualAreaRaw(phi0){var cosPhi0=cos(phi0);function forward(lambda,phi){return[lambda*cosPhi0,sin(phi)/cosPhi0]}return forward.invert=function(x,y){return[x/cosPhi0,asin(y*cosPhi0)]},forward}(y0);var c=1+sy0*(2*n-sy0),r0=sqrt(c)/n;function project(x,y){var r=sqrt(c-2*n*sin(y))/n;return[r*sin(x*=n),r0-r*cos(x)]}return project.invert=function(x,y){var r0y=r0-y,l=atan2(x,abs(r0y))*sign(r0y);return r0y*n<0&&(l-=pi*sign(x)*sign(r0y)),[l/n,asin((c-(x*x+r0y*r0y)*n*n)/(2*n))]},project}function conicEqualArea(){return conicProjection(conicEqualAreaRaw).scale(155.424).center([0,33.6442])}function albers(){return conicEqualArea().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])}function albersUsa(){var cache,cacheStream,lower48Point,alaskaPoint,hawaiiPoint,point,lower48=albers(),alaska=conicEqualArea().rotate([154,0]).center([-2,58.5]).parallels([55,65]),hawaii=conicEqualArea().rotate([157,0]).center([-3,19.9]).parallels([8,18]),pointStream={point:function(x,y){point=[x,y]}};function albersUsa(coordinates){var x=coordinates[0],y=coordinates[1];return point=null,lower48Point.point(x,y),point||(alaskaPoint.point(x,y),point)||(hawaiiPoint.point(x,y),point)}function reset(){return cache=cacheStream=null,albersUsa}return albersUsa.invert=function(coordinates){var k=lower48.scale(),t=lower48.translate(),x=(coordinates[0]-t[0])/k,y=(coordinates[1]-t[1])/k;return(y>=.12&&y<.234&&x>=-.425&&x<-.214?alaska:y>=.166&&y<.234&&x>=-.214&&x<-.115?hawaii:lower48).invert(coordinates)},albersUsa.stream=function(stream){return cache&&cacheStream===stream?cache:cache=function multiplex(streams){var n=streams.length;return{point:function(x,y){for(var i=-1;++i<n;)streams[i].point(x,y)},sphere:function(){for(var i=-1;++i<n;)streams[i].sphere()},lineStart:function(){for(var i=-1;++i<n;)streams[i].lineStart()},lineEnd:function(){for(var i=-1;++i<n;)streams[i].lineEnd()},polygonStart:function(){for(var i=-1;++i<n;)streams[i].polygonStart()},polygonEnd:function(){for(var i=-1;++i<n;)streams[i].polygonEnd()}}}([lower48.stream(cacheStream=stream),alaska.stream(stream),hawaii.stream(stream)])},albersUsa.precision=function(_){return arguments.length?(lower48.precision(_),alaska.precision(_),hawaii.precision(_),reset()):lower48.precision()},albersUsa.scale=function(_){return arguments.length?(lower48.scale(_),alaska.scale(.35*_),hawaii.scale(_),albersUsa.translate(lower48.translate())):lower48.scale()},albersUsa.translate=function(_){if(!arguments.length)return lower48.translate();var k=lower48.scale(),x=+_[0],y=+_[1];return lower48Point=lower48.translate(_).clipExtent([[x-.455*k,y-.238*k],[x+.455*k,y+.238*k]]).stream(pointStream),alaskaPoint=alaska.translate([x-.307*k,y+.201*k]).clipExtent([[x-.425*k+epsilon,y+.12*k+epsilon],[x-.214*k-epsilon,y+.234*k-epsilon]]).stream(pointStream),hawaiiPoint=hawaii.translate([x-.205*k,y+.212*k]).clipExtent([[x-.214*k+epsilon,y+.166*k+epsilon],[x-.115*k-epsilon,y+.234*k-epsilon]]).stream(pointStream),reset()},albersUsa.fitExtent=function(extent,object){return fitExtent(albersUsa,extent,object)},albersUsa.fitSize=function(size,object){return fitSize(albersUsa,size,object)},albersUsa.fitWidth=function(width,object){return fitWidth(albersUsa,width,object)},albersUsa.fitHeight=function(height,object){return fitHeight(albersUsa,height,object)},albersUsa.scale(1070)}function azimuthalRaw(scale){return function(x,y){var cx=cos(x),cy=cos(y),k=scale(cx*cy);return k===1/0?[2,0]:[k*cy*sin(x),k*sin(y)]}}function azimuthalInvert(angle){return function(x,y){var z=sqrt(x*x+y*y),c=angle(z),sc=sin(c),cc=cos(c);return[atan2(x*sc,z*cc),asin(z&&y*sc/z)]}}var azimuthalEqualAreaRaw=azimuthalRaw((function(cxcy){return sqrt(2/(1+cxcy))}));function azimuthalEqualArea(){return projection(azimuthalEqualAreaRaw).scale(124.75).clipAngle(179.999)}azimuthalEqualAreaRaw.invert=azimuthalInvert((function(z){return 2*asin(z/2)}));var azimuthalEquidistantRaw=azimuthalRaw((function(c){return(c=acos(c))&&c/sin(c)}));function azimuthalEquidistant(){return projection(azimuthalEquidistantRaw).scale(79.4188).clipAngle(179.999)}function mercatorRaw(lambda,phi){return[lambda,log(tan((halfPi+phi)/2))]}function mercator(){return mercatorProjection(mercatorRaw).scale(961/tau)}function mercatorProjection(project){var y0,x1,y1,m=projection(project),center=m.center,scale=m.scale,translate=m.translate,clipExtent=m.clipExtent,x0=null;function reclip(){var k=pi*scale(),t=m(rotation(m.rotate()).invert([0,0]));return clipExtent(null==x0?[[t[0]-k,t[1]-k],[t[0]+k,t[1]+k]]:project===mercatorRaw?[[Math.max(t[0]-k,x0),y0],[Math.min(t[0]+k,x1),y1]]:[[x0,Math.max(t[1]-k,y0)],[x1,Math.min(t[1]+k,y1)]])}return m.scale=function(_){return arguments.length?(scale(_),reclip()):scale()},m.translate=function(_){return arguments.length?(translate(_),reclip()):translate()},m.center=function(_){return arguments.length?(center(_),reclip()):center()},m.clipExtent=function(_){return arguments.length?(null==_?x0=y0=x1=y1=null:(x0=+_[0][0],y0=+_[0][1],x1=+_[1][0],y1=+_[1][1]),reclip()):null==x0?null:[[x0,y0],[x1,y1]]},reclip()}function tany(y){return tan((halfPi+y)/2)}function conicConformalRaw(y0,y1){var cy0=cos(y0),n=y0===y1?sin(y0):log(cy0/cos(y1))/log(tany(y1)/tany(y0)),f=cy0*pow(tany(y0),n)/n;if(!n)return mercatorRaw;function project(x,y){f>0?y<-halfPi+epsilon&&(y=-halfPi+epsilon):y>halfPi-epsilon&&(y=halfPi-epsilon);var r=f/pow(tany(y),n);return[r*sin(n*x),f-r*cos(n*x)]}return project.invert=function(x,y){var fy=f-y,r=sign(n)*sqrt(x*x+fy*fy),l=atan2(x,abs(fy))*sign(fy);return fy*n<0&&(l-=pi*sign(x)*sign(fy)),[l/n,2*atan(pow(f/r,1/n))-halfPi]},project}function conicConformal(){return conicProjection(conicConformalRaw).scale(109.5).parallels([30,30])}function equirectangularRaw(lambda,phi){return[lambda,phi]}function equirectangular(){return projection(equirectangularRaw).scale(152.63)}function conicEquidistantRaw(y0,y1){var cy0=cos(y0),n=y0===y1?sin(y0):(cy0-cos(y1))/(y1-y0),g=cy0/n+y0;if(abs(n)<epsilon)return equirectangularRaw;function project(x,y){var gy=g-y,nx=n*x;return[gy*sin(nx),g-gy*cos(nx)]}return project.invert=function(x,y){var gy=g-y,l=atan2(x,abs(gy))*sign(gy);return gy*n<0&&(l-=pi*sign(x)*sign(gy)),[l/n,g-sign(n)*sqrt(x*x+gy*gy)]},project}function conicEquidistant(){return conicProjection(conicEquidistantRaw).scale(131.154).center([0,13.9389])}azimuthalEquidistantRaw.invert=azimuthalInvert((function(z){return z})),mercatorRaw.invert=function(x,y){return[x,2*atan(exp(y))-halfPi]},equirectangularRaw.invert=equirectangularRaw;var A1=1.340264,A2=-.081106,A3=893e-6,A4=.003796,M=sqrt(3)/2;function equalEarthRaw(lambda,phi){var l=asin(M*sin(phi)),l2=l*l,l6=l2*l2*l2;return[lambda*cos(l)/(M*(A1+3*A2*l2+l6*(7*A3+9*A4*l2))),l*(A1+A2*l2+l6*(A3+A4*l2))]}function equalEarth(){return projection(equalEarthRaw).scale(177.158)}function gnomonicRaw(x,y){var cy=cos(y),k=cos(x)*cy;return[cy*sin(x)/k,sin(y)/k]}function gnomonic(){return projection(gnomonicRaw).scale(144.049).clipAngle(60)}function projection_identity(){var ca,sa,y0,x1,y1,cache,cacheStream,k=1,tx=0,ty=0,sx=1,sy=1,alpha=0,x0=null,kx=1,ky=1,transform=transformer({point:function(x,y){var p=projection([x,y]);this.stream.point(p[0],p[1])}}),postclip=identity;function reset(){return kx=k*sx,ky=k*sy,cache=cacheStream=null,projection}function projection(p){var x=p[0]*kx,y=p[1]*ky;if(alpha){var t=y*ca-x*sa;x=x*ca+y*sa,y=t}return[x+tx,y+ty]}return projection.invert=function(p){var x=p[0]-tx,y=p[1]-ty;if(alpha){var t=y*ca+x*sa;x=x*ca-y*sa,y=t}return[x/kx,y/ky]},projection.stream=function(stream){return cache&&cacheStream===stream?cache:cache=transform(postclip(cacheStream=stream))},projection.postclip=function(_){return arguments.length?(postclip=_,x0=y0=x1=y1=null,reset()):postclip},projection.clipExtent=function(_){return arguments.length?(postclip=null==_?(x0=y0=x1=y1=null,identity):clipRectangle(x0=+_[0][0],y0=+_[0][1],x1=+_[1][0],y1=+_[1][1]),reset()):null==x0?null:[[x0,y0],[x1,y1]]},projection.scale=function(_){return arguments.length?(k=+_,reset()):k},projection.translate=function(_){return arguments.length?(tx=+_[0],ty=+_[1],reset()):[tx,ty]},projection.angle=function(_){return arguments.length?(sa=sin(alpha=_%360*radians),ca=cos(alpha),reset()):alpha*degrees},projection.reflectX=function(_){return arguments.length?(sx=_?-1:1,reset()):sx<0},projection.reflectY=function(_){return arguments.length?(sy=_?-1:1,reset()):sy<0},projection.fitExtent=function(extent,object){return fitExtent(projection,extent,object)},projection.fitSize=function(size,object){return fitSize(projection,size,object)},projection.fitWidth=function(width,object){return fitWidth(projection,width,object)},projection.fitHeight=function(height,object){return fitHeight(projection,height,object)},projection}function naturalEarth1Raw(lambda,phi){var phi2=phi*phi,phi4=phi2*phi2;return[lambda*(.8707-.131979*phi2+phi4*(phi4*(.003971*phi2-.001529*phi4)-.013791)),phi*(1.007226+phi2*(.015085+phi4*(.028874*phi2-.044475-.005916*phi4)))]}function naturalEarth1(){return projection(naturalEarth1Raw).scale(175.295)}function orthographicRaw(x,y){return[cos(y)*sin(x),sin(y)]}function orthographic(){return projection(orthographicRaw).scale(249.5).clipAngle(90+epsilon)}function stereographicRaw(x,y){var cy=cos(y),k=1+cos(x)*cy;return[cy*sin(x)/k,sin(y)/k]}function stereographic(){return projection(stereographicRaw).scale(250).clipAngle(142)}function transverseMercatorRaw(lambda,phi){return[log(tan((halfPi+phi)/2)),-lambda]}function transverseMercator(){var m=mercatorProjection(transverseMercatorRaw),center=m.center,rotate=m.rotate;return m.center=function(_){return arguments.length?center([-_[1],_[0]]):[(_=center())[1],-_[0]]},m.rotate=function(_){return arguments.length?rotate([_[0],_[1],_.length>2?_[2]+90:90]):[(_=rotate())[0],_[1],_[2]-90]},rotate([0,0,90]).scale(159.155)}equalEarthRaw.invert=function(x,y){for(var delta,l=y,l2=l*l,l6=l2*l2*l2,i=0;i<12&&(l6=(l2=(l-=delta=(l*(A1+A2*l2+l6*(A3+A4*l2))-y)/(A1+3*A2*l2+l6*(7*A3+9*A4*l2)))*l)*l2*l2,!(abs(delta)<epsilon2));++i);return[M*x*(A1+3*A2*l2+l6*(7*A3+9*A4*l2))/cos(l),asin(sin(l)/M)]},gnomonicRaw.invert=azimuthalInvert(atan),naturalEarth1Raw.invert=function(x,y){var delta,phi=y,i=25;do{var phi2=phi*phi,phi4=phi2*phi2;phi-=delta=(phi*(1.007226+phi2*(.015085+phi4*(.028874*phi2-.044475-.005916*phi4)))-y)/(1.007226+phi2*(.045255+phi4*(.259866*phi2-.311325-.005916*11*phi4)))}while(abs(delta)>epsilon&&--i>0);return[x/(.8707+(phi2=phi*phi)*(phi2*(phi2*phi2*phi2*(.003971-.001529*phi2)-.013791)-.131979)),phi]},orthographicRaw.invert=azimuthalInvert(asin),stereographicRaw.invert=azimuthalInvert((function(z){return 2*atan(z)})),transverseMercatorRaw.invert=function(x,y){return[-y,2*atan(exp(x))-halfPi]}}}]);