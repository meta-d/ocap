"use strict";(self.webpackChunkocap=self.webpackChunkocap||[]).push([[6094],{"./node_modules/topojson-client/src/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function identity(x){return x}function transform(transform){if(null==transform)return identity;var x0,y0,kx=transform.scale[0],ky=transform.scale[1],dx=transform.translate[0],dy=transform.translate[1];return function(input,i){i||(x0=y0=0);var j=2,n=input.length,output=new Array(n);for(output[0]=(x0+=input[0])*kx+dx,output[1]=(y0+=input[1])*ky+dy;j<n;)output[j]=input[j],++j;return output}}function bbox(topology){var key,t=transform(topology.transform),x0=1/0,y0=x0,x1=-x0,y1=-x0;function bboxPoint(p){(p=t(p))[0]<x0&&(x0=p[0]),p[0]>x1&&(x1=p[0]),p[1]<y0&&(y0=p[1]),p[1]>y1&&(y1=p[1])}function bboxGeometry(o){switch(o.type){case"GeometryCollection":o.geometries.forEach(bboxGeometry);break;case"Point":bboxPoint(o.coordinates);break;case"MultiPoint":o.coordinates.forEach(bboxPoint)}}for(key in topology.arcs.forEach((function(arc){for(var p,i=-1,n=arc.length;++i<n;)(p=t(arc[i],i))[0]<x0&&(x0=p[0]),p[0]>x1&&(x1=p[0]),p[1]<y0&&(y0=p[1]),p[1]>y1&&(y1=p[1])})),topology.objects)bboxGeometry(topology.objects[key]);return[x0,y0,x1,y1]}function feature(topology,o){return"string"==typeof o&&(o=topology.objects[o]),"GeometryCollection"===o.type?{type:"FeatureCollection",features:o.geometries.map((function(o){return feature_feature(topology,o)}))}:feature_feature(topology,o)}function feature_feature(topology,o){var id=o.id,bbox=o.bbox,properties=null==o.properties?{}:o.properties,geometry=object(topology,o);return null==id&&null==bbox?{type:"Feature",properties,geometry}:null==bbox?{type:"Feature",id,properties,geometry}:{type:"Feature",id,bbox,properties,geometry}}function object(topology,o){var transformPoint=transform(topology.transform),arcs=topology.arcs;function arc(i,points){points.length&&points.pop();for(var a=arcs[i<0?~i:i],k=0,n=a.length;k<n;++k)points.push(transformPoint(a[k],k));i<0&&function reverse(array,n){for(var t,j=array.length,i=j-n;i<--j;)t=array[i],array[i++]=array[j],array[j]=t}(points,n)}function point(p){return transformPoint(p)}function line(arcs){for(var points=[],i=0,n=arcs.length;i<n;++i)arc(arcs[i],points);return points.length<2&&points.push(points[0]),points}function ring(arcs){for(var points=line(arcs);points.length<4;)points.push(points[0]);return points}function polygon(arcs){return arcs.map(ring)}return function geometry(o){var coordinates,type=o.type;switch(type){case"GeometryCollection":return{type,geometries:o.geometries.map(geometry)};case"Point":coordinates=point(o.coordinates);break;case"MultiPoint":coordinates=o.coordinates.map(point);break;case"LineString":coordinates=line(o.arcs);break;case"MultiLineString":coordinates=o.arcs.map(line);break;case"Polygon":coordinates=polygon(o.arcs);break;case"MultiPolygon":coordinates=o.arcs.map(polygon);break;default:return null}return{type,coordinates}}(o)}function stitch(topology,arcs){var stitchedArcs={},fragmentByStart={},fragmentByEnd={},fragments=[],emptyIndex=-1;function flush(fragmentByEnd,fragmentByStart){for(var k in fragmentByEnd){var f=fragmentByEnd[k];delete fragmentByStart[f.start],delete f.start,delete f.end,f.forEach((function(i){stitchedArcs[i<0?~i:i]=1})),fragments.push(f)}}return arcs.forEach((function(i,j){var t,arc=topology.arcs[i<0?~i:i];arc.length<3&&!arc[1][0]&&!arc[1][1]&&(t=arcs[++emptyIndex],arcs[emptyIndex]=i,arcs[j]=t)})),arcs.forEach((function(i){var f,g,e=function ends(i){var p1,arc=topology.arcs[i<0?~i:i],p0=arc[0];topology.transform?(p1=[0,0],arc.forEach((function(dp){p1[0]+=dp[0],p1[1]+=dp[1]}))):p1=arc[arc.length-1];return i<0?[p1,p0]:[p0,p1]}(i),start=e[0],end=e[1];if(f=fragmentByEnd[start])if(delete fragmentByEnd[f.end],f.push(i),f.end=end,g=fragmentByStart[end]){delete fragmentByStart[g.start];var fg=g===f?f:f.concat(g);fragmentByStart[fg.start=f.start]=fragmentByEnd[fg.end=g.end]=fg}else fragmentByStart[f.start]=fragmentByEnd[f.end]=f;else if(f=fragmentByStart[end])if(delete fragmentByStart[f.start],f.unshift(i),f.start=start,g=fragmentByEnd[start]){delete fragmentByEnd[g.end];var gf=g===f?f:g.concat(f);fragmentByStart[gf.start=g.start]=fragmentByEnd[gf.end=f.end]=gf}else fragmentByStart[f.start]=fragmentByEnd[f.end]=f;else fragmentByStart[(f=[i]).start=start]=fragmentByEnd[f.end=end]=f})),flush(fragmentByEnd,fragmentByStart),flush(fragmentByStart,fragmentByEnd),arcs.forEach((function(i){stitchedArcs[i<0?~i:i]||fragments.push([i])})),fragments}function mesh(topology){return object(topology,meshArcs.apply(this,arguments))}function meshArcs(topology,object,filter){var arcs,i,n;if(arguments.length>1)arcs=function extractArcs(topology,object,filter){var geom,arcs=[],geomsByArc=[];function extract0(i){var j=i<0?~i:i;(geomsByArc[j]||(geomsByArc[j]=[])).push({i,g:geom})}function extract1(arcs){arcs.forEach(extract0)}function extract2(arcs){arcs.forEach(extract1)}function extract3(arcs){arcs.forEach(extract2)}function geometry(o){switch(geom=o,o.type){case"GeometryCollection":o.geometries.forEach(geometry);break;case"LineString":extract1(o.arcs);break;case"MultiLineString":case"Polygon":extract2(o.arcs);break;case"MultiPolygon":extract3(o.arcs)}}return geometry(object),geomsByArc.forEach(null==filter?function(geoms){arcs.push(geoms[0].i)}:function(geoms){filter(geoms[0].g,geoms[geoms.length-1].g)&&arcs.push(geoms[0].i)}),arcs}(0,object,filter);else for(i=0,arcs=new Array(n=topology.arcs.length);i<n;++i)arcs[i]=i;return{type:"MultiLineString",arcs:stitch(topology,arcs)}}function merge(topology){return object(topology,mergeArcs.apply(this,arguments))}function mergeArcs(topology,objects){var polygonsByArc={},polygons=[],groups=[];function extract(polygon){polygon.forEach((function(ring){ring.forEach((function(arc){(polygonsByArc[arc=arc<0?~arc:arc]||(polygonsByArc[arc]=[])).push(polygon)}))})),polygons.push(polygon)}function area(ring){return function planarRingArea(ring){for(var a,i=-1,n=ring.length,b=ring[n-1],area=0;++i<n;)a=b,b=ring[i],area+=a[0]*b[1]-a[1]*b[0];return Math.abs(area)}(object(topology,{type:"Polygon",arcs:[ring]}).coordinates[0])}return objects.forEach((function geometry(o){switch(o.type){case"GeometryCollection":o.geometries.forEach(geometry);break;case"Polygon":extract(o.arcs);break;case"MultiPolygon":o.arcs.forEach(extract)}})),polygons.forEach((function(polygon){if(!polygon._){var group=[],neighbors=[polygon];for(polygon._=1,groups.push(group);polygon=neighbors.pop();)group.push(polygon),polygon.forEach((function(ring){ring.forEach((function(arc){polygonsByArc[arc<0?~arc:arc].forEach((function(polygon){polygon._||(polygon._=1,neighbors.push(polygon))}))}))}))}})),polygons.forEach((function(polygon){delete polygon._})),{type:"MultiPolygon",arcs:groups.map((function(polygons){var n,arcs=[];if(polygons.forEach((function(polygon){polygon.forEach((function(ring){ring.forEach((function(arc){polygonsByArc[arc<0?~arc:arc].length<2&&arcs.push(arc)}))}))})),(n=(arcs=stitch(topology,arcs)).length)>1)for(var ki,t,i=1,k=area(arcs[0]);i<n;++i)(ki=area(arcs[i]))>k&&(t=arcs[0],arcs[0]=arcs[i],arcs[i]=t,k=ki);return arcs})).filter((function(arcs){return arcs.length>0}))}}function bisect(a,x){for(var lo=0,hi=a.length;lo<hi;){var mid=lo+hi>>>1;a[mid]<x?lo=mid+1:hi=mid}return lo}function neighbors(objects){var indexesByArc={},neighbors=objects.map((function(){return[]}));function line(arcs,i){arcs.forEach((function(a){a<0&&(a=~a);var o=indexesByArc[a];o?o.push(i):indexesByArc[a]=[i]}))}function polygon(arcs,i){arcs.forEach((function(arc){line(arc,i)}))}var geometryType={LineString:line,MultiLineString:polygon,Polygon:polygon,MultiPolygon:function(arcs,i){arcs.forEach((function(arc){polygon(arc,i)}))}};for(var i in objects.forEach((function geometry(o,i){"GeometryCollection"===o.type?o.geometries.forEach((function(o){geometry(o,i)})):o.type in geometryType&&geometryType[o.type](o.arcs,i)})),indexesByArc)for(var indexes=indexesByArc[i],m=indexes.length,j=0;j<m;++j)for(var k=j+1;k<m;++k){var n,ij=indexes[j],ik=indexes[k];(n=neighbors[ij])[i=bisect(n,ik)]!==ik&&n.splice(i,0,ik),(n=neighbors[ik])[i=bisect(n,ij)]!==ij&&n.splice(i,0,ij)}return neighbors}function untransform(transform){if(null==transform)return identity;var x0,y0,kx=transform.scale[0],ky=transform.scale[1],dx=transform.translate[0],dy=transform.translate[1];return function(input,i){i||(x0=y0=0);var j=2,n=input.length,output=new Array(n),x1=Math.round((input[0]-dx)/kx),y1=Math.round((input[1]-dy)/ky);for(output[0]=x1-x0,x0=x1,output[1]=y1-y0,y0=y1;j<n;)output[j]=input[j],++j;return output}}function quantize(topology,transform){if(topology.transform)throw new Error("already quantized");if(transform&&transform.scale)box=topology.bbox;else{if(!((n=Math.floor(transform))>=2))throw new Error("n must be â‰¥2");var n,x0=(box=topology.bbox||bbox(topology))[0],y0=box[1],x1=box[2],y1=box[3];transform={scale:[x1-x0?(x1-x0)/(n-1):1,y1-y0?(y1-y0)/(n-1):1],translate:[x0,y0]}}var box,key,t=untransform(transform),inputs=topology.objects,outputs={};function quantizePoint(point){return t(point)}function quantizeGeometry(input){var output;switch(input.type){case"GeometryCollection":output={type:"GeometryCollection",geometries:input.geometries.map(quantizeGeometry)};break;case"Point":output={type:"Point",coordinates:quantizePoint(input.coordinates)};break;case"MultiPoint":output={type:"MultiPoint",coordinates:input.coordinates.map(quantizePoint)};break;default:return input}return null!=input.id&&(output.id=input.id),null!=input.bbox&&(output.bbox=input.bbox),null!=input.properties&&(output.properties=input.properties),output}for(key in inputs)outputs[key]=quantizeGeometry(inputs[key]);return{type:"Topology",bbox:box,transform,objects:outputs,arcs:topology.arcs.map((function quantizeArc(input){var p,i=0,j=1,n=input.length,output=new Array(n);for(output[0]=t(input[0],0);++i<n;)((p=t(input[i],i))[0]||p[1])&&(output[j++]=p);return 1===j&&(output[j++]=[0,0]),output.length=j,output}))}}__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{bbox:()=>bbox,feature:()=>feature,merge:()=>merge,mergeArcs:()=>mergeArcs,mesh:()=>mesh,meshArcs:()=>meshArcs,neighbors:()=>neighbors,quantize:()=>quantize,transform:()=>transform,untransform:()=>untransform})}}]);