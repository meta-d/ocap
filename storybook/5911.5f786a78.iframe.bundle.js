(self.webpackChunkocap=self.webpackChunkocap||[]).push([[5911],{"./packages/angular/common/display-behaviour/display-behaviour.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{o:()=>NgmDisplayBehaviourComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var _class,display_behaviour_componentngResource=__webpack_require__("./packages/angular/common/display-behaviour/display-behaviour.component.scss?ngResource"),display_behaviour_componentngResource_default=__webpack_require__.n(display_behaviour_componentngResource),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),icon=__webpack_require__("./node_modules/@angular/material/fesm2022/icon.mjs"),negate=__webpack_require__("./node_modules/lodash-es/negate.js"),lodash_es_isNil=__webpack_require__("./node_modules/lodash-es/isNil.js"),isEqual=__webpack_require__("./node_modules/lodash-es/isEqual.js"),isEmpty=__webpack_require__("./node_modules/lodash-es/isEmpty.js"),includes=__webpack_require__("./node_modules/lodash-es/includes.js"),filter=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/filter.js");(0,negate.Z)(lodash_es_isNil.Z),(0,filter.h)((0,negate.Z)(lodash_es_isNil.Z)),(0,negate.Z)(isEqual.Z),(0,negate.Z)(isEmpty.Z);var KEYCODES,KEYS;!function(KEYCODES){KEYCODES[KEYCODES.ENTER=13]="ENTER",KEYCODES[KEYCODES.SPACE=32]="SPACE",KEYCODES[KEYCODES.ESCAPE=27]="ESCAPE",KEYCODES[KEYCODES.LEFT_ARROW=37]="LEFT_ARROW",KEYCODES[KEYCODES.UP_ARROW=38]="UP_ARROW",KEYCODES[KEYCODES.RIGHT_ARROW=39]="RIGHT_ARROW",KEYCODES[KEYCODES.DOWN_ARROW=40]="DOWN_ARROW",KEYCODES[KEYCODES.F2=113]="F2",KEYCODES[KEYCODES.TAB=9]="TAB",KEYCODES[KEYCODES.CTRL=17]="CTRL",KEYCODES[KEYCODES.Z=90]="Z",KEYCODES[KEYCODES.Y=89]="Y",KEYCODES[KEYCODES.X=88]="X",KEYCODES[KEYCODES.BACKSPACE=8]="BACKSPACE",KEYCODES[KEYCODES.DELETE=46]="DELETE",KEYCODES[KEYCODES.INPUT_METHOD=229]="INPUT_METHOD"}(KEYCODES||(KEYCODES={})),function(KEYS){KEYS.ENTER="Enter",KEYS.SPACE=" ",KEYS.SPACE_IE="Spacebar",KEYS.ESCAPE="Escape",KEYS.ESCAPE_IE="Esc",KEYS.LEFT_ARROW="ArrowLeft",KEYS.LEFT_ARROW_IE="Left",KEYS.UP_ARROW="ArrowUp",KEYS.UP_ARROW_IE="Up",KEYS.RIGHT_ARROW="ArrowRight",KEYS.RIGHT_ARROW_IE="Right",KEYS.DOWN_ARROW="ArrowDown",KEYS.DOWN_ARROW_IE="Down",KEYS.F2="F2",KEYS.TAB="Tab",KEYS.SEMICOLON=";",KEYS.HOME="Home",KEYS.END="End"}(KEYS||(KEYS={}));let PlatformUtil=((_class=class PlatformUtil{constructor(platformId){this.platformId=platformId,this.isBrowser=(0,common.isPlatformBrowser)(this.platformId),this.isIOS=this.isBrowser&&/iPad|iPhone|iPod/.test(navigator.userAgent)&&!("MSStream"in window)}}).ctorParameters=()=>[{type:Object,decorators:[{type:core.Inject,args:[core.PLATFORM_ID]}]}],_class);PlatformUtil=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"}),(0,tslib_es6.w6)("design:paramtypes",[Object])],PlatformUtil);const NAVIGATION_KEYS=new Set(["down","up","left","right","arrowdown","arrowup","arrowleft","arrowright","home","end","space","spacebar"," "]);new Set("right down arrowright arrowdown".split(" ")),new Set("left up arrowleft arrowup".split(" ")),new Set([...Array.from(NAVIGATION_KEYS),"tab","enter","f2","escape","esc"]);function splitByHighlight(text,highlight){if(highlight&&text){const keywords=highlight.split(/\s+/g),matchs=String(text).match(new RegExp(`(${keywords.join("|")})`,"ig")),results=String(text).split(new RegExp(`(${keywords.join("|")})`,"i"));if(results?.length>1)return results.map((value=>(0,includes.Z)(matchs,value)?{match:!0,value}:{value}))}return[{value:text}]}var display_behaviour_component_class,src=__webpack_require__("./packages/core/src/index.ts");let NgmDisplayBehaviourComponent=((display_behaviour_component_class=class NgmDisplayBehaviourComponent{constructor(){this.DISPLAY_BEHAVIOUR=src.CXV,this.isDisplayBehaviour=!0,this.value=[],this.text=[],this.default=[]}get isDescriptionAndId(){return this.displayBehaviour===src.CXV.descriptionAndId}get isIdAndDescription(){return this.displayBehaviour===src.CXV.idAndDescription}get isDescriptionOnly(){return this.displayBehaviour===src.CXV.descriptionOnly}get isAuto(){return this.displayBehaviour===src.CXV.auto||!this.displayBehaviour}get noLabel(){return!(this.option?.caption||this.option?.label)}ngOnInit(){this.value=splitByHighlight(this.option.key??this.option.value,this.highlight),this.text=splitByHighlight(this.option.caption||this.option.label,this.highlight),this.default=splitByHighlight(this.option.caption||this.option.label||this.option.value,this.highlight)}ngOnChanges({highlight,option}){(highlight||option)&&(this.value=splitByHighlight(this.option.key??this.option.value,this.highlight),this.text=splitByHighlight(this.option.caption||this.option.label,this.highlight),this.default=splitByHighlight(this.option.caption||this.option.label||(this.option.key??this.option.value),this.highlight))}}).propDecorators={displayBehaviour:[{type:core.Input}],excludeSelected:[{type:core.HostBinding,args:["class.ngm-display-behaviour__exclude-selected"]},{type:core.Input}],option:[{type:core.Input}],highlight:[{type:core.Input}],isDisplayBehaviour:[{type:core.HostBinding,args:["class.ngm-display-behaviour"]}],isDescriptionAndId:[{type:core.HostBinding,args:["class.ngm-display-behaviour__descriptionAndId"]}],isIdAndDescription:[{type:core.HostBinding,args:["class.ngm-display-behaviour__idAndDescription"]}],isDescriptionOnly:[{type:core.HostBinding,args:["class.ngm-display-behaviour__descriptionOnly"]}],isAuto:[{type:core.HostBinding,args:["class.ngm-display-behaviour__auto"]}],noLabel:[{type:core.HostBinding,args:["class.ngm-display-behaviour__no-label"]}]},display_behaviour_component_class);NgmDisplayBehaviourComponent=(0,tslib_es6.gn)([(0,core.Component)({standalone:!0,changeDetection:core.ChangeDetectionStrategy.OnPush,selector:"ngm-display-behaviour",template:'<ng-container [ngSwitch]="displayBehaviour">\n  <ng-container *ngSwitchCase="DISPLAY_BEHAVIOUR.descriptionAndId">\n    <span class="ngm-display-behaviour__option-text" [title]="option.caption || option.label">\n      <span [ngClass]="item.match ? \'ngm-display-behaviour__highlight\' : \'\'" *ngFor="let item of text">{{\n        item.value\n      }}</span>\n    </span>\n    <span class="ngm-display-behaviour__option-value" [title]="option.key ?? option.value">\n      <span [ngClass]="item.match ? \'ngm-display-behaviour__highlight\' : \'\'" *ngFor="let item of value">{{\n        item.value\n      }}</span>\n    </span>\n  </ng-container>\n  <ng-container *ngSwitchCase="DISPLAY_BEHAVIOUR.descriptionOnly">\n    <span class="ngm-display-behaviour__option-text" [title]="option.caption || option.label">\n      <span [ngClass]="item.match ? \'ngm-display-behaviour__highlight\' : \'\'" *ngFor="let item of text">{{\n        item.value\n      }}</span>\n    </span>\n  </ng-container>\n  <ng-container *ngSwitchCase="DISPLAY_BEHAVIOUR.idOnly">\n    <span class="ngm-display-behaviour__option-value" [title]="option.key ?? option.value">\n      <span [ngClass]="item.match ? \'ngm-display-behaviour__highlight\' : \'\'" *ngFor="let item of value">{{\n        item.value\n      }}</span>\n    </span>\n  </ng-container>\n  <ng-container *ngSwitchCase="DISPLAY_BEHAVIOUR.idAndDescription">\n    <span class="ngm-display-behaviour__option-value" [title]="option.key ?? option.value">\n      <span [ngClass]="item.match ? \'ngm-display-behaviour__highlight\' : \'\'" *ngFor="let item of value">{{\n        item.value\n      }}</span>\n    </span>\n    <span class="ngm-display-behaviour__option-text" [title]="option.caption || option.label">\n      <span [ngClass]="item.match ? \'ngm-display-behaviour__highlight\' : \'\'" *ngFor="let item of text">{{\n        item.value\n      }}</span>\n    </span>\n  </ng-container>\n\n  <ng-container *ngSwitchDefault>\n    <span class="ngm-display-behaviour__option-text" [title]="option.caption || option.label">\n      <span [ngClass]="item.match ? \'ngm-display-behaviour__highlight\' : \'\'" *ngFor="let item of text">{{\n        item.value\n      }}</span>\n    </span>\n    <span class="ngm-display-behaviour__option-value" [title]="option.key ?? option.value">\n      <span [ngClass]="item.match ? \'ngm-display-behaviour__highlight\' : \'\'" *ngFor="let item of value">{{\n        item.value\n      }}</span>\n    </span>\n  </ng-container>\n\n  <mat-icon *ngIf="option.selected" class="ngm-display-behaviour__selected" color="accent">done</mat-icon>\n</ng-container>\n',imports:[common.CommonModule,icon.Ps],styles:[display_behaviour_componentngResource_default()]})],NgmDisplayBehaviourComponent)},"./packages/angular/common/search/search.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{K:()=>NgmSearchComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var _class,search_componentngResource=__webpack_require__("./packages/angular/common/search/search.component.scss?ngResource"),search_componentngResource_default=__webpack_require__.n(search_componentngResource),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),input=__webpack_require__("./node_modules/@angular/material/fesm2022/input.mjs"),ngx_translate_core=__webpack_require__("./node_modules/@ngx-translate/core/fesm2020/ngx-translate-core.mjs");let NgmSearchComponent=((_class=class NgmSearchComponent{writeValue(obj){this._value=obj}registerOnChange(fn){this.onChange=fn}registerOnTouched(fn){this.onTouched=fn}setDisabledState(isDisabled){this.disabled=isDisabled,isDisabled?this.formControl?.disable({emitEvent:!1}):this.formControl?.enable({emitEvent:!1})}onValueChange(value){this.formControl?.setValue(value),this.onChange(value)}}).propDecorators={formControl:[{type:core.Input}],disabled:[{type:core.Input}]},_class);NgmSearchComponent=(0,tslib_es6.gn)([(0,core.Component)({standalone:!0,imports:[common.CommonModule,fesm2022_forms.u5,fesm2022_forms.UX,ngx_translate_core.aw,input.c],selector:"ngm-search",template:'<span role="img" aria-label="search" class="ngm-search__icon absolute inset-y-0 left-0 flex items-center pointer-events-none">\n  <svg viewBox="64 64 896 896" focusable="false" class="" data-icon="search" width="1em" height="1em" fill="currentColor" aria-hidden="true">\n    <path d="M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z"></path>\n  </svg>\n</span>\n<input matInput class="ngm-search__input outline-none bg-transparent"\n       placeholder="{{ \'Ngm.Common.Search\' | translate: {Default: \'Search\'} }}" type="text"\n       [(ngModel)]="_value" [disabled]="disabled"\n       (ngModelChange)="onValueChange($event)"\n       />\n',providers:[{provide:fesm2022_forms.JU,multi:!0,useExisting:(0,core.forwardRef)((()=>NgmSearchComponent))}],host:{class:"ngm-search"},styles:[search_componentngResource_default()]})],NgmSearchComponent)},"./packages/angular/common/tree-select/tree-select.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{W:()=>NgmTreeSelectComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var _class,tree_select_componentngResource=__webpack_require__("./packages/angular/common/tree-select/tree-select.component.scss?ngResource"),tree_select_componentngResource_default=__webpack_require__.n(tree_select_componentngResource),coercion=__webpack_require__("./node_modules/@angular/cdk/fesm2022/coercion.mjs"),collections=__webpack_require__("./node_modules/@angular/cdk/fesm2022/collections.mjs"),keycodes=__webpack_require__("./node_modules/@angular/cdk/fesm2022/keycodes.mjs"),scrolling=__webpack_require__("./node_modules/@angular/cdk/fesm2022/scrolling.mjs"),tree=__webpack_require__("./node_modules/@angular/cdk/fesm2022/tree.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),fesm2022_core=__webpack_require__("./node_modules/@angular/material/fesm2022/core.mjs"),autocomplete=__webpack_require__("./node_modules/@angular/material/fesm2022/autocomplete.mjs"),fesm2022_button=__webpack_require__("./node_modules/@angular/material/fesm2022/button.mjs"),fesm2022_checkbox=__webpack_require__("./node_modules/@angular/material/fesm2022/checkbox.mjs"),chips=__webpack_require__("./node_modules/@angular/material/fesm2022/chips.mjs"),form_field=__webpack_require__("./node_modules/@angular/material/fesm2022/form-field.mjs"),icon=__webpack_require__("./node_modules/@angular/material/fesm2022/icon.mjs"),input=__webpack_require__("./node_modules/@angular/material/fesm2022/input.mjs"),progress_spinner=__webpack_require__("./node_modules/@angular/material/fesm2022/progress-spinner.mjs"),fesm2022_select=__webpack_require__("./node_modules/@angular/material/fesm2022/select.mjs"),fesm2022_tree=__webpack_require__("./node_modules/@angular/material/fesm2022/tree.mjs"),core_module=__webpack_require__("./packages/angular/core/core.module.ts"),directives_displayDensity=__webpack_require__("./packages/angular/core/directives/displayDensity.ts"),ngx_translate_core=__webpack_require__("./node_modules/@ngx-translate/core/fesm2020/ngx-translate-core.mjs"),src=__webpack_require__("./packages/core/src/index.ts"),ngneat_until_destroy=__webpack_require__("./node_modules/@ngneat/until-destroy/fesm2020/ngneat-until-destroy.mjs"),isEqual=__webpack_require__("./node_modules/lodash-es/isEqual.js"),BehaviorSubject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js"),of=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js"),startWith=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/startWith.js"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),combineLatest=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/combineLatest.js"),delay=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/delay.js"),combineLatestWith=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/combineLatestWith.js"),filter=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/filter.js"),distinctUntilChanged=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js"),search_component=__webpack_require__("./packages/angular/common/search/search.component.ts"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),display_behaviour_component=__webpack_require__("./packages/angular/common/display-behaviour/display-behaviour.component.ts");const _TreeSelectBase=(0,fesm2022_core.pj)((0,fesm2022_core.Id)((0,fesm2022_core.Kr)(class{constructor(_elementRef){this._elementRef=_elementRef}})));let NgmTreeSelectComponent=((_class=class NgmTreeSelectComponent extends _TreeSelectBase{get treeNodes(){return this.treeNodes$.value}set treeNodes(value){this.treeNodes$.next(value)}get multiple(){return this._multiple}set multiple(value){this._multiple=(0,coercion.Ig)(value)}get virtualScroll(){return this._virtualScroll}set virtualScroll(value){this._virtualScroll=(0,coercion.Ig)(value)}get autocomplete(){return this._autocomplete}set autocomplete(value){this._autocomplete=(0,coercion.Ig)(value)}get searchable(){return this._searchable}set searchable(value){this._searchable=(0,coercion.Ig)(value)}get treeViewer(){return this._treeViewer}set treeViewer(value){this._treeViewer=(0,coercion.Ig)(value)}get autoActiveFirstOption(){return this._autoActiveFirstOption}set autoActiveFirstOption(value){this._autoActiveFirstOption=(0,coercion.Ig)(value)}get autoSelectActiveOption(){return this._autoSelectActiveOption}set autoSelectActiveOption(value){this._autoSelectActiveOption=(0,coercion.Ig)(value)}get useAutocomplete(){return this.autocomplete||this.virtualScroll}get value(){return this.formControl.value}get isNotInitial(){return this.multipleSelection.selected?.length||this.singleSelection.selected?.length||(Array.isArray(this.formControl.value)?this.formControl.value.length:this.formControl.value)}get autoHighlight(){return"string"==typeof this.autoControl.value?this.autoControl.value:null}constructor(elementRef){super(elementRef),this.treeNodes$=new BehaviorSubject.X(null),this._multiple=!1,this._virtualScroll=!1,this._autocomplete=!1,this._searchable=!1,this._treeViewer=!1,this.loading=!1,this.formControl=new fesm2022_forms.NI(null),this.autoControl=new fesm2022_forms.NI(null),this.unfold=!1,this.separatorKeysCodes=[keycodes.K5,keycodes.OC],this.multipleSelection=new collections.Ov(!0),this.singleSelection=new collections.Ov(!1),this.virtualScrollItemSize=48,this.treeNodePaddingIndent=20,this.transformer=(node,level)=>({expandable:!!node.children&&node.children.length>0,key:node.key,label:node.label,caption:node.caption,value:node.value,level,childrenCardinality:node.children?.length,raw:node.raw}),this.treeControl=new tree.C2((node=>node.level),(node=>node.expandable)),this.treeFlattener=new fesm2022_tree.JZ(this.transformer,(node=>node.level),(node=>node.expandable),(node=>node.children)),this.dataSource=new fesm2022_tree.kc(this.treeControl,this.treeFlattener),this.selectOptions$=this.dataSource.connect({viewChange:(0,of.of)()}),this.selectedOptions$=this.formControl.valueChanges.pipe((0,startWith.O)(this.formControl.value),(0,map.U)((value=>value?Array.isArray(value)?value:[value]:null))),this.trigger$=this.selectedOptions$.pipe((0,map.U)((selectedOptions=>selectedOptions?.map((({label,key})=>label||key))??this.placeholder))),this.chipList$=(0,combineLatest.a)([this.singleSelection.changed.pipe((0,startWith.O)(null)),this.multipleSelection.changed.pipe((0,startWith.O)(null)),this.treeNodes$]).pipe((0,map.U)((([event,event2,dataNodes])=>{const members=(this.multiple?this.multipleSelection.selected:this.singleSelection.selected)?.map((key=>(0,src.$kk)(dataNodes,key)??{key,label:""}));return this.restChips=this.maxTagCount?members.splice(this.maxTagCount):null,members}))),this.allSelect=!1,this._nodesSub=this.treeNodes$.pipe((0,delay.g)(100)).subscribe((()=>{const value=this.formControl.value;Array.isArray(value)?this.formControl.setValue(value.map((item=>this.treeControl.dataNodes.find((node=>node.key===item.key))??item))):value&&this.formControl.setValue(this.treeControl.dataNodes.find((node=>node.key===value.key))??value)})),this._treeNodesSub=this.treeNodes$.pipe((0,combineLatestWith.V)(this.autoControl.valueChanges.pipe((0,filter.h)((value=>!value||"string"==typeof value)),(0,startWith.O)(null),(0,distinctUntilChanged.x)())),(0,map.U)((([treeNodes,text])=>(0,src.NOJ)(treeNodes??[],text,{considerKey:this.displayBehaviour!==src.CXV.descriptionOnly})))).subscribe((nodes=>{this.dataSource.data=nodes,(this.initialLevel||this.autoControl.value)&&this.treeControl.dataNodes.forEach((node=>{(this.treeControl.getLevel(node)<this.initialLevel||this.autoControl.value&&1===node.childrenCardinality)&&this.treeControl.expand(node)}))})),this._formControlSub=this.formControl.valueChanges.pipe((0,filter.h)((()=>!this.autocomplete&&!this.treeViewer)),(0,distinctUntilChanged.x)(isEqual.Z)).subscribe((value=>{Array.isArray(value)?(this.allSelect=this.treeControl.dataNodes.length===value.length,this.onChange?.(value.map((option=>option.key)))):this.onChange?.(Array.isArray(value)?value.map((option=>option.key)):value?.key)})),this._singleSelectionSub=this.singleSelection.changed.pipe((0,filter.h)((()=>!this.multiple&&(!!this.useAutocomplete||this.treeViewer)))).subscribe((event=>{this.onChange?.(this.singleSelection.selected?.[0])})),this.multipleSelectionSub=this.multipleSelection.changed.pipe((0,filter.h)((()=>this.multiple&&(!!this.useAutocomplete||this.treeViewer)))).subscribe((event=>{this.allSelect=this.treeControl.dataNodes.length===this.multipleSelection.selected.length,this.onChange?.(this.multipleSelection.selected)})),this.hasChild=(_,node)=>node.expandable}ngOnChanges({displayDensity,validators}){displayDensity&&(this.displayDensity===directives_displayDensity.A.compact?(this.treeNodePaddingIndent=10,this.virtualScrollItemSize=30):this.displayDensity===directives_displayDensity.A.cosy?(this.treeNodePaddingIndent=15,this.virtualScrollItemSize=36):(this.treeNodePaddingIndent=20,this.virtualScrollItemSize=48)),validators&&this.formControl.setValidators(validators.currentValue)}writeValue(obj){obj&&(this.useAutocomplete||this.treeViewer?this.multiple?this.multipleSelection.select(...obj):this.singleSelection.select(...Array.isArray(obj)?obj:[obj]):this.multiple?this.formControl.setValue(obj.map((key=>this.treeControl.dataNodes.find((item=>item.key===key))??{key}))):(obj=Array.isArray(obj)?obj[0]:obj,this.formControl.setValue(this.treeControl.dataNodes.find((item=>item.key===obj))??{key:obj})))}registerOnChange(fn){this.onChange=fn}registerOnTouched(fn){}setDisabledState(isDisabled){isDisabled?(this.formControl.disable(),this.autoControl.disable()):(this.formControl.enable(),this.autoControl.enable())}compareWith(a,b){return a?.key===b?.key}displayWith(value){return Array.isArray(value)?value:value?.label||value?.value}trackByFun(index,item){return item?.key}isSelected(option){return this.multiple?this.multipleSelection.isSelected(option?.key):this.singleSelection.isSelected(option?.key)}toggleNode(node){this.multiple?this.multipleSelection.toggle(node.key):this.singleSelection.toggle(node.key)}onAutocompleteSelected(event){const key=event.option.value?.key;this.multiple?this.multipleSelection.select(key):this.singleSelection.select(key),this.autoInput.nativeElement.value="",this.autoControl.setValue(null)}onCheckboxSelect(event,option){this.multiple?this.multipleSelection.toggle(option.key):this.singleSelection.toggle(option.key)}removeChip(event){this.multiple?this.multipleSelection.deselect(event.key):this.singleSelection.deselect(event.key)}clear(event){event.stopPropagation(),this.formControl.setValue(null),this.singleSelection.clear(),this.multipleSelection.clear()}clearSearch(event){event.stopPropagation(),this.autoControl.setValue(null)}add(e){}someSelect(){return this.multipleSelection.hasValue()&&!this.allSelect}setAll(selected){this.allSelect=selected,selected?(this.multipleSelection.select(...this.treeControl.dataNodes.map((({key})=>key))),this.formControl.setValue(this.treeControl.dataNodes.map((item=>({...item}))))):(this.multipleSelection.clear(),this.formControl.setValue([]))}onAutocompleteOpened(){this.cdkVirtualScrollViewPort?.checkViewportSize()}toggleExpand(){this.unfold=!this.unfold,this.unfold?this.treeControl.expandAll():this.treeControl.collapseAll()}getErrorMessage(){return Object.values(this.formControl.errors).join(", ")}}).ctorParameters=()=>[{type:core.ElementRef}],_class.propDecorators={appearance:[{type:core.Input}],floatLabel:[{type:core.Input}],displayBehaviour:[{type:core.Input}],displayDensity:[{type:core.Input}],label:[{type:core.Input}],placeholder:[{type:core.Input}],panelWidth:[{type:core.Input}],validators:[{type:core.Input}],treeNodes:[{type:core.Input}],initialLevel:[{type:core.Input}],multiple:[{type:core.Input}],maxTagCount:[{type:core.Input}],virtualScroll:[{type:core.Input}],autocomplete:[{type:core.Input}],searchable:[{type:core.Input}],treeViewer:[{type:core.Input}],autoActiveFirstOption:[{type:core.Input}],autoSelectActiveOption:[{type:core.Input}],loading:[{type:core.Input}],autoInput:[{type:core.ViewChild,args:["autoInput"]}],cdkVirtualScrollViewPort:[{type:core.ViewChild,args:[scrolling.N7,{static:!1}]}]},_class);NgmTreeSelectComponent=(0,tslib_es6.gn)([(0,ngneat_until_destroy.c)({checkProperties:!0}),(0,core.Component)({standalone:!0,imports:[common.CommonModule,fesm2022_forms.u5,fesm2022_forms.UX,search_component.K,fesm2022_button.ot,icon.Ps,form_field.lN,fesm2022_select.LD,autocomplete.Bb,scrolling.Cl,fesm2022_checkbox.p9,progress_spinner.Cq,input.c,chips.Hi,fesm2022_tree.dp,ngx_translate_core.aw,core_module.A,display_behaviour_component.o,directives_displayDensity.Z],selector:"ngm-tree-select",template:'<mat-form-field *ngIf="!treeViewer" class="flex-1" [appearance]="appearance" [floatLabel]="floatLabel" [color]="color">\n    <mat-label>{{ label }}</mat-label>\n\n    <ng-container *ngIf="useAutocomplete">\n      <mat-chip-grid #chipGrid >\n        <mat-chip-row *ngFor="let chip of chipList$ | async" (removed)="removeChip(chip)">\n          <ngm-display-behaviour [option]="{value: chip.key, label: chip.label}"\n            [displayBehaviour]="displayBehaviour">\n          </ngm-display-behaviour>\n          <button matChipRemove >\n            <mat-icon>cancel</mat-icon>\n          </button>\n        </mat-chip-row>\n\n        <mat-chip-row *ngIf="restChips?.length">+{{restChips?.length}}</mat-chip-row>\n      </mat-chip-grid>\n      <input #autoInput [placeholder]="placeholder"\n        [formControl]="autoControl"\n        [matChipInputFor]="chipGrid" [matAutocomplete]="auto"\n        [matChipInputSeparatorKeyCodes]="separatorKeysCodes"\n        (matChipInputTokenEnd)="add($event)"/>\n\n      \x3c!-- \n        [class.multiple]="multiple"\n        [class.ngm-density__compact]="displayDensity===\'compact\'"\n        [class.ngm-density__cosy]="displayDensity===\'cosy\'" --\x3e\n      <mat-autocomplete #auto="matAutocomplete" disableRipple class="ngm-tree-select__panel"\n        [class]="\'ngm-autocomplete-panel \' + (multiple ? \'multiple\' : \'\') + \' \' + (displayDensity===\'compact\' ? \'ngm-density__compact\' : \'\') + \' \' + (displayDensity===\'cosy\' ? \'ngm-density__cosy\' : \'\')"\n        [displayWith]="displayWith"\n        [panelWidth]="panelWidth"\n        [autoActiveFirstOption]="autoActiveFirstOption"\n        [autoSelectActiveOption]="autoSelectActiveOption"\n        (opened)="onAutocompleteOpened()"\n        (optionSelected)="onAutocompleteSelected($event)"\n      >\n        <cdk-virtual-scroll-viewport *ngIf="virtualScroll; else nonVirtualScroll" [itemSize]="virtualScrollItemSize"\n          minBufferPx="200" maxBufferPx="400" class="ngm-tree-select__viewport">\n          <mat-option *cdkVirtualFor="let option of selectOptions$ | async; trackBy: trackByFun" [value]="option"\n            [class.mat-selected]="isSelected(option)"\n          >\n\n            <div class="flex-1 flex justify-start items-center" >\n              <button mat-icon-button [displayDensity]="displayDensity"\n                [style.visibility]="!option.expandable ? \'hidden\' : \'\'"\n                [style.marginLeft.px]="option.level * treeNodePaddingIndent"\n                (click)="$event.stopPropagation(); treeControl.toggle(option)">\n                <mat-icon class="mat-icon-rtl-mirror">\n                  {{treeControl.isExpanded(option) ? \'expand_more\' : \'chevron_right\'}}\n                </mat-icon>\n              </button>\n\n              <mat-checkbox *ngIf="multiple" class="flex-1"\n                [checked]="isSelected(option)"\n                (click)="$event.stopPropagation()"\n                (change)="onCheckboxSelect($event, option)"\n              >\n                <ngm-display-behaviour [option]="{value: option.key, label: option.label}"\n                  [displayBehaviour]="displayBehaviour"\n                  [highlight]="autoHighlight">\n                </ngm-display-behaviour>\n              </mat-checkbox>\n\n              <ngm-display-behaviour *ngIf="!multiple" class="flex-1"\n                [option]="{value: option.key, label: option.label}"\n                [displayBehaviour]="displayBehaviour"\n                [highlight]="autoHighlight">\n              </ngm-display-behaviour>\n            </div>\n\n          </mat-option>\n        </cdk-virtual-scroll-viewport>\n\n        <ng-template #nonVirtualScroll>\n          <mat-option *ngFor="let option of selectOptions$ | async" [value]="option"\n            (click)="$event.stopPropagation();$event.preventDefault()">\n            <div class="flex-1 flex justify-start items-center">\n              <button mat-icon-button [displayDensity]="displayDensity"\n                [style.visibility]="!option.expandable ? \'hidden\' : \'\'"\n                [style.marginLeft.px]="option.level * treeNodePaddingIndent"\n                (click)="$event.stopPropagation(); treeControl.toggle(option)">\n                <mat-icon class="mat-icon-rtl-mirror">\n                  {{treeControl.isExpanded(option) ? \'expand_more\' : \'chevron_right\'}}\n                </mat-icon>\n              </button>\n\n              <mat-checkbox *ngIf="multiple" class="flex-1"\n                [checked]="isSelected(option)"\n                (click)="$event.stopPropagation()"\n                (change)="onCheckboxSelect($event, option)"\n              >\n                <ngm-display-behaviour [option]="{value: option.key, label: option.label}"\n                  [displayBehaviour]="displayBehaviour"\n                  [highlight]="autoHighlight">\n                </ngm-display-behaviour>\n              </mat-checkbox>\n\n              <ngm-display-behaviour *ngIf="!multiple" class="flex-1"\n                [option]="{value: option.key, label: option.label}"\n                [displayBehaviour]="displayBehaviour"\n                [highlight]="autoHighlight">\n              </ngm-display-behaviour>\n            </div>\n\n          </mat-option>\n        </ng-template>\n      </mat-autocomplete>\n    </ng-container>\n\n    <mat-select *ngIf="!useAutocomplete" [formControl]="formControl" [compareWith]="compareWith" disableRipple\n      [panelClass]="\'ngm-tree-select__panel \' + (multiple ? \'multiple\' : \'\') + \' \' + (displayDensity===\'compact\' ? \'ngm-density__compact\' : \'\') + \' \' + (displayDensity===\'cosy\' ? \'ngm-density__cosy\' : \'\')"\n      [multiple]="multiple"\n      [placeholder]="placeholder"\n    >\n\n      <mat-select-trigger class="flex items-center">\n        <mat-checkbox *ngIf="multiple" class="mat-option-pseudo-checkbox" displayDensity="compact"\n          [checked]="allSelect"\n          [indeterminate]="someSelect()"\n          (change)="setAll($event.checked)">\n        </mat-checkbox>\n        <button mat-icon-button displayDensity="compact"\n          (click)="toggleExpand()">\n          <mat-icon *ngIf="!unfold">unfold_more</mat-icon>\n          <mat-icon *ngIf="unfold">unfold_less</mat-icon>\n        </button>\n        \n        <span>\n          {{ trigger$ | async }}\n        </span>\n      </mat-select-trigger>\n\n      <div *ngIf="searchable" class="mat-option mat-focus-indicator ngm-tree-select__option-toolbar flex justify-start items-center"\n        [class.mat-option-multiple]="multiple"\n        >\n        <ngm-search class="flex-1 px-1" [displayDensity]="displayDensity"\n          [formControl]="autoControl">\n        </ngm-search>\n      </div>\n\n      \x3c!-- mat-select 的 panel 中不好实现 virtual-scroll 功能\n      <cdk-virtual-scroll-viewport *ngIf="virtualScroll; else nonVirtualScroll" [itemSize]="42" [style.height.px]=8*42 minBufferPx="200" maxBufferPx="400"\n        class="ngm-tree-select__viewport">\n      </cdk-virtual-scroll-viewport> --\x3e\n\n      <mat-option *ngFor="let option of selectOptions$ | async" [value]="option">\n        <div class="flex-1 flex justify-start items-center">\n          <button mat-icon-button [displayDensity]="displayDensity"\n            [style.visibility]="!option.expandable ? \'hidden\' : \'\'"\n            [style.marginLeft.px]="option.level * treeNodePaddingIndent"\n            (click)="$event.stopPropagation(); treeControl.toggle(option)">\n            <mat-icon class="mat-icon-rtl-mirror">\n              {{treeControl.isExpanded(option) ? \'expand_more\' : \'chevron_right\'}}\n            </mat-icon>\n          </button>\n\n          <ngm-display-behaviour class="flex-1"\n            [option]="{value: option.key, label: option.label}"\n            [displayBehaviour]="displayBehaviour"\n            [highlight]="autoHighlight"\n          >\n          </ngm-display-behaviour>\n        </div>\n      </mat-option>\n\n      \x3c!-- Selected options 展示由于是与正常的选项重复,会造成在多选情况下组件只显示前面的已选中, 后一个仍是未选中状态 --\x3e\n      \x3c!-- 将 Selected Options 隐藏在选项列表的最后, 既可以在 Tree 没有展开的情况下让 Select 组件匹配到已选中值, 又不会对多选情况下造成对正常选项的选中阻拦. --\x3e \n      <mat-option *ngFor="let option of selectedOptions$ | async" class="ngm-tree-select__selected-option" style="min-height: 0; height: 0; overflow: hidden;"\n        [value]="option">\n        <ngm-display-behaviour class="flex-1"\n          [option]="{value: option.key, label: option.label}"\n          [displayBehaviour]="displayBehaviour"\n          [highlight]="autoHighlight"\n        >\n        </ngm-display-behaviour>\n      </mat-option>\n      \n    </mat-select>\n\n    <div matPrefix *ngIf="useAutocomplete" class="flex justify-start items-center">\n\n      <button mat-icon-button [displayDensity]="displayDensity"\n        (click)="$event.stopPropagation();toggleExpand()">\n        <mat-icon *ngIf="!unfold">unfold_more</mat-icon>\n        <mat-icon *ngIf="unfold">unfold_less</mat-icon>\n      </button>\n\n      <mat-checkbox *ngIf="multiple" class="mat-option-pseudo-checkbox"\n        [checked]="allSelect"\n        [indeterminate]="someSelect()"\n        (change)="setAll($event.checked)"></mat-checkbox>\n    </div>\n\n    <div matSuffix class="flex justify-start items-center" >\n      <button *ngIf="isNotInitial" mat-icon-button displayDensity="cosy" ngmAppearance="danger" [disabled]="disabled"\n        (click)="clear($event)">\n        <mat-icon>close</mat-icon>\n      </button>\n\n      <ng-content select="[matSuffix]"></ng-content>\n      \n    </div>\n\n    <mat-error *ngIf="formControl.invalid">{{getErrorMessage()}}</mat-error>\n</mat-form-field>\n\n<ng-container *ngIf="treeViewer">\n\n  <ngm-search *ngIf="searchable" class="w-full shrink-0 p-2" [formControl]="autoControl"></ngm-search>\n\n  <mat-tree class="selection ngm-tree-select__panel flex-1"\n    [dataSource]="dataSource"\n    [treeControl]="treeControl"\n    [displayDensity]="displayDensity"\n  >\n    \x3c!-- This is the tree node template for leaf nodes --\x3e\n    <mat-tree-node *matTreeNodeDef="let node" class="rounded-lg"\n      matTreeNodePadding [matTreeNodePaddingIndent]="treeNodePaddingIndent"\n      [ngClass]="isSelected(node) ? \'selected\' : \'\'"\n      [disabled]="disabled"\n      (click)="disabled||toggleNode(node)">\n      \x3c!-- use a disabled button to provide padding for tree leaf --\x3e\n      <button mat-icon-button disabled [displayDensity]="displayDensity"></button>\n      \n      <ngm-display-behaviour class="flex-1" [option]="{value: node.key, label: node.label}"\n        [displayBehaviour]="displayBehaviour"\n        [highlight]="autoHighlight">\n      </ngm-display-behaviour>\n    </mat-tree-node>\n    \x3c!-- This is the tree node template for expandable nodes --\x3e\n    <mat-tree-node *matTreeNodeDef="let node;when: hasChild" class="rounded-lg"\n      matTreeNodePadding [matTreeNodePaddingIndent]="treeNodePaddingIndent"\n      [ngClass]="isSelected(node) ? \'selected\' : \'\'"\n      [disabled]="disabled"\n      (click)="disabled||toggleNode(node)">\n      <button mat-icon-button matTreeNodeToggle [displayDensity]="displayDensity"\n              [attr.aria-label]="\'Toggle \' + node.name">\n        <mat-icon class="mat-icon-rtl-mirror">\n          {{treeControl.isExpanded(node) ? \'expand_more\' : \'chevron_right\'}}\n        </mat-icon>\n      </button>\n\n      <ngm-display-behaviour class="flex-1" [option]="{value: node.key, label: node.label}"\n        [displayBehaviour]="displayBehaviour"\n        [highlight]="autoHighlight">\n      </ngm-display-behaviour>\n    </mat-tree-node>\n  </mat-tree>\n  \n</ng-container>\n',host:{"[attr.disabled]":"disabled || null","[class._ngm-animation-noopable]":'_animationMode === "NoopAnimations"',"[class.ngm-tree-select-disabled]":"disabled",class:"ngm-focus-indicator ngm-tree-select"},inputs:["disabled","disableRipple","color"],changeDetection:core.ChangeDetectionStrategy.OnPush,providers:[{provide:fesm2022_forms.JU,multi:!0,useExisting:(0,core.forwardRef)((()=>NgmTreeSelectComponent))}],styles:[tree_select_componentngResource_default()]}),(0,tslib_es6.w6)("design:paramtypes",[core.ElementRef])],NgmTreeSelectComponent)},"./packages/angular/core/core.module.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>OcapCoreModule});var OcapCoreModule_1,tslib__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_core_service__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./packages/angular/core/core.service.ts"),_directives__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/angular/core/directives/displayDensity.ts"),_directives__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/angular/core/directives/appearance.ts"),_directives__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./packages/angular/core/directives/button-group.directive.ts");let OcapCoreModule=OcapCoreModule_1=class OcapCoreModule{static forRoot(){return{ngModule:OcapCoreModule_1,providers:[_core_service__WEBPACK_IMPORTED_MODULE_0__.q]}}};OcapCoreModule=OcapCoreModule_1=(0,tslib__WEBPACK_IMPORTED_MODULE_1__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule)({imports:[_directives__WEBPACK_IMPORTED_MODULE_3__.Z,_directives__WEBPACK_IMPORTED_MODULE_4__.A,_directives__WEBPACK_IMPORTED_MODULE_5__.d],exports:[_directives__WEBPACK_IMPORTED_MODULE_3__.Z,_directives__WEBPACK_IMPORTED_MODULE_4__.A,_directives__WEBPACK_IMPORTED_MODULE_5__.d],declarations:[],providers:[]})],OcapCoreModule)},"./packages/angular/core/core.service.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{q:()=>NgmDSCoreService});var _class,tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),src=__webpack_require__("./packages/core/src/index.ts"),Subject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js"),merge=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/merge.js"),empty=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/empty.js"),types=__webpack_require__("./packages/angular/core/types.ts");let NgmAgentService=((_class=class NgmAgentService{constructor(agents){this.agents=agents,this.error$=new Subject.x,this._error$=(0,merge.T)(...this.agents.map((agent=>agent.selectError())))}selectLocalAgentStatus(){const localAgent=this.agents.find((agent=>agent.type===src.buO.Local));if(!localAgent)throw new Error("Can't found Local Agent config");return localAgent?.selectStatus()??empty.E}error(err){this.error$.next(err)}selectError(){return this._error$}}).ctorParameters=()=>[{type:Array,decorators:[{type:core.Inject,args:[types.fH]}]}],_class);NgmAgentService=(0,tslib_es6.gn)([(0,core.Injectable)(),(0,tslib_es6.w6)("design:paramtypes",[Array])],NgmAgentService);let NgmDSCacheService=class NgmDSCacheService extends src.eNP{};var core_service_class;NgmDSCacheService=(0,tslib_es6.gn)([(0,core.Injectable)()],NgmDSCacheService);let NgmDSCoreService=((core_service_class=class NgmDSCoreService extends src.Q$V{constructor(agents,models,dataSourceFactory,cacheService){super(agents,models,dataSourceFactory,cacheService),this.agents=agents,this.models=models,this.dataSourceFactory=dataSourceFactory}ngOnDestroy(){super.onDestroy()}}).ctorParameters=()=>[{type:Array,decorators:[{type:core.Inject,args:[types.fH]}]},{type:Array,decorators:[{type:core.Optional},{type:core.Inject,args:[types.ET]}]},{type:Array,decorators:[{type:core.Optional},{type:core.Inject,args:[types.OF]}]},{type:NgmDSCacheService,decorators:[{type:core.Optional}]}],core_service_class);NgmDSCoreService=(0,tslib_es6.gn)([(0,core.Injectable)(),(0,tslib_es6.w6)("design:paramtypes",[Array,Array,Array,NgmDSCacheService])],NgmDSCoreService)},"./packages/angular/core/directives/appearance.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>AppearanceDirective});var _class,tslib__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@angular/cdk/fesm2022/a11y.mjs"),_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/cdk/fesm2022/coercion.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_angular_material_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/material/fesm2022/core.mjs"),rxjs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js");const _NgmAppearanceBase=(0,_angular_material_core__WEBPACK_IMPORTED_MODULE_0__.pj)(class{constructor(_elementRef){this._elementRef=_elementRef}});let AppearanceDirective=((_class=class AppearanceDirective extends _NgmAppearanceBase{get outline(){return"outline"===this.ngmAppearance}set outline(value){(0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.Ig)(value)&&(this.ngmAppearance="outline")}get hero(){return"hero"===this.ngmAppearance}set hero(value){(0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.Ig)(value)&&(this.ngmAppearance="hero")}get acrylic(){return"acrylic"===this.ngmAppearance}set acrylic(value){(0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.Ig)(value)&&(this.ngmAppearance="acrylic")}get opacity(){return"opacity"===this.ngmAppearance}set opacity(value){(0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.Ig)(value)&&(this.ngmAppearance="opacity")}get dashed(){return"dashed"===this.ngmAppearance}set dashed(value){(0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.Ig)(value)&&(this.ngmAppearance="dashed")}get danger(){return"danger"===this.ngmAppearance}set danger(value){(0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.Ig)(value)&&(this.ngmAppearance="danger")}constructor(elementRef,_focusMonitor){super(elementRef),this._focusMonitor=_focusMonitor,this.ngmAppearance="filled",this._onFocus=new rxjs__WEBPACK_IMPORTED_MODULE_2__.x,this._hasFocus=!1}focus(){this._hasFocus||(this._elementRef.nativeElement.focus(),this._onFocus.next({chip:this})),this._hasFocus=!0}getLabel(){throw new Error("Method not implemented.")}}).ctorParameters=()=>[{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.ElementRef},{type:_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__.tE}],_class.propDecorators={ngmAppearance:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.Input}],outline:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.Input},{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.HostBinding,args:["class.ngm-appearance-outline"]}],hero:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.Input},{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.HostBinding,args:["class.ngm-appearance-hero"]}],acrylic:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.Input},{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.HostBinding,args:["class.ngm-appearance-acrylic"]}],opacity:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.Input},{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.HostBinding,args:["class.ngm-appearance-opacity"]}],dashed:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.Input},{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.HostBinding,args:["class.ngm-appearance-dashed"]}],danger:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.Input},{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.HostBinding,args:["class.ngm-appearance-danger"]}]},_class);AppearanceDirective=(0,tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Directive)({standalone:!0,selector:"[ngmAppearance]",inputs:["color"],host:{"(focus)":"focus()"}}),(0,tslib__WEBPACK_IMPORTED_MODULE_5__.w6)("design:paramtypes",[_angular_core__WEBPACK_IMPORTED_MODULE_3__.ElementRef,_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__.tE])],AppearanceDirective)},"./packages/angular/core/directives/button-group.directive.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{d:()=>ButtonGroupDirective});var _class,tslib__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let ButtonGroupDirective=((_class=class ButtonGroupDirective{constructor(elementRef){this.elementRef=elementRef}}).ctorParameters=()=>[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef}],_class);ButtonGroupDirective=(0,tslib__WEBPACK_IMPORTED_MODULE_1__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive)({standalone:!0,selector:"[ngmButtonGroup]",host:{class:"ngm-button-group"}}),(0,tslib__WEBPACK_IMPORTED_MODULE_1__.w6)("design:paramtypes",[_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef])],ButtonGroupDirective)},"./packages/angular/core/directives/displayDensity.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>DisplayDensity,Z:()=>DensityDirective});var _class,DisplayDensity,tslib__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");!function(DisplayDensity){DisplayDensity.comfortable="comfortable",DisplayDensity.cosy="cosy",DisplayDensity.compact="compact"}(DisplayDensity||(DisplayDensity={}));let DensityDirective=((_class=class DensityDirective{get densityCosy(){return this.displayDensity===DisplayDensity.comfortable}get densityCompact(){return this.displayDensity===DisplayDensity.compact}get densityComfortable(){return this.displayDensity===DisplayDensity.cosy}}).propDecorators={displayDensity:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],densityCosy:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,args:["class.ngm-density__comfortable"]}],densityCompact:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,args:["class.ngm-density__compact"]}],densityComfortable:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,args:["class.ngm-density__cosy"]}]},_class);DensityDirective=(0,tslib__WEBPACK_IMPORTED_MODULE_1__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive)({standalone:!0,selector:"[displayDensity]"})],DensityDirective)},"./packages/angular/core/i18n/missing-tanslation.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{l:()=>NgmMissingTranslationHandler});class NgmMissingTranslationHandler{handle(params){return params.interpolateParams&&params.interpolateParams.Default||params.key}}},"./packages/angular/core/types.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{ET:()=>OCAP_MODEL_TOKEN,OF:()=>OCAP_DATASOURCE_TOKEN,fH:()=>OCAP_AGENT_TOKEN});var _angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");const OCAP_AGENT_TOKEN=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.InjectionToken("OCAP-Agent"),OCAP_MODEL_TOKEN=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.InjectionToken("OCAP-Model"),OCAP_DATASOURCE_TOKEN=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.InjectionToken("OCAP-DataSource")},"./packages/angular/common/display-behaviour/display-behaviour.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,'@charset "UTF-8";\n:host {\n  display: flex;\n  place-content: center space-between;\n  align-items: center;\n  white-space: nowrap;\n}\n:host.ngm-display-behaviour__exclude-selected {\n  text-decoration-line: line-through;\n}\n:host.ngm-display-behaviour__auto:hover .ngm-display-behaviour__option-value {\n  flex: 1;\n}\n:host.ngm-display-behaviour__auto.ngm-display-behaviour__no-label .ngm-display-behaviour__option-text {\n  flex: 0;\n}\n:host.ngm-display-behaviour__auto.ngm-display-behaviour__no-label .ngm-display-behaviour__option-value {\n  flex: 1;\n}\n:host.ngm-display-behaviour__auto .ngm-display-behaviour__option-text {\n  flex: 1;\n}\n:host.ngm-display-behaviour__auto .ngm-display-behaviour__option-value {\n  flex: 0;\n  margin-left: 0.25em;\n  font-size: 0.85em;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  text-align: right;\n}\n:host.ngm-display-behaviour__idAndDescription .ngm-display-behaviour__option-value {\n  margin-right: 1em;\n}\n:host.ngm-display-behaviour__idAndDescription .ngm-display-behaviour__option-text {\n  font-style: italic;\n  /* 因为有斜体和 hidden,避免字的尾部被隐藏 */\n  padding: 0 0.25em;\n  font-size: 0.85em;\n}\n:host.ngm-display-behaviour__descriptionAndId.ngm-display-behaviour__no-label .ngm-display-behaviour__option-text {\n  flex: 0;\n}\n:host.ngm-display-behaviour__descriptionAndId .ngm-display-behaviour__option-text {\n  flex: 1;\n  margin-right: 1em;\n}\n:host.ngm-display-behaviour__descriptionAndId .ngm-display-behaviour__option-value {\n  flex: 1;\n  margin-left: 0.25em;\n  /* descriptionAndId 中 value 作为辅助信息字体大小显示小一号 */\n  font-size: 0.85em;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  text-align: right;\n}\n:host.ngm-display-behaviour__descriptionOnly .ngm-display-behaviour__option-text {\n  flex: 1;\n}\n:host.ngm-display-behaviour__descriptionOnly .ngm-display-behaviour__option-value {\n  flex: 0;\n}\n:host .ngm-display-behaviour__option-text {\n  max-width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n:host .ngm-display-behaviour__selected.mat-icon {\n  margin-right: 0;\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./packages/angular/common/search/search.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n  position: relative;\n  display: block;\n}\n:host .ngm-search__icon {\n  position: absolute;\n  left: 10px;\n  top: 0px;\n  bottom: 0px;\n  display: flex;\n  align-items: center;\n}\n\n.ngm-search__input {\n  width: 100%;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./packages/angular/common/tree-select/tree-select.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n  display: flex;\n  flex-direction: column;\n}\n\n.ngm-tree-select__viewport {\n  min-height: 200px;\n  max-height: 100%;\n}\n\n.mat-chip {\n  max-width: 100%;\n}\n.mat-chip .ngm-display-behaviour {\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n\n.mat-option {\n  overflow: visible;\n  max-width: unset;\n}\n\n.ngm-tree-select__search {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  position: relative;\n}\n.ngm-tree-select__search .ngm-tree-select__search-icon {\n  position: absolute;\n  left: 10px;\n  top: 0px;\n  bottom: 0px;\n  display: flex;\n  align-items: center;\n}\n.ngm-tree-select__search .ngm-tree-select__search-input {\n  padding: 10px;\n  padding-left: 32px;\n  border-radius: 10px;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);