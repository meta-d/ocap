(self.webpackChunkocap=self.webpackChunkocap||[]).push([[8148],{"./packages/angular/copilot/token/token.component.ts.css?ngResource!=!./node_modules/@angular-devkit/build-angular/node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICAgIDpob3N0IHsKICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICAgIH0KICAgIA%3D%3D!./packages/angular/copilot/token/token.component.ts":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"\n      :host {\n        display: inline-block;\n      }\n    ",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./packages/angular/copilot/chat/chat.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,':host {\n  background-color: var(--ngm-copilot-bg-color, #fff);\n  font-family: var(--ngm-copilot-font-family);\n  --hot-pink: oklch(59.91% 0.239 8.14);\n  --hot-red: oklch(61.42% 0.238 15.34);\n  --orange-red: oklch(63.32% 0.24 31.68);\n  --red-to-orange-horizontal-gradient: linear-gradient(90deg, var(--hot-pink) 0%, var(--orange-red) 100%);\n  --subtle-purple: color-mix(in srgb, var(--bright-blue) 5%, white 10%);\n  --full-contrast: white;\n  --bright-blue: color-mix(in srgb, oklch(51.01% 0.274 263.83), var(--full-contrast) 60%);\n  position: relative;\n  display: flex;\n  flex-direction: column;\n}\n\n.copilot-code-container {\n  border-radius: 0.5rem;\n  --tw-bg-opacity: 1;\n  background-color: rgb(229 231 235 / var(--tw-bg-opacity));\n  font-size: 0.75rem;\n  line-height: 1rem;\n  --tw-text-opacity: 1;\n  color: rgb(107 114 128 / var(--tw-text-opacity));\n}\n\n.copilot-code-titlebar {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom-width: 2px;\n  padding: 0.5rem;\n}\n\n.copilot-code-copy-button {\n  display: flex;\n  align-items: center;\n}\n\n.copilot-code-content {\n  overflow-x: auto;\n  overflow-y: hidden;\n  white-space: pre;\n  padding: 0.5rem;\n}\n\n.copilot-message-stop .emoji-loader {\n  width: 1.5rem;\n}\n.copilot-message-stop .emoji-loader::before {\n  font-size: 1rem;\n  line-height: 1rem;\n}\n\n.ngm-copilot__message-remove.mat-mdc-icon-button {\n  background-color: var(--ngm-copilot-bg-color, #fff);\n  position: absolute;\n  z-index: 101;\n  --tw-text-opacity: 1;\n  color: rgb(100 116 139 / var(--tw-text-opacity));\n}\n\n.ngm-copilot__message-remove.mat-mdc-icon-button:hover {\n  --tw-bg-opacity: 1;\n  background-color: rgb(248 250 252 / var(--tw-bg-opacity));\n  --tw-text-opacity: 1;\n  color: rgb(239 68 68 / var(--tw-text-opacity));\n}\n\n:is(.dark .ngm-copilot__message-remove.mat-mdc-icon-button) {\n  background-color: rgb(245 245 245 / 0.1);\n}\n\n.pac-colpilot__clear-messages {\n  border-style: dashed;\n}\n\n.ngm-copilot__resubmit {\n  border-radius: 9999px;\n}\n\n.mat-mdc-input-element {\n  background-color: transparent;\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n}\n\n.ngm-colpilot__active {\n  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);\n  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\n}\n\n:is(.dark .ngm-colpilot__active) {\n  --tw-shadow-color: #262626;\n  --tw-shadow: var(--tw-shadow-colored);\n}\n.ngm-colpilot__active .ngm-colpilot__words {\n  z-index: 0;\n}\n\n.ngm-copilot-chat__message-content {\n  max-width: 100%;\n  border-radius: 0.5rem;\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n  padding-left: 1rem;\n  padding-right: 1rem;\n}\n\n.ngm-copilot-chat__message-editing .ngm-copilot-chat__message-content {\n  align-self: stretch;\n}\n.ngm-copilot-chat__message-editing .message-edit-button {\n  opacity: 0;\n  visibility: hidden;\n}\n\n.ngm-copilot__user-message {\n  border-radius: 0.75rem;\n  border-top-right-radius: 0.125rem;\n  background-color: rgb(229 231 235 / 0.5);\n}\n\n:is(.dark .ngm-copilot__user-message) {\n  background-color: rgb(64 64 64 / 0.3);\n}\n\n.ngm-copilot-chat__answering {\n  background-color: var(--ngm-copilot-bg-color, white);\n}\n\n.icon-md {\n  stroke-width: 1.5;\n  height: 18px;\n  width: 18px;\n}\n\n:host::ng-deep markdown p:first-child {\n  text-indent: 1rem;\n}\n:host::ng-deep markdown ol {\n  list-style-type: decimal;\n}\n:host::ng-deep markdown :not(pre) > code[class*=language-],\n:host::ng-deep markdown pre[class*=language-] {\n  scrollbar-width: thin;\n  scrollbar-color: hsla(0, 0%, 100%, 0.1) transparent;\n  border-radius: 0.5rem;\n  --tw-bg-opacity: 1;\n  background-color: rgb(3 7 18 / var(--tw-bg-opacity));\n}\n:host::ng-deep markdown :not(pre) > code[class*=language-]:hover,\n:host::ng-deep markdown pre[class*=language-]:hover {\n  scrollbar-color: hsla(0, 0%, 100%, 0.3) transparent;\n}\n:host::ng-deep markdown :not(pre) > code[class*=language-]::-webkit-scrollbar,\n:host::ng-deep markdown pre[class*=language-]::-webkit-scrollbar {\n  height: 1rem;\n  width: 0.5rem;\n}\n:host::ng-deep markdown :not(pre) > code[class*=language-]::-webkit-scrollbar:horizontal,\n:host::ng-deep markdown pre[class*=language-]::-webkit-scrollbar:horizontal {\n  height: 0.5rem;\n  width: 1rem;\n}\n:host::ng-deep markdown :not(pre) > code[class*=language-]::-webkit-scrollbar-track,\n:host::ng-deep markdown pre[class*=language-]::-webkit-scrollbar-track {\n  background-color: transparent;\n  border-radius: 9999px;\n}\n:host::ng-deep markdown :not(pre) > code[class*=language-]::-webkit-scrollbar-thumb,\n:host::ng-deep markdown pre[class*=language-]::-webkit-scrollbar-thumb {\n  --tw-border-opacity: 1;\n  background-color: hsla(0, 0%, 100%, 0.1);\n  border-color: rgba(255, 255, 255, var(--tw-border-opacity));\n  border-radius: 9999px;\n  border-width: 1px;\n}\n:host::ng-deep markdown :not(pre) > code[class*=language-]::-webkit-scrollbar-thumb:hover,\n:host::ng-deep markdown pre[class*=language-]::-webkit-scrollbar-thumb:hover {\n  background-color: hsla(0, 0%, 100%, 0.3);\n}\n:host::ng-deep markdown code {\n  font-family: var(--code-font);\n  border-radius: 0.25rem;\n  font-weight: 400;\n  isolation: isolate;\n}\n:host::ng-deep markdown code:not(pre *):before {\n  content: "";\n  position: absolute;\n  inset: 0;\n  width: 100%;\n  height: 100%;\n  background: var(--subtle-purple);\n  border-radius: 0.25rem;\n  z-index: -1;\n}\n:host::ng-deep markdown code:not(pre *) {\n  position: relative;\n  padding: 0 0.3rem;\n  background: var(--red-to-orange-horizontal-gradient);\n  background-clip: text;\n  -webkit-background-clip: text;\n  color: transparent;\n  max-width: max-content;\n  width: 100%;\n  display: inline-block;\n}\n:host::ng-deep markdown h1:first-child {\n  margin-top: 0;\n}\n:host::ng-deep markdown h1 {\n  font-size: 2.25em;\n}\n:host::ng-deep markdown h2 {\n  font-weight: 600;\n  font-size: 1.5em;\n}\n:host::ng-deep markdown h3 {\n  font-weight: 600;\n  font-size: 1.2em;\n}\n:host::ng-deep markdown h4 {\n  font-weight: 600;\n}\n:host::ng-deep markdown ol, :host::ng-deep markdown ul, :host::ng-deep markdown menu {\n  list-style: auto;\n}\n:host::ng-deep markdown ul {\n  list-style-type: disc;\n  padding-left: 1.625em;\n  line-height: 1;\n}\n:host::ng-deep .ngxp__container.ngxp__animation {\n  border-width: 0px;\n  padding: 0px;\n  --tw-shadow: 0 0 #0000;\n  --tw-shadow-colored: 0 0 #0000;\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\n}\n\n::ng-deep .ngm-copilot-chat__autocomplete-panel.ngm-density__compact .mdc-list-item {\n  padding-left: 0.5rem;\n}\n::ng-deep .ngm-menu__copilot-context-popper {\n  position: relative;\n  width: 300px;\n  max-width: 300px;\n  min-height: 200px;\n}\n::ng-deep .ngm-menu__copilot-context-popper .cdk-virtual-scroll-viewport {\n  overflow-x: hidden;\n}\n::ng-deep .ngm-menu__copilot-context-popper .cdk-virtual-scroll-content-wrapper {\n  max-width: 100%;\n}\n::ng-deep .ngm-copilot-chat__roles.mdc-evolution-chip-set .mdc-evolution-chip-set__chips {\n  justify-content: center;\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./packages/angular/copilot/enable/enable.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    display: flex;\n    height: 100%;\n    width: 100%\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./packages/angular/common/directives/highlight.directive.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{t:()=>NgmHighlightDirective});var _NgmHighlightDirective,tslib__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/platform-browser/fesm2022/platform-browser.mjs");let NgmHighlightDirective=((_NgmHighlightDirective=class NgmHighlightDirective{constructor(el,sanitizer){this.el=el,this.sanitizer=sanitizer,this.caseSensitive=!1,this.customClasses=""}ngOnChanges({content,searchTerm,caseSensitive}){this.el?.nativeElement&&(searchTerm||content||caseSensitive)&&this.updateContent()}updateContent(){const text=this.content||this.el.nativeElement.textContent;if(this.searchTerm){const regex=new RegExp(this.searchTerm,this.caseSensitive?"g":"gi"),newText=text.replace(regex,(match=>`<mark class="highlight ${this.customClasses}">${match}</mark>`)),sanitzed=this.sanitizer.sanitize(_angular_core__WEBPACK_IMPORTED_MODULE_0__.SecurityContext.HTML,newText);this._content=sanitzed}else this._content=text}}).ctorParameters=()=>[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef},{type:_angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__.DomSanitizer}],_NgmHighlightDirective.propDecorators={searchTerm:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input,args:["ngmHighlight"]}],content:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],caseSensitive:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],customClasses:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],_content:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,args:["innerHtml"]}]},_NgmHighlightDirective);NgmHighlightDirective=(0,tslib__WEBPACK_IMPORTED_MODULE_2__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive)({standalone:!0,selector:"[ngmHighlight]"}),(0,tslib__WEBPACK_IMPORTED_MODULE_2__.w6)("design:paramtypes",[_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef,_angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__.DomSanitizer])],NgmHighlightDirective)},"./packages/angular/copilot/chat/chat.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{qg:()=>NgmCopilotChatComponent});var asyncToGenerator=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"),classPrivateFieldInitSpec=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js"),classPrivateFieldSet2=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js"),classPrivateFieldGet2=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var chat_componentngResource=__webpack_require__("./packages/angular/copilot/chat/chat.component.scss?ngResource"),chat_componentngResource_default=__webpack_require__.n(chat_componentngResource),clipboard=__webpack_require__("./node_modules/@angular/cdk/fesm2022/clipboard.mjs"),scrolling=__webpack_require__("./node_modules/@angular/cdk/fesm2022/scrolling.mjs"),text_field=__webpack_require__("./node_modules/@angular/cdk/fesm2022/text-field.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),rxjs_interop=__webpack_require__("./node_modules/@angular/core/fesm2022/rxjs-interop.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),autocomplete=__webpack_require__("./node_modules/@angular/material/fesm2022/autocomplete.mjs"),fesm2022_button=__webpack_require__("./node_modules/@angular/material/fesm2022/button.mjs"),fesm2022_checkbox=__webpack_require__("./node_modules/@angular/material/fesm2022/checkbox.mjs"),chips=__webpack_require__("./node_modules/@angular/material/fesm2022/chips.mjs"),icon=__webpack_require__("./node_modules/@angular/material/fesm2022/icon.mjs"),input=__webpack_require__("./node_modules/@angular/material/fesm2022/input.mjs"),list=__webpack_require__("./node_modules/@angular/material/fesm2022/list.mjs"),menu=__webpack_require__("./node_modules/@angular/material/fesm2022/menu.mjs"),progress_bar=__webpack_require__("./node_modules/@angular/material/fesm2022/progress-bar.mjs"),slider=__webpack_require__("./node_modules/@angular/material/fesm2022/slider.mjs"),tooltip=__webpack_require__("./node_modules/@angular/material/fesm2022/tooltip.mjs"),router=__webpack_require__("./node_modules/@angular/router/fesm2022/router.mjs"),src=__webpack_require__("./packages/copilot/src/index.ts"),search_component=__webpack_require__("./packages/angular/common/search/search.component.ts"),table_component=__webpack_require__("./packages/angular/common/table/table/table.component.ts"),highlight_directive=__webpack_require__("./packages/angular/common/directives/highlight.directive.ts"),display_behaviour_component=__webpack_require__("./packages/angular/common/display-behaviour/display-behaviour.component.ts"),scroll_back_component=__webpack_require__("./packages/angular/common/scroll/scroll-back.component.ts"),displayDensity=__webpack_require__("./packages/angular/core/directives/displayDensity.ts"),animations=__webpack_require__("./node_modules/@angular/animations/fesm2022/animations.mjs");const fadeAnimation=(0,animations.X$)("fadeAnimation",[(0,animations.eR)(":enter",[(0,animations.oB)({opacity:0}),(0,animations.jt)("300ms",(0,animations.oB)({opacity:1}))]),(0,animations.eR)(":leave",[(0,animations.jt)("300ms",(0,animations.oB)({opacity:0}))])]);var _UserAvatarComponent,core_src=__webpack_require__("./packages/core/src/index.ts"),ngx_translate_core=__webpack_require__("./node_modules/@ngx-translate/core/dist/fesm2022/ngx-translate-core.mjs"),index_browser=__webpack_require__("./node_modules/nanoid/index.browser.js"),ngx_markdown=__webpack_require__("./node_modules/ngx-markdown/fesm2022/ngx-markdown.mjs"),ngx_popperjs=__webpack_require__("./node_modules/ngx-popperjs/fesm2020/ngx-popperjs.mjs"),ngxtension_derived_async=__webpack_require__("./node_modules/ngxtension/fesm2022/ngxtension-derived-async.mjs"),BehaviorSubject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js"),tap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/tap.js"),startWith=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/startWith.js"),delay=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/delay.js"),throttleTime=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/throttleTime.js"),debounceTime=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js"),filter=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/filter.js"),switchMap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/switchMap.js"),of=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js"),catchError=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/catchError.js");let UserAvatarComponent=((_UserAvatarComponent=class UserAvatarComponent{}).propDecorators={user:[{type:core.Input}]},_UserAvatarComponent);UserAvatarComponent=(0,tslib_es6.gn)([(0,core.Component)({standalone:!0,selector:"ngm-copilopt-user-avatar",template:'<img class="" [src]="user?.imageUrl || \'/assets/images/avatar-default.svg\'" alt="{{ user?.name }}" />',imports:[common.CommonModule]})],UserAvatarComponent);var _NgmCopilotEnableComponent,enable_componentngResource=__webpack_require__("./packages/angular/copilot/enable/enable.component.scss?ngResource"),enable_componentngResource_default=__webpack_require__.n(enable_componentngResource),copilot_service=__webpack_require__("./packages/angular/copilot/services/copilot.service.ts");let NgmCopilotEnableComponent=((_NgmCopilotEnableComponent=class NgmCopilotEnableComponent{constructor(){this.copilotService=(0,core.inject)(copilot_service.o),this.toConfig=new core.EventEmitter}get copilotConfig(){return this.copilotService.copilot}navigateToConfig(){this.toConfig.emit()}}).propDecorators={title:[{type:core.Input}],subTitle:[{type:core.Input}],toConfig:[{type:core.Output}]},_NgmCopilotEnableComponent);NgmCopilotEnableComponent=(0,tslib_es6.gn)([(0,core.Component)({standalone:!0,changeDetection:core.ChangeDetectionStrategy.OnPush,selector:"ngm-copilot-enable",template:'@if (!copilotConfig?.enabled || !copilotConfig?.apiKey) {\n<div class="w-full h-full flex-1 flex flex-col justify-center items-center gap-4 bg-gray-500/20 backdrop-blur-md group">\n    <div class="text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-rose-400 via-fuchsia-500 to-indigo-500 group-hover:ngm-background-animate">\n        {{ title }}\n    </div>\n    <div class="text-base font-bold text-transparent bg-clip-text bg-gradient-to-r from-rose-400 via-fuchsia-500 to-indigo-500 group-hover:ngm-background-animate">\n        {{ subTitle }}\n    </div>\n    \n    @if (copilotConfig?.enabled && !copilotConfig?.apiKey) {\n    <div class="text-red-400">\n        {{ \'Ngm.Copilot.ProvideOpenaiApiKey\' | translate: {Default: \'Please provide openai api key!\'} }}\n    </div>\n    }\n    \n    <button mat-stroked-button (click)="navigateToConfig()">\n        <div class="flex items-center">\n            {{ \'Ngm.Copilot.EnableCopilot\' | translate: {Default: \'Enable Copilot\'} }}\n            <mat-icon fontSet="material-icons-outlined" displayDensity="cosy">arrow_forward</mat-icon>\n        </div>\n    </button>\n</div>\n}\n',imports:[common.CommonModule,router.Bz,ngx_translate_core.aw,icon.Ps,fesm2022_button.ot,displayDensity.Z],host:{class:"ngm-copilot-enable"},styles:[enable_componentngResource_default()]})],NgmCopilotEnableComponent);var _CopilotChatTokenComponent,engine_service=__webpack_require__("./packages/angular/copilot/services/engine.service.ts"),token_component=__webpack_require__("./packages/angular/copilot/token/token.component.ts.css?ngResource!=!./node_modules/@angular-devkit/build-angular/node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICAgIDpob3N0IHsKICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICAgIH0KICAgIA%3D%3D!./packages/angular/copilot/token/token.component.ts"),token_component_default=__webpack_require__.n(token_component);let CopilotChatTokenComponent=((_CopilotChatTokenComponent=class CopilotChatTokenComponent{constructor(){this.characterLength=0}ngOnChanges({content}){content&&(this.characterLength=content.currentValue?.length)}}).propDecorators={content:[{type:core.Input}]},_CopilotChatTokenComponent);CopilotChatTokenComponent=(0,tslib_es6.gn)([(0,core.Component)({standalone:!0,changeDetection:core.ChangeDetectionStrategy.OnPush,selector:"ngm-copilot-token",template:'<span\n    class="bg-neutral-100 text-neutral-800 text-xs font-medium px-2.5 py-0.5 rounded dark:bg-neutral-700 dark:text-neutral-300"\n    matTooltip="{{ \'PAC.Copilot.CharacterLength\' | translate: { Default: \'Character length\' } }}"\n  >\n    <span *ngIf="characterLength >= 4000" class="inline-block w-2 h-2 bg-yellow-400 rounded-full"></span>\n    <span *ngIf="characterLength < 4000" class="inline-block w-2 h-2 bg-gray-300 rounded-full"></span>\n    {{ characterLength }}\n  </span>',imports:[common.CommonModule,tooltip.AV,ngx_translate_core.aw],host:{class:"ngm-copilot-token"},styles:[token_component_default()]})],CopilotChatTokenComponent);const PlaceholderMessages=[{id:(0,index_browser.x0)(),role:src.eV.User,content:"你好"},{id:(0,index_browser.x0)(),role:src.eV.Assistant,content:"你好！有什么我可以帮忙的吗？"},{id:(0,index_browser.x0)(),role:src.eV.User,content:"你是谁"},{id:(0,index_browser.x0)(),role:src.eV.Assistant,content:"我是ChatGPT，一个由OpenAI训练的自然语言处理模型。我可以回答各种问题并提供各种帮助。请问有什么我可以为您做的吗？"},{id:(0,index_browser.x0)(),role:src.eV.User,content:"假如你是我的 AI pair programmer"},{id:(0,index_browser.x0)(),role:src.eV.Assistant,content:"如果我是您的 AI pair programmer，那么我会与您合作编写代码，并提供技术支持和建议。我可以帮助您识别和纠正代码中的错误，优化代码性能，同时也可以为您提供实用的编程技巧和最佳实践。在与您的合作中，我将尽力提高我们的生产力和效率，并确保我们在团队合作中最大化我们的技能和资源。\n      然而，需要注意的是，我只是一个机器人，并不能像人类程序员一样创造独特的解决方案或应对具有挑战性的技术问题。我的工作方式是基于预设的算法和模型，因此在与我合作时，您可能需要提供更多的背景信息和指导，以确保我们的工作结果达到您的期望。"}];var _NgmCopilotChatComponent,_copilotEngine,_clipboard,_defaultModel,_predefinedModels,_activatedPrompt,_promptWords,_contextWord,_abortController,_suggestionsOpened,_clearCommands,prompts=__webpack_require__("./node_modules/@langchain/core/prompts.js"),inject_copilot_command=__webpack_require__("./packages/angular/copilot/hooks/inject-copilot-command.ts");const AUTO_SUGGESTION_STOP=["\n",".",",","@","#"];let NgmCopilotChatComponent=(_copilotEngine=new WeakMap,_clipboard=new WeakMap,_defaultModel=new WeakMap,_predefinedModels=new WeakMap,_activatedPrompt=new WeakMap,_promptWords=new WeakMap,_contextWord=new WeakMap,_abortController=new WeakMap,_suggestionsOpened=new WeakMap,_clearCommands=new WeakMap,_NgmCopilotChatComponent=class NgmCopilotChatComponent{get copilotEngine(){return this.copilotEngine$()}set copilotEngine(value){this.copilotEngine$.set(value??(0,classPrivateFieldGet2.Z)(_copilotEngine,this))}get _placeholder(){return this.copilotEngine?.placeholder??this.placeholder}get aiOptions(){return this.copilotEngine?.aiOptions??this.openaiOptions}get model(){return this.aiOptions.model}set model(value){this.copilotEngine?this.copilotEngine.aiOptions={...this.aiOptions,model:value}:this.openaiOptions.model=value,this.copilotService.update({defaultModel:value})}get temperature(){return this.aiOptions.temperature}set temperature(value){this.copilotEngine?this.copilotEngine.aiOptions={...this.aiOptions,temperature:value}:this.openaiOptions.temperature=value}get n(){return this.aiOptions.n}set n(value){this.copilotEngine?this.copilotEngine.aiOptions={...this.aiOptions,n:value}:this.openaiOptions.n=value}get verbose(){return this.copilotEngine.aiOptions.verbose}set verbose(value){this.copilotEngine.aiOptions={...this.copilotEngine.aiOptions,verbose:value},this.copilotEngine.updateAiOptions({verbose:value})}constructor(){var _this=this;(0,classPrivateFieldInitSpec.Z)(this,_copilotEngine,void 0),(0,classPrivateFieldInitSpec.Z)(this,_clipboard,void 0),(0,classPrivateFieldInitSpec.Z)(this,_defaultModel,void 0),(0,classPrivateFieldInitSpec.Z)(this,_predefinedModels,void 0),(0,classPrivateFieldInitSpec.Z)(this,_activatedPrompt,void 0),(0,classPrivateFieldInitSpec.Z)(this,_promptWords,void 0),(0,classPrivateFieldInitSpec.Z)(this,_contextWord,void 0),(0,classPrivateFieldInitSpec.Z)(this,_abortController,void 0),(0,classPrivateFieldInitSpec.Z)(this,_suggestionsOpened,void 0),(0,classPrivateFieldInitSpec.Z)(this,_clearCommands,void 0),this.NgxPopperjsPlacements=ngx_popperjs.Mz,this.NgxPopperjsTriggers=ngx_popperjs.f3,this.CopilotChatMessageRoleEnum=src.eV,this.DisplayBehaviour=core_src.CXV,this.copilotService=(0,core.inject)(copilot_service.o),(0,classPrivateFieldSet2.Z)(_copilotEngine,this,(0,core.inject)(engine_service.S,{optional:!0})),this.copilotEngine$=(0,core.signal)((0,classPrivateFieldGet2.Z)(_copilotEngine,this)),(0,classPrivateFieldSet2.Z)(_clipboard,this,(0,core.inject)(clipboard.TU)),this.copy=new core.EventEmitter,this.conversationsChange=new core.EventEmitter,this.enableCopilot=new core.EventEmitter,this.autocompleteTrigger=(0,core.viewChild)("userInput",{read:autocomplete.ZL}),this.userInput=(0,core.viewChild)("userInput",{read:core.ElementRef}),this._mockConversations=[{id:"",messages:PlaceholderMessages,type:"free",command:""}],this.openaiOptions={model:null,useSystemPrompt:!0},this.selectedModel=(0,core.model)([this.aiOptions.model]),this.copilot=(0,rxjs_interop.O4)(this.copilotService.copilot$),this.copilotEnabled=(0,rxjs_interop.O4)(this.copilotService.enabled$),this.showTokenizer$=(0,core.computed)((()=>this.copilot()?.showTokenizer)),(0,classPrivateFieldSet2.Z)(_defaultModel,this,(0,core.computed)((()=>this.copilot()?.defaultModel))),(0,classPrivateFieldSet2.Z)(_predefinedModels,this,(0,core.computed)((()=>src.Fh[this.copilot()?.provider]?.models))),this.canListModels=(0,core.computed)((()=>!!src.Fh[this.copilot()?.provider]?.modelsUrl)),this.latestModels=(0,core.signal)([]),this.conversations=(0,core.computed)((()=>this.copilotEngine?.conversations())),this.isTools=(0,rxjs_interop.O4)(this.copilotService.isTools$),this.roles=this.copilotService.allRoles,this.role=this.copilotService.role,this.roleDetail=this.copilotService.roleDetail,(0,classPrivateFieldSet2.Z)(_activatedPrompt,this,(0,core.signal)("")),this.promptControl=new fesm2022_forms.NI(""),this.prompt=(0,rxjs_interop.O4)(this.promptControl.valueChanges,{initialValue:""}),(0,classPrivateFieldSet2.Z)(_promptWords,this,(0,core.computed)((()=>this.prompt()?.split(" ")))),this.lastWord=(0,core.computed)((()=>(0,classPrivateFieldGet2.Z)(_promptWords,this).call(this)[(0,classPrivateFieldGet2.Z)(_promptWords,this).call(this).length-1])),(0,classPrivateFieldSet2.Z)(_contextWord,this,(0,core.computed)((()=>(0,classPrivateFieldGet2.Z)(_promptWords,this).call(this).find((word=>word.startsWith("@")))?.slice(1)))),this.contextSearch=(0,core.computed)((()=>{const lastWord=this.lastWord();return lastWord&&lastWord.startsWith("@")?lastWord.slice(1):null})),this.isContextTrigger=(0,core.computed)((()=>this.lastWord()?.startsWith("@"))),this.hasContextTrigger=(0,core.computed)((()=>this.prompt()?.includes("@"))),this.beforeLastWord=(0,core.computed)((()=>{const words=this.prompt()?.split(" ");return words.splice(0,words.length-1).join(" ")})),this.commandWithContext=(0,core.computed)((()=>{const prompt=this.prompt();if(prompt&&prompt.startsWith("/")){const name=prompt.split(" ")[0];return this.copilotEngine.getCommandWithContext(name.slice(1))}return null})),this.command=(0,core.computed)((()=>this.commandWithContext()?.command)),this.commandTitle=(0,core.computed)((()=>this.command().description)),this.commandContext=(0,core.computed)((()=>this.commandWithContext()?.context)),this.context=(0,core.signal)(null),this.onlyCommand=(0,core.computed)((()=>{const prompt=this.prompt();if(prompt&&prompt.startsWith("/")){const command=prompt.split(" ")[0];if(command===prompt.trim())return command}return null})),this.loadingContext$=new BehaviorSubject.X(!1),this.contextItems=(0,ngxtension_derived_async.u)((()=>{const context=this.commandContext();return this.hasContextTrigger()&&context&&context.items()?(this.loadingContext$.next(!0),context.items().pipe((0,tap.b)((()=>this.loadingContext$.next(!1))))):null})),this.contextSearchWords=(0,core.computed)((()=>this.contextSearch()?.toLowerCase().split("_"))),this.filteredContextItems=(0,core.computed)((()=>{const isContextTrigger=this.isContextTrigger(),text=this.contextSearch(),items=this.contextItems();if(isContextTrigger){if(text){const words=text.toLowerCase().split("_");return items?.filter((item=>!words.length||words.every((word=>item.key.toLowerCase().includes(word)||item.caption?.toLowerCase().includes(word)))))}return items}return null})),this.contextMenuSearch=(0,core.model)(""),this.filteredContextMenuItems=(0,core.computed)((()=>{const text=this.contextMenuSearch(),items=this.contextItems();if(text){const words=text.toLowerCase().split(" ");return items?.filter((item=>!words.length||words.every((word=>item.key.toLowerCase().includes(word)||item.caption?.toLowerCase().includes(word)))))}return items})),this.promptCompletion=(0,core.signal)(null),this.answering=(0,core.signal)(!1),this.historyQuestions=(0,core.signal)([]),this.historyIndex=(0,core.signal)(-1),this.searchModel=new fesm2022_forms.NI(""),this.searchText=(0,rxjs_interop.O4)(this.searchModel.valueChanges.pipe((0,startWith.O)("")),{initialValue:""}),this.models=(0,core.computed)((()=>{const text=this.searchText()?.toLowerCase(),models=this.latestModels()?.length?this.latestModels():(0,classPrivateFieldGet2.Z)(_predefinedModels,this).call(this);return text?models?.filter((item=>item.name.toLowerCase().includes(text))):models})),this.commands=(0,core.computed)((()=>{if(this.copilotEngine?.commands&&this.isTools()){const commands=[];return this.copilotEngine.commands().forEach((command=>{command.examples?.length?command.examples.forEach((example=>{commands.push({...command,prompt:`/${command.name} ${example}`,example})})):commands.push({...command,prompt:`/${command.name} ${command.description}`})})),commands}return[]})),this.filteredCommands=(0,core.computed)((()=>{const prompt=this.prompt()?.toLowerCase();if(prompt?.startsWith("/")){const text=prompt.slice(1);return this.commands()?.filter((item=>item.name?.toLowerCase().includes(text)||item.alias?.toLowerCase()?.includes(text)))??[]}return[]})),this.suggestionsOpened$=new BehaviorSubject.X(!1),(0,classPrivateFieldSet2.Z)(_suggestionsOpened,this,(0,rxjs_interop.O4)(this.suggestionsOpened$.pipe((0,delay.g)(100)),{initialValue:!1})),this.messageCopied=(0,core.signal)([]),this.editingMessageId=(0,core.signal)(null),(0,classPrivateFieldSet2.Z)(_clearCommands,this,function injectCommonCommands(copilotEngine){const translate=(0,core.inject)(ngx_translate_core.sK),copilotService=(0,core.inject)(copilot_service.o);return[(0,inject_copilot_command.K)({name:"clear",description:translate.instant("Ngm.Copilot.ClearConversation",{Default:"Clear conversation"}),implementation:(_ref=(0,asyncToGenerator.Z)((function*(){copilotEngine().clear()})),function implementation(){return _ref.apply(this,arguments)})}),(0,inject_copilot_command.K)("help",{alias:"?",description:translate.instant("Ngm.Copilot.Help",{Default:"Help"}),agent:{type:src.nx.LangChain,conversation:!0},implementation:(_ref2=(0,asyncToGenerator.Z)((function*(){return`You can ask me general programming questions, or chat with the following participants which have specialized expertise and can perform actions:\n- use \`/commandName\` to run a command.\n- use \`@cubeName\` to select a metadata context.\n\n**Commands**:\n${copilotEngine().commands().map((command=>`- \`/${command.name}\` ${command.alias?"or `/"+command.alias+"`":""}: ${command.description}`)).join("\n")}\n`})),function implementation(){return _ref2.apply(this,arguments)}),prompt:prompts.ks.fromMessages([["system","你是一个有用的数据分析 Agent, "+(copilotService.roleDetail()?`你的角色是: ${copilotService.roleDetail().title} 你的职责是：${copilotService.roleDetail().description};`:"")+"请自我介绍并告诉用户你能他们做什么"],new prompts.ax({variableName:"chat_history"}),["human","{input}"]])})];var _ref2,_ref}(this.copilotEngine$)),this.scrollSub=(0,rxjs_interop.Dx)(this.conversations).pipe((0,throttleTime.p)(300)).subscribe((conversations=>{conversations.length&&!this.scrollBack.visible()&&this.scrollBottom()})),this.autocompleteSub=this.promptControl.valueChanges.pipe((0,debounceTime.b)(1e3),(0,filter.h)((text=>!AUTO_SUGGESTION_STOP.includes(text.slice(-1)))),(0,switchMap.w)((prompt=>{const onlyCommand=this.onlyCommand(),command=this.command(),commandWithContext=this.commandWithContext();return onlyCommand?(0,of.of)(command?.description):command?.suggestionTemplate?this.copilotEngine.executeCommandSuggestion(prompt,{...commandWithContext}):(0,of.of)(null)})),(0,catchError.K)((()=>(0,of.of)(null)))).subscribe((text=>this.promptCompletion.set(text))),(0,core.effect)((()=>{this.answering()?this.promptControl.disable():this.promptControl.enable()}),{allowSignalWrites:!0}),(0,core.effect)((()=>{this.selectedModel.set([(0,classPrivateFieldGet2.Z)(_defaultModel,this).call(this)]),this.model=(0,classPrivateFieldGet2.Z)(_defaultModel,this).call(this)}),{allowSignalWrites:!0}),(0,core.effect)((0,asyncToGenerator.Z)((function*(){if((0,classPrivateFieldGet2.Z)(_contextWord,_this).call(_this)){const item=yield _this.commandContext().getContextItem((0,classPrivateFieldGet2.Z)(_contextWord,_this).call(_this));_this.context.set(item)}else _this.context.set(null)})),{allowSignalWrites:!0})}trackByKey(index,item){return item?.key}refreshModels(){this.copilotService.getModels().subscribe((res=>{this.latestModels.set(res.data.map((model=>({id:model.id,name:model.id}))))}))}changeSelectedModel(values){this.model=values[0]}newChat(){this.clear()}askCopilotStream(prompt,options={}){var _this2=this;return(0,asyncToGenerator.Z)((function*(){const{command,newConversation,assistantMessageId}=options??{};if(_this2.historyIndex.set(-1),prompt&&_this2.historyQuestions.set([prompt,..._this2.historyQuestions()]),_this2.promptControl.setValue(""),_this2.answering.set(!0),_this2.copilotEngine)try{(0,classPrivateFieldSet2.Z)(_abortController,_this2,new AbortController);const message=yield _this2.copilotEngine$().chat(prompt,{command,newConversation,abortController:(0,classPrivateFieldGet2.Z)(_abortController,_this2),assistantMessageId});"string"==typeof message?_this2.copilotEngine.upsertMessage({id:(0,index_browser.x0)(),role:"info",content:message}):message&&_this2.copilotEngine.upsertMessage(message),_this2.scrollBottom()}catch(err){_this2.conversationsChange.emit(_this2.conversations)}finally{_this2.answering.set(!1)}}))()}stopGenerating(){(0,classPrivateFieldGet2.Z)(_abortController,this)?.abort(),this.answering.set(!1),this.conversationsChange.emit(this.conversations),this.scrollBottom()}scrollBottom(){this.chatsContent.nativeElement.scrollTo({top:this.chatsContent.nativeElement.scrollHeight,left:0,behavior:"smooth"})}send(text){var _this3=this;return(0,asyncToGenerator.Z)((function*(){_this3.promptControl.setValue(text)}))()}run(){return(0,asyncToGenerator.Z)((function*(){yield navigator.clipboard.readText()}))()}clear(){this.copilotEngine.clear(),this.conversationsChange.emit(this.conversations),this.copilotOptions.hide()}onEnableCopilot(){this.enableCopilot.emit()}addMessage(message){var _this4=this;return(0,asyncToGenerator.Z)((function*(){_this4.copilotEngine.upsertMessage(message)}))()}deleteMessage(message){this.copilotEngine.deleteMessage(message),this.conversationsChange.emit(this.conversations)}resubmitMessage(element,id,message,content){var _this5=this;return(0,asyncToGenerator.Z)((function*(){_this5.cancelMessageContent(element),_this5.copilotEngine.updateConversation(id,(conversation=>{const messages=conversation.messages,index=messages.findIndex((item=>item.id===message.id));return index>-1?(messages[index+1]?.role===src.eV.Assistant&&messages.splice(index+1,1),messages.splice(index,1),messages.filter((message=>message.role===src.eV.User)).length?{...conversation,messages:[...messages]}:null):conversation})),yield _this5.askCopilotStream(content,{command:message.command})}))()}regenerate(message){var _this6=this;return(0,asyncToGenerator.Z)((function*(){_this6.copilotEngine.updateLastConversation((conversation=>{const messages=conversation.messages,index=messages.findIndex((item=>item.id===message.id));return messages.splice(index),{...conversation,messages:[...messages]}})),yield _this6.askCopilotStream(null,{assistantMessageId:message.id})}))()}isFoucs(target){return document.activeElement===target}triggerFun(event,autocomplete){if(!event.isComposing&&!event.shiftKey||"Enter"!==event.key){if((0,classPrivateFieldGet2.Z)(_suggestionsOpened,this).call(this)||"Enter"!==event.key||this.askCopilotStream(this.prompt()),"Tab"===event.key)if(event.preventDefault(),this.promptCompletion())this.promptControl.setValue(this.promptControl.value+this.promptCompletion());else if(this.isContextTrigger()){const item=this.filteredContextItems()[0];item&&(this.promptControl.setValue(this.beforeLastWord()+" @"+item.uKey+" "),this.context.set(item))}else{const activatedPrompt=(0,classPrivateFieldGet2.Z)(_activatedPrompt,this).call(this)||(this.filteredCommands()[0]?"/"+this.filteredCommands()[0].name+" ":null);activatedPrompt&&this.promptControl.setValue(activatedPrompt)}if(this.promptCompletion.set(null),!autocomplete.isOpen&&("ArrowUp"===event.key||"ArrowDown"===event.key)){event.preventDefault();const historyQuestions=this.historyQuestions();if(historyQuestions.length){if("ArrowUp"===event.key&&this.historyIndex()<historyQuestions.length-1)this.historyIndex.set(this.historyIndex()+1);else{if(!("ArrowDown"===event.key&&this.historyIndex()>-1))return;this.historyIndex.set(this.historyIndex()-1)}this.promptControl.setValue(historyQuestions[this.historyIndex()]??"")}}}}onPromptActivated(event){(0,classPrivateFieldGet2.Z)(_activatedPrompt,this).set(event.option?.value)}copyMessage(message){this.copy.emit(message.content),(0,classPrivateFieldGet2.Z)(_clipboard,this).copy(message.content),this.messageCopied.update((ids=>[...ids,message.id])),setTimeout((()=>{this.messageCopied.update((ids=>ids.filter((id=>id!==message.id))))}),3e3)}onCopy(copyButton){copyButton.copied=!0,setTimeout((()=>{copyButton.copied=!1}),3e3)}dropCopilot(event){this.copilotEngine&&this.copilotEngine.dropCopilot(event)}switchRole(){const roles=this.roles(),nextIndex=(roles.findIndex((role=>role.name===this.role()))+1)%roles.length;this.copilotService.setRole(roles[nextIndex].name)}editMessageContent(id,element){this.editingMessageId.set(id),element.attributes.setNamedItem(document.createAttribute("contenteditable")),element.focus()}cancelMessageContent(element){this.editingMessageId.set(null),element.blur(),element.attributes.removeNamedItem("contenteditable")}setContext(item){this.context.set(item)}repleaceContext(orginal,target){const prompt=this.prompt();this.promptControl.setValue(prompt.split(`@${orginal} `).join(`@${target.uKey} `)),this.context.set(target)}removeContext(){const context=this.context();if(context){const prompt=this.prompt();this.promptControl.setValue(prompt.replace(`@${context.uKey}`,"")),this.context.set(null)}}focus(value){this.userInput().nativeElement.focus(),this.prompt()||this.promptControl.setValue(value),value&&this.autocompleteTrigger().openPanel()}},_NgmCopilotChatComponent.ctorParameters=()=>[],_NgmCopilotChatComponent.propDecorators={welcomeTitle:[{type:core.Input}],welcomeSubTitle:[{type:core.Input}],placeholder:[{type:core.Input}],thinkingAvatar:[{type:core.Input}],assistantAvatar:[{type:core.Input}],copilotEngine:[{type:core.Input}],user:[{type:core.Input}],copy:[{type:core.Output}],conversationsChange:[{type:core.Output}],enableCopilot:[{type:core.Output}],chatsContent:[{type:core.ViewChild,args:["chatsContent"]}],copilotOptions:[{type:core.ViewChild,args:["copilotOptions"]}],scrollBack:[{type:core.ViewChild,args:["scrollBack"]}],autocompleteTrigger:[{type:core.ViewChild,args:["userInput",{read:autocomplete.ZL,isSignal:!0}]}],userInput:[{type:core.ViewChild,args:["userInput",{read:core.ElementRef,isSignal:!0}]}],selectedModel:[{type:core.Input,args:[{isSignal:!0,alias:"selectedModel",required:!1}]},{type:core.Output,args:["selectedModelChange"]}],contextMenuSearch:[{type:core.Input,args:[{isSignal:!0,alias:"contextMenuSearch",required:!1}]},{type:core.Output,args:["contextMenuSearchChange"]}]},_NgmCopilotChatComponent);NgmCopilotChatComponent=(0,tslib_es6.gn)([(0,core.Component)({standalone:!0,changeDetection:core.ChangeDetectionStrategy.OnPush,selector:"ngm-copilot-chat",template:'<div class="text-base font-semibold p-2 flex justify-between items-center">\n  <div class="flex items-start gap-1">\n    <span>{{ \'Ngm.Copilot.Copilot\' | translate: {Default: \'Copilot\'} }}</span>\n\n    @if (copilotEngine?.name) {\n      <span>:</span><span>{{copilotEngine.name}}</span>\n    }\n\n    <span class="bg-yellow-100 text-yellow-800 text-xs font-medium me-2 px-2 py-0.5 rounded-full dark:bg-yellow-900 dark:text-yellow-300">Beta</span>\n  </div>\n\n  <span class="flex-1"></span>\n\n  @if (role()) {\n    <span class="cursor-pointer bg-purple-100 text-purple-800 text-sm font-medium me-2 px-2 py-0.5 rounded-xl dark:bg-purple-900 dark:text-purple-300"\n      [matTooltip]="roleDetail()?.description"\n      (click)="switchRole()">\n      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24" class="h-4 w-4 inline-block align-text-bottom"><path fill="currentColor" fill-rule="evenodd" d="M12 7.42a22 22 0 0 0-2.453 2.127A22 22 0 0 0 7.42 12a22 22 0 0 0 2.127 2.453c.807.808 1.636 1.52 2.453 2.128a22 22 0 0 0 2.453-2.128A22 22 0 0 0 16.58 12a22 22 0 0 0-2.127-2.453A22 22 0 0 0 12 7.42m1.751-1.154a25 25 0 0 1 2.104 1.88 25 25 0 0 1 1.88 2.103c.316-.55.576-1.085.779-1.59.35-.878.507-1.625.503-2.206-.003-.574-.16-.913-.358-1.111-.199-.199-.537-.356-1.112-.36-.58-.003-1.328.153-2.205.504-.506.203-1.04.464-1.59.78Zm3.983 7.485a25 25 0 0 1-1.88 2.104 25 25 0 0 1-2.103 1.88 13 13 0 0 0 1.59.779c.878.35 1.625.507 2.206.503.574-.003.913-.16 1.111-.358.199-.199.356-.538.36-1.112.003-.58-.154-1.328-.504-2.205a13 13 0 0 0-.78-1.59ZM12 18.99c.89.57 1.768 1.03 2.605 1.364 1.026.41 2.036.652 2.955.646.925-.006 1.828-.267 2.5-.94.673-.672.934-1.575.94-2.5.006-.919-.236-1.929-.646-2.954A15.7 15.7 0 0 0 18.99 12a15.6 15.6 0 0 0 1.364-2.606c.41-1.025.652-2.035.646-2.954-.006-.925-.267-1.828-.94-2.5-.672-.673-1.575-.934-2.5-.94-.919-.006-1.929.235-2.954.646-.838.335-1.716.795-2.606 1.364a15.7 15.7 0 0 0-2.606-1.364C8.37 3.236 7.36 2.994 6.44 3c-.925.006-1.828.267-2.5.94-.673.672-.934 1.575-.94 2.5-.006.919.235 1.929.646 2.955A15.7 15.7 0 0 0 5.01 12c-.57.89-1.03 1.768-1.364 2.605-.41 1.026-.652 2.036-.646 2.955.006.925.267 1.828.94 2.5.672.673 1.575.934 2.5.94.92.006 1.93-.235 2.955-.646A15.7 15.7 0 0 0 12 18.99m-1.751-1.255a25 25 0 0 1-2.104-1.88 25 25 0 0 1-1.88-2.104c-.315.55-.576 1.085-.779 1.59-.35.878-.507 1.625-.503 2.206.003.574.16.913.359 1.111.198.199.537.356 1.111.36.58.003 1.328-.153 2.205-.504.506-.203 1.04-.463 1.59-.78Zm-3.983-7.486a25 25 0 0 1 1.88-2.104 25 25 0 0 1 2.103-1.88 13 13 0 0 0-1.59-.779c-.878-.35-1.625-.507-2.206-.503-.574.003-.913.16-1.111.359-.199.198-.356.537-.36 1.111-.003.58.153 1.328.504 2.205.203.506.464 1.04.78 1.59Z" clip-rule="evenodd"></path></svg>\n      {{roleDetail()?.title}}\n    </span>\n  }\n\n  @if (conversations()) {\n    <button class="p-1 rounded-lg hover:bg-black/5 dark:hover:bg-white/10" [matTooltip]="\'Ngm.Copilot.NewChat\' | translate: {Default: \'New chat\'}"\n      (click)="newChat()">\n      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 24 24" class="icon-xl-heavy"><path d="M15.673 3.913a3.121 3.121 0 1 1 4.414 4.414l-5.937 5.937a5 5 0 0 1-2.828 1.415l-2.18.31a1 1 0 0 1-1.132-1.13l.311-2.18A5 5 0 0 1 9.736 9.85zm3 1.414a1.12 1.12 0 0 0-1.586 0l-5.937 5.937a3 3 0 0 0-.849 1.697l-.123.86.86-.122a3 3 0 0 0 1.698-.849l5.937-5.937a1.12 1.12 0 0 0 0-1.586M11 4A1 1 0 0 1 10 5c-.998 0-1.702.008-2.253.06-.54.052-.862.141-1.109.267a3 3 0 0 0-1.311 1.311c-.134.263-.226.611-.276 1.216C5.001 8.471 5 9.264 5 10.4v3.2c0 1.137 0 1.929.051 2.546.05.605.142.953.276 1.216a3 3 0 0 0 1.311 1.311c.263.134.611.226 1.216.276.617.05 1.41.051 2.546.051h3.2c1.137 0 1.929 0 2.546-.051.605-.05.953-.142 1.216-.276a3 3 0 0 0 1.311-1.311c.126-.247.215-.569.266-1.108.053-.552.06-1.256.06-2.255a1 1 0 1 1 2 .002c0 .978-.006 1.78-.069 2.442-.064.673-.192 1.27-.475 1.827a5 5 0 0 1-2.185 2.185c-.592.302-1.232.428-1.961.487C15.6 21 14.727 21 13.643 21h-3.286c-1.084 0-1.958 0-2.666-.058-.728-.06-1.369-.185-1.96-.487a5 5 0 0 1-2.186-2.185c-.302-.592-.428-1.233-.487-1.961C3 15.6 3 14.727 3 13.643v-3.286c0-1.084 0-1.958.058-2.666.06-.729.185-1.369.487-1.961A5 5 0 0 1 5.73 3.545c.556-.284 1.154-.411 1.827-.475C8.22 3.007 9.021 3 10 3A1 1 0 0 1 11 4"></path></svg>\n    </button>\n  }\n</div>\n\n<div class="ngm-copilot-chat__content relative flex-1 flex flex-col overflow-hidden">\n    <div #chatsContent class="flex-1 flex flex-col overflow-y-auto overflow-x-hidden">\n      @for (conversation of (copilotEnabled() ? conversations() : _mockConversations); track $index; let last = $last) {\n        @for (message of conversation.messages; track message.id) {\n            @switch (message.role) {\n              @case (CopilotChatMessageRoleEnum.Assistant) {\n                <div @fadeAnimation class="pl-2 pr-4 flex">\n                    <div class="flex-1 flex items-start overflow-auto">\n                        <div class="relative flex flex-col items-center shrink-0">\n                            @if (assistantAvatar) {\n                                @if ((message.status === \'thinking\' || message.status === \'answering\') && thinkingAvatar) {\n                                    <img class="w-8 h-8 pointer-events-none" [src]="thinkingAvatar"/>\n                                } @else {\n                                    <img class="w-8 h-8 pointer-events-none" [src]="assistantAvatar"/>\n                                }\n                            } @else {\n                                <div class="w-8 h-8 rounded-full text-xl text-center font-notoColorEmoji">🤖</div>\n                            }\n                        </div>\n                        <div class="flex-1 flex flex-col justify-start items-start overflow-auto relative pt-2 min-h-[50px] min-w-[50px] group">\n                        @if (message.templateRef) {\n                          <ng-container *ngTemplateOutlet="message.templateRef; context: {message: message}"></ng-container>\n                        } @else {\n                            @if (message.content) {\n                                <div class="ngm-copilot-chat__message-content w-full">\n                                    <markdown clipboard class="whitespace-pre-line"\n                                        [clipboardButtonTemplate]="buttonTemplate"\n                                        lineNumbers\n                                        [start]="5"\n                                        [data]="message.content"\n                                    ></markdown>\n\n                                    @if (showTokenizer$() && message.content) {\n                                      <ngm-copilot-token [content]="message.content"></ngm-copilot-token>\n                                    }\n\n                                  @if (message.status === \'done\') {\n                                    <div class="flex self-end lg:self-center justify-center lg:justify-start mt-0 -ml-1 visible">\n                                        <span class="" data-state="closed">\n                                            @if (messageCopied().includes(message.id)) {\n                                                <button class="flex items-center gap-1.5 rounded-md p-1 text-xs text-token-text-tertiary hover:text-token-text-primary md:invisible md:group-hover:visible md:group-[.final-completion]:visible\n                                                    transition-colors duration-100 text-neutral-400 hover:text-neutral-900 dark:hover:text-neutral-300"\n                                                >\n                                                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none"\n                                                        xmlns="http://www.w3.org/2000/svg" class="icon-md">\n                                                        <path fill-rule="evenodd" clip-rule="evenodd"\n                                                            d="M18.0633 5.67375C18.5196 5.98487 18.6374 6.607 18.3262 7.06331L10.8262 18.0633C10.6585 18.3093 10.3898 18.4678 10.0934 18.4956C9.79688 18.5234 9.50345 18.4176 9.29289 18.2071L4.79289 13.7071C4.40237 13.3166 4.40237 12.6834 4.79289 12.2929C5.18342 11.9023 5.81658 11.9023 6.20711 12.2929L9.85368 15.9394L16.6738 5.93664C16.9849 5.48033 17.607 5.36263 18.0633 5.67375Z"\n                                                            fill="currentColor"></path>\n                                                    </svg>\n                                                </button>\n                                            } @else {\n                                                <button class="flex items-center gap-1.5 rounded-md p-1 text-xs text-token-text-tertiary hover:text-token-text-primary md:invisible md:group-hover:visible md:group-[.final-completion]:visible\n                                                    transition-colors duration-100 text-neutral-400 hover:text-neutral-900 dark:hover:text-neutral-300"\n                                                    [matTooltip]="\'Ngm.Copilot.Copy\' | translate: {Default: \'Copy\'}"\n                                                    (click)="copyMessage(message)">\n                                                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon-md">\n                                                        <path fill-rule="evenodd" clip-rule="evenodd" d="M12 4C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill="currentColor"></path>\n                                                    </svg>\n                                                </button>\n                                            }\n                                        </span>\n                                        \n                                        \x3c!-- <span class="" data-state="closed">\n                                            <button class="p-1 rounded-md text-token-text-tertiary hover:text-token-text-primary md:invisible md:group-hover:visible md:group-[.final-completion]:visible\n                                            text-neutral-400 hover:text-neutral-900 transition-colors duration-100 dark:hover:text-neutral-300"\n                                            [matTooltip]="\'Ngm.Copilot.Regenerate\' | translate: {Default: \'Regenerate\'}"\n                                            (click)="regenerate(message)"\n                                            >\n                                                <div class="flex items-center gap-1.5 text-xs">\n                                                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon-md"><path fill-rule="evenodd" clip-rule="evenodd" d="M4.5 2.5C5.05228 2.5 5.5 2.94772 5.5 3.5V5.07196C7.19872 3.47759 9.48483 2.5 12 2.5C17.2467 2.5 21.5 6.75329 21.5 12C21.5 17.2467 17.2467 21.5 12 21.5C7.1307 21.5 3.11828 17.8375 2.565 13.1164C2.50071 12.5679 2.89327 12.0711 3.4418 12.0068C3.99033 11.9425 4.48712 12.3351 4.5514 12.8836C4.98798 16.6089 8.15708 19.5 12 19.5C16.1421 19.5 19.5 16.1421 19.5 12C19.5 7.85786 16.1421 4.5 12 4.5C9.7796 4.5 7.7836 5.46469 6.40954 7H9C9.55228 7 10 7.44772 10 8C10 8.55228 9.55228 9 9 9H4.5C3.96064 9 3.52101 8.57299 3.50073 8.03859C3.49983 8.01771 3.49958 7.99677 3.5 7.9758V3.5C3.5 2.94772 3.94771 2.5 4.5 2.5Z" fill="currentColor"></path></svg>\n                                                </div>\n                                            </button>\n                                        </span> --\x3e\n                                    </div>\n                                  }\n                                </div>\n                            }\n                            @if (message.error) {\n                              <div class="ngm-copilot-chat__message-content text-red-400">\n                                <span class="font-notoColorEmoji">🙈</span>\n                                <span>{{ message.error }}</span>\n                              </div>\n                            }\n                        }\n        \n                            \x3c!-- <button mat-icon-button displayDensity="compact" class="ngm-copilot__message-remove left-0 top-0 opacity-0 group-hover:opacity-100 transition-opacity duration-100"\n                                (click)="deleteMessage(message)">\n                                <mat-icon>close</mat-icon>\n                            </button> --\x3e\n                        </div>\n                    </div>\n                </div>\n                }\n              @case (CopilotChatMessageRoleEnum.User) {\n                <div @fadeAnimation class="pl-4 flex">\n                    <div class="flex-1 flex items-start justify-end overflow-auto">\n                        <div class="flex-1 flex flex-col justify-start items-end overflow-auto relative p-[10px] group"\n                            [class.ngm-copilot-chat__message-editing]="editingMessageId() === message.id">\n                            @if (message.templateRef) {\n                              <ng-container *ngTemplateOutlet="message.templateRef; context: {message: message}"></ng-container>\n                            } @else {\n                                @if (message.data) {\n                                    <ngm-table class="max-w-full rounded-lg border overflow-hidden"\n                                        [columns]="message.data[\'columns\']"\n                                        [data]="message.data[\'content\']"\n                                        paging\n                                        [pageSizeOptions]="[10, 20, 50, 100]"\n                                    ></ngm-table>\n                                } @else {\n                                  <div class="flex items-center gap-1 mb-[2px]">\n                                    <button class="message-edit-button opacity-0 group-hover:opacity-100 flex items-center justify-center rounded-full transition p-1 hover:bg-black/5 dark:hover:bg-white/10"\n                                      (click)="editMessageContent(message.id, msgContent)">\n                                      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="none" viewBox="0 0 24 24" class="icon-md"><path fill="currentColor" fill-rule="evenodd" d="M13.293 4.293a4.536 4.536 0 1 1 6.414 6.414l-1 1-7.094 7.094A5 5 0 0 1 8.9 20.197l-4.736.79a1 1 0 0 1-1.15-1.151l.789-4.736a5 5 0 0 1 1.396-2.713zM13 7.414l-6.386 6.387a3 3 0 0 0-.838 1.628l-.56 3.355 3.355-.56a3 3 0 0 0 1.628-.837L16.586 11zm5 2.172L14.414 6l.293-.293a2.536 2.536 0 0 1 3.586 3.586z" clip-rule="evenodd"></path></svg>\n                                    </button>\n\n                                    @if (showTokenizer$() && message.content) {\n                                      <ngm-copilot-token [content]="message.content"></ngm-copilot-token>\n                                    }\n                                    @if (message.command) {\n                                      <span class="text-xs font-medium italic px-2.5 py-0.5 rounded bg-gray-200/50 dark:bg-neutral-700">/{{message.command}}</span>\n                                    }\n                                  </div>\n                                  <div class="ngm-copilot-chat__message-content ngm-copilot__user-message relative flex flex-col items-end">\n                                      <div #msgContent class="ngm-copilot-chat__message-edit whitespace-pre-wrap w-full focus-visible:outline-none\n                                        focus-visible:bg-white dark:focus-visible:bg-black"\n                                      >{{ message.content }}</div>\n\n                                      @if (editingMessageId() === message.id) {\n                                        <div class="flex items-center gap-1 mt-2">\n                                          <button mat-stroked-button class="ngm-copilot__resubmit" displayDensity="compact"\n                                            (click)="cancelMessageContent(msgContent)">\n                                            {{ \'Ngm.Copilot.Cancel\' | translate: {Default: \'Cancel\'} }}\n                                          </button>\n                                          <button mat-flat-button class="ngm-copilot__resubmit" color="primary" displayDensity="compact"\n                                              (click)="resubmitMessage(msgContent, conversation.id, message, msgContent.textContent)">\n                                              {{ \'Ngm.Copilot.Update\' | translate: {Default: \'Update\'} }}\n                                          </button>\n                                        </div>\n                                      }\n                                  </div>\n                                }\n                            }\n\n                          @if (message.error) {\n                            <div class="ngm-error">\n                                {{ message.error }}\n                            </div>\n                          }\n        \n                            \x3c!-- <button mat-icon-button displayDensity="compact" class="ngm-copilot__message-remove right-0 top-0 opacity-0 group-hover:opacity-100 transition-opacity duration-100"\n                                (click)="deleteMessage(message)">\n                                <mat-icon>close</mat-icon>\n                            </button> --\x3e\n                        </div>\n                        \n                        <ngm-copilopt-user-avatar class="shrink-0 w-8 h-8 rounded-full overflow-hidden" [user]="user"></ngm-copilopt-user-avatar>\n                    </div>\n                </div>\n              }\n              @case (CopilotChatMessageRoleEnum.Info) {\n                <div @fadeAnimation class="pl-4 flex">\n                    <div class="flex-1 flex items-start justify-end overflow-auto">\n                        <div class="rounded-lg py-2 px-4 w-full overflow-auto flex flex-col items-end">\n                            {{ message.content }}\n                        </div>\n                    </div>\n                </div>\n              }\n            }\n        }\n\n        @if (!last) {\n          <mat-divider class="pb-4"></mat-divider>\n        }\n      }\n\n      @if (!conversations()?.length) {\n        <div class="absolute top-0 bottom-0 w-full flex flex-col justify-center items-center gap-1">\n          <div @fadeAnimation class="text-xl drop-shadow-md mb-4">\n            <span class="text-xl">💡</span>{{ \'Ngm.Copilot.AskAICopilot\' | translate: {Default: \'Ask AI Copilot Questions\'} }}\n          </div>\n\n          @if (roles()) {\n            <label @fadeAnimation>{{\'Ngm.Copilot.PleaseSelectBusinessRole\' | translate: {Default: \'Please select a business role\'} }}</label>\n            <mat-chip-listbox class="ngm-copilot-chat__roles mb-4" [(ngModel)]="role">\n              @for (item of roles(); track $index) {\n                <mat-chip-option @fadeAnimation [selected]="role() === item.name" [value]="item.name"\n                  [matTooltip]="item.description"\n                  matTooltipPosition="above"\n                  >{{item.title}}</mat-chip-option>\n              }\n            </mat-chip-listbox>\n          }\n        </div>\n      }\n    </div>\n\n    <ngm-scroll-back #scrollBack class="block absolute bottom-0 left-1/2" [class.animate-bounce]="answering()"\n      [ngmTarget]="chatsContent" direction="bottom" />\n</div>\n\n<div class="relative m-3 border rounded-2xl shadow-sm overflow-hidden border-neutral-100 dark:border-neutral-800 bg-neutral-100 dark:bg-neutral-800"\n    [class.ngm-colpilot__active]="isFoucs(userInput)"\n    (click)="userInput.focus()"\n>\n    <mat-progress-bar mode="buffer" [class.opacity-100]="answering()" class="opacity-0 top-0 left-0 w-full transition duration-300" style="position: absolute; z-index: 1;"></mat-progress-bar>\n\n    <div class="relative flex flex-col m-1">\n\n      @if (command()) {\n        <div class="flex flex-col divide-y overflow-hidden rounded-b-md rounded-t-xl bg-white dark:bg-black">\n          <div class="flex items-center py-2 gap-2 pl-3 pr-1.5 text-sm whitespace-nowrap">\n            <span class="font-bold">{{command().name}}</span>\n            @if (context()) {\n              <span class="flex items-center px-1 py-0.5 rounded-full bg-neutral-50 dark:bg-neutral-900 cursor-pointer"\n                [matTooltip]="context().caption"\n                [matMenuTriggerFor]="contextMenu"\n                [matMenuTriggerData]="{word: {text: context().uKey }}"\n                (click)="$event.stopPropagation()">{{context().caption}}<button class="flex-shrink-0 hover:text-red-500" (click)="removeContext()"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="none" viewBox="0 0 24 24" class="icon-lg"><path fill="currentColor" fill-rule="evenodd" d="M7.293 7.293a1 1 0 0 1 1.414 0L12 10.586l3.293-3.293a1 1 0 1 1 1.414 1.414L13.414 12l3.293 3.293a1 1 0 0 1-1.414 1.414L12 13.414l-3.293 3.293a1 1 0 0 1-1.414-1.414L10.586 12 7.293 8.707a1 1 0 0 1 0-1.414" clip-rule="evenodd"></path></svg></button></span>\n            }\n            <span class="overflow-hidden text-ellipsis">{{command().description}}</span>\n          </div>\n        </div>\n      }\n\n      <div class="ngm-colpilot__input-wrapper mt-2 relative flex">\n        <textarea #userInput matInput class="ngm-colpilot__input w-full h-full px-1.5 z-10 resize-none overflow-visible"\n          id="userInput" onInput="this.parentNode.dataset.replicatedValue = this.value"\n          [placeholder]="_placeholder || ((\'Ngm.Copilot.Placeholder\' | translate: {Default: \'Ask Copilot or type / for commands\'}) + \'\\nEnter \' + (\'Ngm.Copilot.SendPrompt\' | translate: {Default: \'send prompt\'}))"\n          [formControl]="promptControl"\n          (keydown)="triggerFun($event, autoPrompts)"\n\n          [matAutocomplete]="autoPrompts"\n          matAutocompletePosition="above"\n\n          cdkTextareaAutosize\n          cdkAutosizeMinRows="2"\n          cdkAutosizeMaxRows="5"\n        >\n        </textarea>\n\n          \x3c!-- <div class="ngm-colpilot__words absolute top-0 block z-20 whitespace-pre-wrap">\n            @for (line of promptWords(); track $index; let last = $last) {\n              @for (word of line; track $index) {\n                @switch (word.type) {\n                  @case(\'command\') {\n                    <span class="rounded-md cursor-pointer bg-neutral-200 dark:bg-neutral-600" [matTooltip]="word.description | async">{{word.text}}</span>\n                  }\n                  @case(\'context\') {\n                    <span class="rounded-md cursor-pointer bg-neutral-200 dark:bg-neutral-600"\n                        [matTooltip]="word.description | async"\n                        [matMenuTriggerFor]="contextMenu"\n                        [matMenuTriggerData]="{word: word, index: $index}"\n                        (click)="$event.stopPropagation()"\n                        >{{word.text}}</span>\n                  }\n                  @default {\n                    <span class="opacity-0">{{word.text}}</span>\n                  }\n                }\n                <span>{{\' \'}}</span>\n              }\n              @if (!last) {\n                <br>\n              }\n            }\n          </div> --\x3e\n          \n        @if (promptCompletion()) {\n          <div class="absolute top-0 left-0 px-1.5 whitespace-pre-wrap">\n              <span class="opacity-30 z-0">{{prompt()}}<span class="italic">{{promptCompletion()}}</span></span>\n          </div>\n        }\n      </div>\n\n        <mat-autocomplete #autoPrompts="matAutocomplete" class="ngm-copilot-chat__autocomplete-panel ngm-autocomplete-panel ngm-density__compact"\n            autoActiveFirstOption hideSingleSelectionIndicator\n            (optionActivated)="onPromptActivated($event)"\n            (opened)="suggestionsOpened$.next(true)"\n            (closed)="suggestionsOpened$.next(false)"\n        >\n\n          @if (loadingContext$ | async) {\n            <mat-progress-bar mode="query" role="progressbar"\n                color="accent"\n                class="top-0 left-0 w-full"\n                style="position: absolute; height: 2px;"\n                />\n            <mat-option [value]="null"></mat-option>\n          } @else if (filteredContextItems()) {\n            <cdk-virtual-scroll-viewport class="nx-formly__virtual-scroll-viewport" minBufferPx="200" maxBufferPx="400"\n                [style.height.px]="240" [itemSize]="30"\n            >\n              <mat-option *cdkVirtualFor="let item of filteredContextItems(); trackBy: trackByKey"\n                [value]="beforeLastWord() + \' @\' + item.uKey + \' \'"\n                (click)="setContext(item)">\n                <ngm-display-behaviour class="flex-1" [option]="item" [displayBehaviour]="DisplayBehaviour.descriptionAndId" [highlight]="contextSearchWords()" />\n              </mat-option>\n            </cdk-virtual-scroll-viewport>\n          }\n\n          @for (command of filteredCommands();  track command.prompt) {\n            <mat-option [value]="\'/\'+command.name+\' \'+(command.example || \'\')" [title]="command.description">\n                <span class="bg-gray-200 text-neutral-800 text-xs font-medium me-2 px-1 mr-1 rounded dark:bg-gray-900 dark:text-neutral-300"\n                >/{{command.name}}</span>\n              @if (command.alias) {\n                <span class="bg-gray-200 text-neutral-800 text-xs font-medium me-2 px-1 mr-1 rounded dark:bg-gray-900 dark:text-neutral-300"\n                >/{{command.alias}}</span>\n              }\n\n              @if (command.example) {\n                <div class="whitespace-nowrap text-ellipsis overflow-hidden text-gray-500 italic"\n                    [ngmHighlight]="prompt()"\n                    [content]="command.example"\n                    customClasses="text-gray-600 bg-gray-200 font-bold not-italic"\n                >{{command.example}}</div>\n              } @else {\n                <span class="ml-auto opacity-50">{{command.description}}</span>\n              }\n            </mat-option>\n          }\n        </mat-autocomplete>\n\n        <div class="shrink-0 flex items-center">\n            <button mat-icon-button type="button" displayDensity="cosy"\n                [popper]="copilotOptions"\n                [popperTrigger]="NgxPopperjsTriggers.click"\n                [popperHideOnClickOutside]="true"\n                [popperHideOnScroll]="true"\n                [popperHideOnMouseLeave]="false"\n                [popperPlacement]="NgxPopperjsPlacements.TOPEND"\n                (click)="$event.stopPropagation()"\n            >\n              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="none" viewBox="0 0 24 24" class="h-5 w-5 shrink-0"><path fill="currentColor" fill-rule="evenodd" d="M11.568 3.5a1 1 0 0 0-.863.494l-.811 1.381A3 3 0 0 1 7.33 6.856l-1.596.013a1 1 0 0 0-.858.501l-.44.761a1 1 0 0 0-.003.992l.792 1.4a3 3 0 0 1 0 2.954l-.792 1.4a1 1 0 0 0 .004.992l.439.76a1 1 0 0 0 .858.502l1.596.013a3 3 0 0 1 2.564 1.48l.811 1.382a1 1 0 0 0 .863.494h.87a1 1 0 0 0 .862-.494l.812-1.381a3 3 0 0 1 2.563-1.481l1.596-.013a1 1 0 0 0 .859-.501l.439-.761a1 1 0 0 0 .004-.992l-.793-1.4a3 3 0 0 1 0-2.953l.793-1.401a1 1 0 0 0-.004-.992l-.439-.76a1 1 0 0 0-.859-.502l-1.596-.013a3 3 0 0 1-2.563-1.48L13.3 3.993a1 1 0 0 0-.862-.494zM8.98 2.981A3 3 0 0 1 11.568 1.5h.87a3 3 0 0 1 2.588 1.481l.81 1.382a1 1 0 0 0 .855.494l1.597.013a3 3 0 0 1 2.575 1.502l.44.76a3 3 0 0 1 .011 2.975l-.792 1.4a1 1 0 0 0 0 .985l.792 1.401a3 3 0 0 1-.012 2.974l-.439.761a3 3 0 0 1-2.575 1.503l-1.597.012a1 1 0 0 0-.854.494l-.811 1.382a3 3 0 0 1-2.588 1.481h-.87a3 3 0 0 1-2.588-1.481l-.811-1.382a1 1 0 0 0-.855-.494l-1.596-.012a3 3 0 0 1-2.576-1.503l-.439-.76a3 3 0 0 1-.012-2.975l.793-1.4a1 1 0 0 0 0-.985l-.793-1.4a3 3 0 0 1 .012-2.975l.44-.761A3 3 0 0 1 5.717 4.87l1.596-.013a1 1 0 0 0 .855-.494z" clip-rule="evenodd"></path><path fill="currentColor" fill-rule="evenodd" d="M12.003 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3M8.502 12a3.5 3.5 0 1 1 7 .001 3.5 3.5 0 0 1-7-.001" clip-rule="evenodd"></path></svg>\n            </button>\n\n            <span class="flex-1"></span>\n            \n            @if (answering()) {\n              <button type="button" class="rounded-full md:bottom-3 md:right-3 right-2 border-solid p-1 hover:opacity-60 text-white bg-black dark:bg-white dark:text-black" aria-label="停止生成"\n                (click)="stopGenerating()">\n                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24" class="icon-lg"><rect width="10" height="10" x="7" y="7" fill="currentColor" rx="1.25"></rect></svg>\n              </button>\n            } @else {\n              <button type="button" class="rounded-full md:bottom-3 md:right-3 right-2 border-solid p-1 bg-black disabled:opacity-10 disabled:text-gray-400 enabled:bg-black text-white dark:border-white dark:bg-white bottom-1.5 transition-colors\n                hover:opacity-60" data-testid="send-button"\n                [disabled]="!prompt()"\n                (click)="askCopilotStream(promptControl.value)"\n              >\n                <span class="" data-state="closed">\n                  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" class="text-white dark:text-black">\n                    <path d="M7 11L12 6L17 11M12 18V7" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>\n                  </svg>\n                </span>\n              </button>\n            }\n        </div>\n    </div>\n</div>\n\n@if (!copilotEnabled()) {\n  <ngm-copilot-enable class="z-[101]"\n    [title]="welcomeTitle || \'Metad Copilot\'"\n    [subTitle]="welcomeSubTitle || (\'Ngm.Copilot.YourAIPairProgrammer\' | translate: {Default: \'Your AI pair programmer\'})"\n    (toConfig)="onEnableCopilot()"/>\n}\n\n<popper-content #copilotOptions class="z-[101]">\n    <div class="w-80 flex flex-col max-w-sm p-4 border-0 border-gray-200 rounded-lg shadow-lg\n        dark:bg-gray-800/20 dark:border-gray-700 bg-white/60 backdrop-blur-lg"\n        displayDensity="compact">\n        <div class="text-base mb-2">\n            {{ \'Ngm.Copilot.Options\' | translate: {Default: \'Options\'} }}\n        </div>\n\n        <div class="mt-2 font-notoColorEmoji flex justify-between items-center">\n            <label class="shrink-0">\n                {{ \'Ngm.Copilot.Model\' | translate: {Default: \'Model\'} }}:<span matTooltip="ID of the model to use.">💡</span>\n            </label>\n\n            <ngm-search class="flex-1" [formControl]="searchModel"/>\n\n          @if (canListModels()) {\n            <button mat-icon-button displayDensity="compact" (click)="refreshModels()">\n                <mat-icon>refresh</mat-icon>\n            </button>\n          }\n        </div>\n        \n        <mat-selection-list class="flex flex-col gap-2 max-h-[120px] overflow-auto"\n            [(ngModel)]="selectedModel"\n            [multiple]="false"\n            (ngModelChange)="changeSelectedModel($event)">\n          @for (model of models(); track model.id) {\n            <mat-list-option [value]="model.id" class="rounded-md">\n                {{model.name}}\n            </mat-list-option>\n          }\n        </mat-selection-list>\n\n        <label class="pt-4 font-notoColorEmoji">Temperature:<span matTooltip="What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. We generally recommend altering this or top_p but not both.">💡</span></label>\n        <mat-slider color="accent" min="0" max="2" step="0.1" value="1" discrete>\n            <input matSliderThumb [(ngModel)]="temperature">\n        </mat-slider>\n        \n        <label class="pt-4 font-notoColorEmoji">Choices:<span matTooltip="How many chat completion choices to generate for each input message.">💡</span></label>\n        <mat-slider color="accent" min="1" max="10" step="1" value="1" discrete>\n            <input matSliderThumb [(ngModel)]="n">\n        </mat-slider>\n\n        <mat-checkbox [(ngModel)]="verbose" color="accent" labelPosition="before">Verbose</mat-checkbox>\n\n        <button mat-stroked-button displayDensity="cosy" class="pac-colpilot__clear-messages mt-4" (click)="clear()">\n            {{ \'Ngm.Copilot.ClearMessages\' | translate: {Default: \'Clear messages\'} }}\n        </button>\n    </div>\n</popper-content>\n\n<ng-template #buttonTemplate>\n    \x3c!-- <button mat-flat-button displayDensity="compact" class="ngm-rounded-full"\n        (click)="run($event)">run</button> --\x3e\n    <button #copyButton mat-flat-button displayDensity="compact" class="ngm-rounded-full" (click)="onCopy(copyButton)">\n      @if ($any(copyButton).copied) {\n        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon-md">\n          <path fill-rule="evenodd" clip-rule="evenodd" d="M18.0633 5.67375C18.5196 5.98487 18.6374 6.607 18.3262 7.06331L10.8262 18.0633C10.6585 18.3093 10.3898 18.4678 10.0934 18.4956C9.79688 18.5234 9.50345 18.4176 9.29289 18.2071L4.79289 13.7071C4.40237 13.3166 4.40237 12.6834 4.79289 12.2929C5.18342 11.9023 5.81658 11.9023 6.20711 12.2929L9.85368 15.9394L16.6738 5.93664C16.9849 5.48033 17.607 5.36263 18.0633 5.67375Z" fill="currentColor">\n            </path>\n        </svg>\n      } @else {\n        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon-md">\n            <path fill-rule="evenodd" clip-rule="evenodd" d="M12 4C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill="currentColor"></path>\n        </svg>\n      }\n    </button>\n</ng-template>\n\n\n<mat-menu #contextMenu="matMenu" class="ngm-menu__copilot-context-popper ngm-density__compact">\n    <ng-template matMenuContent let-word="word">\n        <ngm-search class="m-2 mb-0" (click)="$event.stopPropagation()" [(ngModel)]="contextMenuSearch" />\n      @if (loadingContext$ | async) {\n        <mat-progress-bar mode="query" role="progressbar"\n            color="accent"\n            class="top-0 left-0 w-full" \n            style="position: absolute; height: 2px;"/>\n      } @else if (filteredContextMenuItems()) {\n        <cdk-virtual-scroll-viewport minBufferPx="200" maxBufferPx="400"\n            [style.height.px]="240" [itemSize]="30"\n        >\n            <button mat-menu-item *cdkVirtualFor="let item of filteredContextMenuItems(); trackBy: trackByKey"\n              [ngClass]="{active: item.uKey === word.text}"\n              (click)="repleaceContext(word.text, item)"\n            >\n                <ngm-display-behaviour class="flex-1" [option]="item" [displayBehaviour]="DisplayBehaviour.descriptionAndId"\n                    [highlight]="contextMenuSearch()" />\n            </button>\n        </cdk-virtual-scroll-viewport>\n      }\n    </ng-template>\n</mat-menu>\n',imports:[common.CommonModule,fesm2022_forms.u5,fesm2022_forms.UX,router.Bz,text_field.Ky,clipboard.Iq,input.c,icon.Ps,fesm2022_button.ot,fesm2022_checkbox.p9,tooltip.AV,autocomplete.Bb,progress_bar.Cv,list.ie,slider.KP,menu.Tx,chips.Hi,ngx_translate_core.aw,ngx_popperjs.X_,ngx_markdown.JP,scrolling.Cl,displayDensity.Z,search_component.K,table_component.a,highlight_directive.t,display_behaviour_component.o,CopilotChatTokenComponent,NgmCopilotEnableComponent,UserAvatarComponent,scroll_back_component.k],host:{class:"ngm-copilot-chat"},animations:[fadeAnimation],styles:[chat_componentngResource_default()]}),(0,tslib_es6.w6)("design:paramtypes",[])],NgmCopilotChatComponent)},"./packages/angular/copilot/hooks/inject-copilot-command.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{K:()=>injectCopilotCommand});var _angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_services__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/angular/copilot/services/context.service.ts");function injectCopilotCommand(name,command){const copilotContext=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.inject)(_services__WEBPACK_IMPORTED_MODULE_1__.Vt);let commandName="";return commandName="object"==typeof name?(command=name).name:name,copilotContext.registerCommand(commandName,command),(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.inject)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.DestroyRef).onDestroy((()=>{copilotContext.unregisterCommand(commandName)})),commandName}},"./packages/angular/copilot/services/context.service.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{GC:()=>recognizeContextParams,Vt:()=>NgmCopilotContextToken,oG:()=>recognizeContext});var _NgmCopilotContextService,_commands,_entryPoints,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"),_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldInitSpec_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js"),_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js"),_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldSet2_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js"),tslib__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_metad_copilot__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./packages/copilot/src/index.ts"),rxjs__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),rxjs__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/firstValueFrom.js");const NgmCopilotContextToken=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.InjectionToken("NgmCopilotContextToken");let NgmCopilotContextService=(_commands=new WeakMap,_entryPoints=new WeakMap,(_NgmCopilotContextService=class NgmCopilotContextService{constructor(){(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldInitSpec_js__WEBPACK_IMPORTED_MODULE_2__.Z)(this,_commands,void 0),(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldInitSpec_js__WEBPACK_IMPORTED_MODULE_2__.Z)(this,_entryPoints,void 0),this.destroyRef=(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.inject)(_angular_core__WEBPACK_IMPORTED_MODULE_1__.DestroyRef),this.parentContext=(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.inject)(NgmCopilotContextToken,{optional:!0,skipSelf:!0}),this.children=(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.signal)(new Set),(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldSet2_js__WEBPACK_IMPORTED_MODULE_3__.Z)(_commands,this,(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.signal)({})),this.commands=(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.computed)((()=>{const children=this.children(),commands=[...Object.values((0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_commands,this).call(this))];for(const child of children)commands.push(...child.commands());return commands})),(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldSet2_js__WEBPACK_IMPORTED_MODULE_3__.Z)(_entryPoints,this,(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.signal)({})),this.getFunctionCallHandler=(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.computed)((()=>(0,_metad_copilot__WEBPACK_IMPORTED_MODULE_0__.hs)(Object.values((0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_entryPoints,this).call(this))))),this.getChatCompletionFunctionDescriptions=(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.computed)((()=>(0,_metad_copilot__WEBPACK_IMPORTED_MODULE_0__.Py)(Object.values((0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_entryPoints,this).call(this))))),this.getGlobalFunctionDescriptions=(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.computed)((()=>{const ids=Object.keys((0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_entryPoints,this).call(this)).filter((id=>!Object.values((0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_commands,this).call(this)).some((command=>command.actions?.includes(id)))));return(0,_metad_copilot__WEBPACK_IMPORTED_MODULE_0__.Py)(ids.map((id=>(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_entryPoints,this).call(this)[id])))})),this.cubes=(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.signal)(null),this.items=(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.computed)((()=>this.cubes()?.pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_5__.U)((cubes=>cubes.map((cube=>({key:cube.key,caption:cube.caption,uKey:cube.key.split(" ").join("_"),serizalize:cube.value.serizalize,value:{...cube.value}})))))))),this.parentContext?.registerChild(this),this.destroyRef.onDestroy((()=>{console.log("destroyed"),this.parentContext?.unregisterChild(this)}))}registerChild(child){this.children.update((children=>new Set(children.add(child))))}unregisterChild(child){this.children.update((children=>{const newChildren=new Set(children);return newChildren.delete(child),newChildren}))}registerCommand(name,command){var _this=this;return(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_6__.Z)((function*(){let _command=null;_command=command instanceof Promise?yield command:command,(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_commands,_this).update((state=>({...state,[name]:{..._command,name}})))}))()}unregisterCommand(name){(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_commands,this).update((state=>(delete state[name],{...state})))}setEntryPoint(id,entryPoint){(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_entryPoints,this).update((state=>({...state,[id]:entryPoint})))}removeEntryPoint(id){(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_entryPoints,this).update((prevPoints=>{const newPoints={...prevPoints};return delete newPoints[id],newPoints}))}getEntryPoint(id){return(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_entryPoints,this).call(this)[id]}getCommand(name){const{command}=this.getCommandWithContext(name)??{};return command}getCommandWithContext(name){const command=(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_commands,this).call(this)[name]??Object.values((0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_commands,this).call(this)).find((command=>command.alias===name));if(command)return{command,context:this};const children=this.children();for(const child of children){const{command,context}=child.getCommandWithContext(name)??{};if(command)return{command,context}}return null}getContextItem(uKey){var _this2=this;return(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_6__.Z)((function*(){return(yield(0,rxjs__WEBPACK_IMPORTED_MODULE_7__.z)(_this2.items())).find((item=>item.uKey===uKey))}))()}}).ctorParameters=()=>[],_NgmCopilotContextService);function recognizeContext(_x,_x2){return _recognizeContext.apply(this,arguments)}function _recognizeContext(){return(_recognizeContext=(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_6__.Z)((function*(prompt,context){const params=yield recognizeContextParams(prompt,context);let contextContent="";for(const param of params)param.item&&(contextContent+=(yield param.item.serizalize()));return contextContent}))).apply(this,arguments)}function recognizeContextParams(_x3,_x4){return _recognizeContextParams.apply(this,arguments)}function _recognizeContextParams(){return(_recognizeContextParams=(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_6__.Z)((function*(prompt,context){const params=[],words=prompt.split(" ");for(const word of words)context&&word.startsWith("@")&&params.push({content:word.slice(1),context,item:yield context.getContextItem(word.slice(1))});return params}))).apply(this,arguments)}NgmCopilotContextService=(0,tslib__WEBPACK_IMPORTED_MODULE_8__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable)(),(0,tslib__WEBPACK_IMPORTED_MODULE_8__.w6)("design:paramtypes",[])],NgmCopilotContextService)},"./packages/angular/copilot/services/copilot.service.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{o:()=>NgmCopilotService});var NgmLanguageEnum,tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),rxjs_interop=__webpack_require__("./node_modules/@angular/core/fesm2022/rxjs-interop.mjs"),src=__webpack_require__("./packages/copilot/src/index.ts");!function(NgmLanguageEnum){NgmLanguageEnum.Chinese="zh-CN",NgmLanguageEnum.SimplifiedChinese="zh-Hans",NgmLanguageEnum.TraditionalChinese="zh-Hant",NgmLanguageEnum.English="en"}(NgmLanguageEnum||(NgmLanguageEnum={}));var _NgmCopilotService,ngx_translate_core=__webpack_require__("./node_modules/@ngx-translate/core/dist/fesm2022/ngx-translate-core.mjs"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),startWith=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/startWith.js");let NgmCopilotService=((_NgmCopilotService=class NgmCopilotService extends src.yY{constructor(){super(),this.translate=(0,core.inject)(ngx_translate_core.sK),this.lang=(0,rxjs_interop.O4)(this.translate.onLangChange.pipe((0,map.U)((event=>event.lang)),(0,startWith.O)(this.translate.currentLang))),this.defaultRoleI18n=(0,rxjs_interop.O4)(this.translate.stream("Ngm.Copilot.DefaultBusinessRole",{Default:{title:"Common",description:"Common business role"}})),this.roles=(0,core.signal)([]),this.allRoles=(0,core.computed)((()=>{const lang=this.lang(),roles=[NgmLanguageEnum.SimplifiedChinese,NgmLanguageEnum.Chinese].includes(lang)?this.roles()?.map((role=>({...role,title:role.titleCN}))):this.roles();return[{name:src.Jb,title:this.defaultRoleI18n().title,description:this.defaultRoleI18n().description},...roles??[]]})),this.role=(0,core.signal)(src.Jb),this.roleDetail=(0,core.computed)((()=>this.allRoles()?.find((role=>role.name===this.role())))),this.rolePrompt=(0,core.computed)((()=>{const role=this.roleDetail();return role?`Your role is '${role.title}', and your responsibility is ${role.description};\n`:""}))}setRole(role){this.role.set(role)}}).ctorParameters=()=>[],_NgmCopilotService);NgmCopilotService=(0,tslib_es6.gn)([(0,core.Injectable)(),(0,tslib_es6.w6)("design:paramtypes",[])],NgmCopilotService)},"./packages/angular/copilot/services/engine.service.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{S:()=>NgmCopilotEngineService});var _NgmCopilotEngineService,_logger,_aiOptions,_conversationId,_dropActions,_NgmCopilotEngineService_brand,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"),_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateMethodInitSpec_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classPrivateMethodInitSpec.js"),_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldInitSpec_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js"),_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_assertClassBrand_js__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/assertClassBrand.js"),_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js"),_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldSet2_js__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js"),tslib__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_core__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_angular_core_rxjs_interop__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__("./node_modules/@angular/core/fesm2022/rxjs-interop.mjs"),_langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@langchain/core/messages.js"),_langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@langchain/core/output_parsers.js"),_metad_copilot__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/copilot/src/index.ts"),_metad_ocap_core__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/core/src/index.ts"),ai__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__("./node_modules/ai/dist/index.mjs"),langchain_agents__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/langchain/agents.js"),lodash_es__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__("./node_modules/lodash-es/flatten.js"),lodash_es__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__("./node_modules/lodash-es/pick.js"),ngx_logger__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/ngx-logger/fesm2020/ngx-logger.mjs"),_context_service__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./packages/angular/copilot/services/context.service.ts"),_copilot_service__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./packages/angular/copilot/services/copilot.service.ts");let uniqueId=0,NgmCopilotEngineService=(_logger=new WeakMap,_aiOptions=new WeakMap,_conversationId=new WeakMap,_dropActions=new WeakMap,_NgmCopilotEngineService_brand=new WeakSet,(_NgmCopilotEngineService=class NgmCopilotEngineService{constructor(){(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateMethodInitSpec_js__WEBPACK_IMPORTED_MODULE_5__.Z)(this,_NgmCopilotEngineService_brand),(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldInitSpec_js__WEBPACK_IMPORTED_MODULE_6__.Z)(this,_logger,void 0),(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldInitSpec_js__WEBPACK_IMPORTED_MODULE_6__.Z)(this,_aiOptions,void 0),(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldInitSpec_js__WEBPACK_IMPORTED_MODULE_6__.Z)(this,_conversationId,void 0),(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldInitSpec_js__WEBPACK_IMPORTED_MODULE_6__.Z)(this,_dropActions,void 0),(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldSet2_js__WEBPACK_IMPORTED_MODULE_7__.Z)(_logger,this,(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.inject)(ngx_logger__WEBPACK_IMPORTED_MODULE_9__.Kf,{optional:!0})),this.copilot=(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.inject)(_copilot_service__WEBPACK_IMPORTED_MODULE_10__.o),this.copilotContext=(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.inject)(_context_service__WEBPACK_IMPORTED_MODULE_11__.Vt),this.api=(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.signal)("/api/chat"),this.chatId="chat-"+uniqueId++,this.key=(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.computed)((()=>`${this.api()}|${this.chatId}`)),this.aiOptions={},(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldSet2_js__WEBPACK_IMPORTED_MODULE_7__.Z)(_aiOptions,this,(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.signal)({model:_metad_copilot__WEBPACK_IMPORTED_MODULE_2__.lZ})),this.verbose=(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.computed)((()=>(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_12__.Z)(_aiOptions,this).call(this).verbose)),this.llm=(0,_angular_core_rxjs_interop__WEBPACK_IMPORTED_MODULE_13__.O4)(this.copilot.llm$),this.conversations$=(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.signal)([]),(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldSet2_js__WEBPACK_IMPORTED_MODULE_7__.Z)(_conversationId,this,(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.signal)((0,ai__WEBPACK_IMPORTED_MODULE_14__.x0)())),this.conversations=(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.computed)((()=>this.conversations$())),this.messages=(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.computed)((()=>(0,lodash_es__WEBPACK_IMPORTED_MODULE_15__.Z)(this.conversations$().map((c=>c.messages))))),this.lastConversation=(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.computed)((()=>{const conversation=this.conversations$()[this.conversations$().length-1]??{messages:[],command:null},lastMessages=[];let lastUserMessage=null;for(let i=conversation.messages.length-1;i>=0;i--){const message=conversation.messages[i];message.role===_metad_copilot__WEBPACK_IMPORTED_MODULE_2__.eV.User?lastUserMessage?lastUserMessage.content=message.content+"\n"+lastUserMessage.content:lastUserMessage={role:_metad_copilot__WEBPACK_IMPORTED_MODULE_2__.eV.User,content:message.content}:message.role!==_metad_copilot__WEBPACK_IMPORTED_MODULE_2__.eV.Info&&(lastUserMessage&&(lastMessages.push(lastUserMessage),lastUserMessage=null),lastMessages.push(message))}return lastUserMessage&&lastMessages.push(lastUserMessage),{...conversation,messages:lastMessages.reverse()}})),this.lastUserMessages=(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.computed)((()=>{const conversation=this.conversations$()[this.conversations$().length-1],messages=[];if(!conversation)return messages;for(let i=conversation.messages.length-1;i>=0;i--){const message=conversation.messages[i];if(message.role!==_metad_copilot__WEBPACK_IMPORTED_MODULE_2__.eV.User||message.command)break;messages.push({id:message.id,role:message.role,content:message.content})}return messages})),this.currentConversation=this.lastConversation,this.currentCommand=(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.computed)((()=>{const command=this.currentConversation()?.command;return this.commands().find((c=>c.name===command))})),this.chatHistoryMessages=(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.computed)((()=>(this.conversations$()[this.conversations$().length-1]??{messages:[]}).messages.map((({lcMessage})=>lcMessage)).filter((m=>!!m)))),this.commands=(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.computed)((()=>this.copilotContext.commands())),(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldSet2_js__WEBPACK_IMPORTED_MODULE_7__.Z)(_dropActions,this,(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.signal)({})),this.error=(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.signal)(void 0),this.streamData=(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.signal)(void 0),this.isLoading=(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.signal)(!1)}updateAiOptions(options){(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_12__.Z)(_aiOptions,this).update((state=>({...state,...options}))),this.aiOptions=(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_12__.Z)(_aiOptions,this).call(this)}getCommand(name){return this.copilotContext.getCommand(name)}getCommandWithContext(name){return this.copilotContext.getCommandWithContext(name)}registerDropAction(dropAction){(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_12__.Z)(_dropActions,this).update((state=>({...state,[dropAction.id]:dropAction})))}unregisterDropAction(id){(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_12__.Z)(_dropActions,this).update((state=>(delete state[id],{...state})))}chat(prompt,options){var _this=this;return(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_16__.Z)((function*(){(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_12__.Z)(_logger,_this)?.debug(`process copilot ask: ${prompt}`);let{command}=options??{};const{abortController,assistantMessageId,conversationId}=options??{},newMessages=[];if(!command&&prompt){const data=(0,_metad_copilot__WEBPACK_IMPORTED_MODULE_2__.uF)(prompt);command=data.command,prompt=data.prompt}const commandWithContext=_this.getCommandWithContext(command);if(command&&!commandWithContext?.command&&(prompt=`/${command} ${prompt}`,(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_12__.Z)(_logger,_this)?.warn(`Copilot command '${command}' is not found`)),command&&commandWithContext?.command){_this.upsertConversation("command",command);const _command=commandWithContext.command;if(_command.implementation){_this.upsertMessage({id:(0,ai__WEBPACK_IMPORTED_MODULE_14__.x0)(),role:_metad_copilot__WEBPACK_IMPORTED_MODULE_2__.eV.User,content:prompt,command,lcMessage:new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.xk({content:prompt})});const result=yield _command.implementation();return void("string"==typeof result&&_this.upsertMessage({id:(0,ai__WEBPACK_IMPORTED_MODULE_14__.x0)(),role:_metad_copilot__WEBPACK_IMPORTED_MODULE_2__.eV.Assistant,content:result,status:"done",lcMessage:new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.gY({content:result})}))}yield _this.callCommand(_command,prompt,{...options??{},context:commandWithContext.context})}else{if(_this.currentCommand()?.agent.conversation){const _command=_this.currentCommand(),commandWithContext=_this.getCommandWithContext(_command.name);return yield _this.callCommand(_command,prompt,{...options??{},context:commandWithContext.context})}_this.upsertConversation("free",null);const lastConversation=_this.lastConversation();prompt&&newMessages.push({id:(0,ai__WEBPACK_IMPORTED_MODULE_14__.x0)(),role:_metad_copilot__WEBPACK_IMPORTED_MODULE_2__.eV.User,content:prompt}),newMessages.length>0&&_this.upsertMessage(...newMessages);const functions=_this.copilotContext.getGlobalFunctionDescriptions(),body={..._this.aiOptions};functions.length&&(body.functions=functions),yield _this.triggerRequest([...lastConversation.messages,...newMessages],{options:{body}},{abortController,assistantMessageId,conversationId})}}))()}callCommand(_command,prompt,options){var _this2=this;return(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_16__.Z)((function*(){const{abortController,conversationId,assistantMessageId,context}=options??{};if(_command.agent)return yield _this2.triggerCommandAgent(prompt,_command,{conversationId:assistantMessageId,context,abortController});const lastUserMessages=_this2.lastUserMessages(),newMessages=[];try{_command.systemPrompt&&newMessages.push({id:(0,ai__WEBPACK_IMPORTED_MODULE_14__.x0)(),role:_metad_copilot__WEBPACK_IMPORTED_MODULE_2__.eV.System,content:yield _command.systemPrompt()}),newMessages.push({id:(0,ai__WEBPACK_IMPORTED_MODULE_14__.x0)(),role:_metad_copilot__WEBPACK_IMPORTED_MODULE_2__.eV.User,content:prompt,command:_command.name})}catch(err){return void newMessages.push({id:(0,ai__WEBPACK_IMPORTED_MODULE_14__.x0)(),role:_metad_copilot__WEBPACK_IMPORTED_MODULE_2__.eV.User,content:prompt,command:_command.name,error:err.message})}finally{_this2.upsertMessage(...newMessages)}const functions=_command.actions?(0,_metad_copilot__WEBPACK_IMPORTED_MODULE_2__.Py)(_command.actions.map((id=>_this2.copilotContext.getEntryPoint(id)))):_this2.copilotContext.getChatCompletionFunctionDescriptions(),body={..._this2.aiOptions};functions.length&&(body.functions=functions,body.stream=!1),yield _this2.triggerRequest([...lastUserMessages,...newMessages],{options:{body}},{abortController,assistantMessageId,conversationId:conversationId??(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_12__.Z)(_conversationId,_this2).call(_this2)})}))()}triggerCommandAgent(content,command,options){var _this3=this;return(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_16__.Z)((function*(){let{conversationId,abortController,context}=options??{};conversationId??=(0,ai__WEBPACK_IMPORTED_MODULE_14__.x0)(),abortController??=new AbortController;const chatHistoryMessages=_this3.chatHistoryMessages(),contextContent=context?yield(0,_context_service__WEBPACK_IMPORTED_MODULE_11__.oG)(content,context):null,params=yield(0,_context_service__WEBPACK_IMPORTED_MODULE_11__.GC)(content,context),messages=[];let systemPrompt="";try{command.systemPrompt&&(systemPrompt=yield command.systemPrompt({params})),messages.push({id:(0,ai__WEBPACK_IMPORTED_MODULE_14__.x0)(),role:_metad_copilot__WEBPACK_IMPORTED_MODULE_2__.eV.User,content,command:command.name,lcMessage:new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.xk({content})})}catch(err){return void messages.push({id:(0,ai__WEBPACK_IMPORTED_MODULE_14__.x0)(),role:_metad_copilot__WEBPACK_IMPORTED_MODULE_2__.eV.User,content,command:command.name,error:err.message})}finally{_this3.upsertMessage(...messages)}const assistantId=conversationId??(0,ai__WEBPACK_IMPORTED_MODULE_14__.x0)();_this3.upsertMessage({id:assistantId,role:_metad_copilot__WEBPACK_IMPORTED_MODULE_2__.eV.Assistant,content:"",status:"thinking"});const removeMessageWhenAbort=()=>{_this3.stopMessage(assistantId)};abortController.signal.addEventListener("abort",removeMessageWhenAbort);try{let chain=null;const llm=_this3.llm(),verbose=_this3.verbose();if(!llm)throw new Error("LLM is not available");if(!command.prompt)throw new Error(`Prompt should be provided for agent command '${command.name}'`);switch(command.agent.type){case _metad_copilot__WEBPACK_IMPORTED_MODULE_2__.nx.Default:{const agent=yield(0,langchain_agents__WEBPACK_IMPORTED_MODULE_4__.uv)({llm,tools:command.tools,prompt:command.prompt});chain=new langchain_agents__WEBPACK_IMPORTED_MODULE_4__.Ij({agent,tools:command.tools,verbose});break}case _metad_copilot__WEBPACK_IMPORTED_MODULE_2__.nx.LangChain:chain=command.prompt.pipe(_this3.llm()).pipe(new _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_1__.AN);break;default:throw new Error(`Agent type '${command.agent.type}' is not supported`)}command.fewShotPrompt&&(content=yield command.fewShotPrompt.format({input:content,context:contextContent}),(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_12__.Z)(_logger,_this3)?.debug(`[Command] [${command.name}] few shot input: ${content}`));let verboseContent="";const result=yield chain.invoke({input:content,system_prompt:systemPrompt,context:contextContent,chat_history:chatHistoryMessages},{callbacks:[{handleLLMEnd:(_ref=(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_16__.Z)((function*(output){const text=output.generations[0][0].text;text&&(verbose?verboseContent+="\n\n👉 "+text:verboseContent=text,_this3.upsertMessage({id:assistantId,role:_metad_copilot__WEBPACK_IMPORTED_MODULE_2__.eV.Assistant,content:verboseContent}))})),function handleLLMEnd(_x){return _ref.apply(this,arguments)})}]});return(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_12__.Z)(_logger,_this3)?.debug(`Agent command '${command.name}' result:`,result),_this3.upsertMessage({id:assistantId,role:_metad_copilot__WEBPACK_IMPORTED_MODULE_2__.eV.Assistant,content:verboseContent,status:"done",lcMessage:new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.gY({content:verboseContent})}),null}catch(err){return console.error(err.message),void _this3.upsertMessage({id:assistantId,role:_metad_copilot__WEBPACK_IMPORTED_MODULE_2__.eV.Assistant,content:"",status:"error",error:err.message})}finally{abortController.signal.removeEventListener("abort",removeMessageWhenAbort)}var _ref}))()}triggerRequest(messagesSnapshot,{options,data}={},{abortController,assistantMessageId,conversationId}={}){var _this4=this;return(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_16__.Z)((function*(){_this4.error.set(void 0),_this4.isLoading.set(!0),abortController=abortController??new AbortController;let chatRequest={messages:messagesSnapshot,options,data};const thinkingMessage={id:assistantMessageId=assistantMessageId??(0,ai__WEBPACK_IMPORTED_MODULE_14__.x0)(),role:_metad_copilot__WEBPACK_IMPORTED_MODULE_2__.eV.Assistant,content:"",status:"thinking"};_this4.upsertMessage(thinkingMessage);const removeMessageWhenAbort=()=>{_this4.stopMessage(thinkingMessage.id)};abortController.signal.addEventListener("abort",removeMessageWhenAbort);try{const message=yield(0,_metad_copilot__WEBPACK_IMPORTED_MODULE_2__.fe)({getStreamedResponse:(_ref2=(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_16__.Z)((function*(){return yield _this4.copilot.chat({body:{...(0,lodash_es__WEBPACK_IMPORTED_MODULE_17__.Z)(_this4.aiOptions,"temperature"),...options?.body??{}},generateId:()=>assistantMessageId,onFinish:message=>{_this4.upsertMessage({...message,status:"answering"})},appendMessage:message=>{_this4.upsertMessage({...message,status:"answering"})},abortController,model:_this4.aiOptions.model},chatRequest,{options,data})})),function getStreamedResponse(){return _ref2.apply(this,arguments)}),experimental_onFunctionCall:_this4.copilotContext.getFunctionCallHandler(),updateChatRequest:newChatRequest=>{chatRequest=newChatRequest,(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_12__.Z)(_logger,_this4)?.debug("The new chat request after FunctionCall is",newChatRequest)},getCurrentMessages:()=>_this4.lastConversation()?.messages??[],conversationId});return message?_this4.upsertMessage({...message,id:assistantMessageId,status:"done"}):_this4.deleteMessage(assistantMessageId),null}catch(err){return"AbortError"===err.name||err instanceof Error&&(_this4.error.set(err),_this4.deleteMessage(assistantMessageId),_this4.upsertMessage({id:(0,ai__WEBPACK_IMPORTED_MODULE_14__.x0)(),role:_metad_copilot__WEBPACK_IMPORTED_MODULE_2__.eV.Assistant,content:"",error:err.message,status:"error"})),null}finally{abortController.signal.removeEventListener("abort",removeMessageWhenAbort),_this4.isLoading.set(!1)}var _ref2}))()}append(message,options){var _this5=this;return(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_16__.Z)((function*(){return message.id||(message.id=_this5.generateId()),_this5.triggerRequest((_this5.lastConversation()?.messages??[]).concat(message),options)}))()}generateId(){return(0,ai__WEBPACK_IMPORTED_MODULE_14__.x0)()}newConversation(type,command){const conversation=(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_assertClassBrand_js__WEBPACK_IMPORTED_MODULE_18__.Z)(_NgmCopilotEngineService_brand,this,_newConversation).call(this,type,command);(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_12__.Z)(_conversationId,this).set(conversation.id),this.conversations$.update((conversations=>[...conversations,conversation]))}upsertConversation(type,command){const conversations=this.conversations$(),lastConversation=conversations[conversations.length-1];lastConversation?.type?"free"===type&&"free"===lastConversation.type||this.newConversation(type,command):this.updateLastConversation((conversation=>({...conversation??(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_assertClassBrand_js__WEBPACK_IMPORTED_MODULE_18__.Z)(_NgmCopilotEngineService_brand,this,_newConversation).call(this,type,command),type})))}upsertMessage(...messages){this.conversations$.update((conversations=>{const lastConversation=conversations[conversations.length-1],lastMessages=lastConversation.messages;return messages.forEach((message=>{const index=lastMessages.findIndex((item=>item.id===message.id));index>-1?lastMessages[index]={...message}:lastMessages.push(message)})),[...conversations.slice(0,conversations.length-1),{...lastConversation,messages:lastMessages}]}))}deleteMessage(message){const messageId="string"==typeof message?message:message.id;this.conversations$.update((conversations=>{const _conversations=[];return conversations.forEach((conversation=>{if(conversation.messages.findIndex((item=>item.id===messageId))>-1){const messages=conversation.messages.filter((item=>item.id!==messageId));messages.length&&_conversations.push({...conversation,messages})}else _conversations.push(conversation)})),_conversations}))}clear(){this.conversations$.set([])}updateConversations(fn){this.conversations$.update(fn)}updateConversation(id,fn){this.conversations$.update((conversations=>{const index=conversations.findIndex((conversation=>conversation.id===id));return index>-1&&(conversations[index]=fn(conversations[index])),(0,_metad_ocap_core__WEBPACK_IMPORTED_MODULE_3__.oA$)(conversations)}))}updateLastConversation(fn){this.conversations$.update((conversations=>{const lastIndex=conversations.length-1<0?0:conversations.length-1,lastConversation=conversations[lastIndex];return conversations[lastIndex]=fn(lastConversation),(0,_metad_ocap_core__WEBPACK_IMPORTED_MODULE_3__.oA$)(conversations)}))}stopMessage(id){this.updateLastConversation((conversation=>{const message=conversation.messages.find((m=>m.id===id));return message&&(message.status="done"),conversation}))}dropCopilot(event){var _this6=this;return(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_16__.Z)((function*(){const dropActions=(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_classPrivateFieldGet2_js__WEBPACK_IMPORTED_MODULE_12__.Z)(_dropActions,_this6).call(_this6);if(dropActions[event.previousContainer.id]){const message=yield dropActions[event.previousContainer.id].implementation(event,_this6),currentConversation=_this6.currentConversation(),currentCommand=_this6.currentCommand();"free"===currentConversation.type||currentCommand?.agent?.conversation||_this6.newConversation(null,null),_this6.upsertMessage({...message,lcMessage:new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.xk({content:message.content})})}}))()}executeCommandSuggestion(input,options){var _this7=this;return(0,_home_runner_work_ocap_ocap_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_16__.Z)((function*(){const{command,context,signal}=options,contextContent=context?yield(0,_context_service__WEBPACK_IMPORTED_MODULE_11__.oG)(input,context):null,params=yield(0,_context_service__WEBPACK_IMPORTED_MODULE_11__.GC)(input,context);let systemPrompt="";try{command.systemPrompt&&(systemPrompt=yield command.systemPrompt({params}));const llm=_this7.llm(),verbose=_this7.verbose();if(llm){if(command.suggestionTemplate){const chain=command.suggestionTemplate.pipe(_this7.llm()).pipe(new _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_1__.AN);return yield chain.invoke({input,system_prompt:systemPrompt,context:contextContent,signal,verbose})}throw new Error("No completion template found")}throw new Error("LLM is not available")}catch(err){throw new Error("Error: "+err.message)}}))()}}).ctorParameters=()=>[],_NgmCopilotEngineService);function _newConversation(type,command){return{id:(0,ai__WEBPACK_IMPORTED_MODULE_14__.x0)(),messages:[],type,command}}NgmCopilotEngineService=(0,tslib__WEBPACK_IMPORTED_MODULE_19__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Injectable)(),(0,tslib__WEBPACK_IMPORTED_MODULE_19__.w6)("design:paramtypes",[])],NgmCopilotEngineService)},"./packages/angular/i18n/zhHans.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{q:()=>ZhHans});const ZhHans={Ngm:{Common:{Add:"添加",Cancel:"取消",Apply:"应用",Reset:"重置",Search:"搜索",Select:"选择",Clear:"清空",Search_Placeholder:"请输入关键词",DisplayBehaviour_Description:"描述",DisplayBehaviour_DescriptionID:"描述 ID",DisplayBehaviour_IDDescription:"ID 描述",DisplayBehaviour_ID:"ID",DisplayBehaviour_Auto:"自动",SelectionType_Single:"单选",SelectionType_Multiple:"多选",Presentation_Flat:"平铺",Presentation_Hierarchy:"层级",HierarchySelectionMode_Individual:"单个",HierarchySelectionMode_SelfDescendants:"自己和后代",HierarchySelectionMode_DescendantsOnly:"只后代",HierarchySelectionMode_SelfChildren:"自己和子代",HierarchySelectionMode_ChildrenOnly:"只子代",Measures:"度量",None:"无",Default:"默认",Hierarchy:"层次结构",DisplayBehaviour:"显示行为",DisplayBehaviour_IDOnly:"编码"},AnalyticalCard:{Screenshot:"截图",DataDownload:"下载数据",Refresh:"刷新",DrillDown:"下钻",DrillLevel:"层级下钻",DrillDimension:"维度下钻",LinkAnalysis:"联动筛选",DataEmpty:"数据为空"},AnalyticalGrid:{DataDownload:"下载数据",SORT:"排序",MOVE:"移动",ASCENDING:"正序",DESCENDGING:"倒序",MOVELEFT:"向左",MOVERIGHT:"向右",Search:"搜索",SelectAll:"选择所有",Pin:"固定"},Controls:{ValueHelp:{Title:"为{{value}}设置过滤器",AvailableMembers:"可选成员",DisplayBehaviour:"展现形式",SelectedMembers:"选中成员",ClearSelection:"清空选择",ShowUnbookedMembers:"显示未分配成员",ShowAllMember:"显示‘所有’成员",ShowOnlyLeaves:"只显示叶子节点",ExcludeSelectedMembers:"排除选中成员",SelectionType:"选择类型",Presentation:"展现形式",HierarchySelectionMode:"层级选择模式",Hierarchy:"层次结构"}},Copilot:{Copilot:"副驾驶",AICopilot:"AI 副驾驶",EnableCopilot:"启用 Copilot",GetYourApiKey:"获取你的 API Key",ProvideOpenaiApiKey:"请提供 Openai API Key?",Provider:"提供商",YourAIPairProgrammer:"你的 AI 配对程序员!",LetYourAIPairProgrammerEdits:"让你的 AI 配对程序员修改一下!",SelectSomeCode:"选择代码，让你的 AI 配对程序员修改一下!",ThinkingHard:"努力思考中...",StopGenerating:"停止生成",ClearMessages:"清空消息",CharacterLength:"字数",Resubmit:"重新提交",Cancel:"取消",Model:"模型",Options:"选项",UseSystemPrompt:"使用系统提示",ExamplesOfPrompts:"提示语示例",APIKey:"API 密钥",APIHost:"API 主机",AskAICopilot:"向 AI 副驾驶询问问题",Prompt:"提示",SendPrompt:"发送提问",Placeholder:"询问副驾驶或输入 / 获取命令",ClearConversation:"清空会话",Ask:"提问",Copy:"复制",Regenerate:"重新生成",Common:"通用",PleaseSelectBusinessRole:"请选择一个业务角色",DefaultBusinessRole:{title:"通用",description:"通用业务角色"},Help:"帮助",NewChat:"新聊天",Update:"更新"},Entity:{SelectEntities:"选择数据集",SemanticModel:"语义模型",Cube:"多维数据集",AnnotatedCube:"增强过的多维数据集",MEASURE:"度量",SELECT_DIMENSION:"选择维度",MeasureFormatting:"度量格式",ShortNumber:"缩写数字",Decimals:"小数位",Unit:"单位",UseUnderlyingUnit:"使用模型单位",DigitsInfo:"数字格式"},EntitySchema:{Parameters:"参数",Measures:"度量",Properties:"属性"},Formula:{Editor:{EditFormula:"编辑公式",Format:"格式化",Help:"帮助"}},Table:{Select:"选择",NoData:"无数据",MatchingFilter:'匹配过滤条件"{{value}}"',firstPageLabel:"第一",itemsPerPageLabel:"每页",lastPageLabel:"最后",nextPageLabel:"下一页",previousPageLabel:"上一页",rangeLabel0:"页 1 共 1",pageLabel:"页",ofLabel:"共"},DatePicker:{Date:"日期",Year:"年",Quarter:"季",Month:"月",Week:"周",Day:"日",From:"从",To:"至"},TimeFilter:{SET_DATE_RANGE:"为 {{property}} 设置时间区间",CURRENT_DATE:"当前日期",SYSTEM_DATE:"系统时间",USER_CURRENT_DATE:"用户当前时间",ADD_TIME_RANGE:"添加时间区间",RANGE:"区间",RANGE_TYPE:"区间类型",RANGE_TYPE_STANDARD:"标准",RANGE_TYPE_OFFSET:"偏移",GRANULARITY:"粒度",YEAR:"年",QUARTER:"季度",MONTH:"月",WEEK:"周",DAY:"日",LOOK_BACK:"回顾",LOOK_AHEAD:"展望",CURRENT_PERIOD:"当前时间",FORMATTER:"格式",OFFSET_DIRECTION:"偏移方向",OFFSET_AMOUNT:"偏移量",SETTINGS_FOR_USERS:"为用户设置",ALLOW_MODIFY_SELECTIONS:"允许查看者修改选择",SELECTION_TYPE:"选择类型",SELECTION_TYPE_MULTIPLE:"多选",SELECTION_TYPE_SINGLE:"单选",TODAY:"当前期间",Year:"年",Quarter:"季度",Month:"月",Week:"周",Day:"日",Today:"今天"},AdvancedSlicer:{TITLE:"高级切片器",CONTEXT:"上下文",OPERATOR:"操作符",ENABLE_OTHER:"汇总其它项",VALUE:"值",VALUE_FROM:"从",VALUE_TO:"至",MEASURE:"度量",MeasureSelectPlaceholder:"选择或新建一个度量",Equal:"等于",NotEqual:"不等于",LessThan:"小于",GreaterThan:"大于",LessEqual:"小于等于",GreaterEqual:"大于等于",Between:"介于",NotBetween:"不介于",TopCount:"前 N 个",BottomCount:"后 N 个",TopPercent:"前百分比的",BottomPercent:"后百分比的",TopSum:"前总数",BottomSum:"后总数"},Property:{PARAMETER:"参数",PARAMETERS:"参数",MEASURE:"度量",MEASURES:"度量",MeasureGroup:"度量组",INDICATORS:"指标",CREATE_PARAMETER:"创建参数",EditParameter:"编辑参数",CALCULATIONS:"计算度量",DIMENSION:"维度",DIMENSIONS:"维度",ADD_DIMENSION:"添加维度",MEMBERS:"成员",HIERARCHY:"层次结构",ADD_PARAMETER_MEMBER:"添加成员",MEASURE_CONTROLS:"度量控制",CREATE_CALCULATION:"创建计算",CREATE_MEASURE_CONTROL:"创建度量控制",REFERENCE_LINE:"参考线",Input:"输入",Select:"选择",Dimensions:"维度",Name:"名称",NameRequired:"名称必输或已存在",Caption:"标签",Value:"值",DefaultValue:"默认值",ValueType:"值类型",DisplayAs:"显示为",Label:"文本字段",Formatter:"格式设置",EditFormula:"编辑公式",UnbookedData:"无成员数据",ZeroSuppression:"清零",PropertyList:"属性列表",DisplayHierarchy:"包含父级层级",CreateParameter:"创建参数",CurrentMember:"当前成员",PreviousNMember:"之前第 N 个成员",NextNMember:"之后第 N 个成员",ParallelMember:"平行成员",AncestorMember:"祖先成员",SelectByMembers:"选择成员",NewCalculationInputControl:"新建计算输入",NthMember:"值 / 第 N 个",IsDefault:"默认",Default:"默认",Auto:"自动","Description and ID":"名称+ID","Description Only":"名称","ID Only":"ID",Description:"描述",Order:"排序",None:"无",Order_ASC:"正序",Order_DESC:"倒序",Dimension:"维度",AvailableMembers:"可用成员",DimensionNotFound:"在数据集‘{{cube}}’中未找到维度‘{{dimension}}’",DIMENSION_MEASURE:"维度/度量",Parameter:"参数","Measure Control":"度量控制",Measure:"度量",Calculation:"计算",Hierarchy:"层次结构",Level:"层级","Measure Group":"度量组",Indicator:"指标",Calendar:"日历","Address.Country":"国家"},MeasureSelect:{EditCalculationMeasure:"编辑计算度量",NewCalculationMeasure:"新建计算度量"},Calculation:{TITLE:"计算编辑器",TYPE:"类型",Name:"名称",NameRequired:"名称必输或已存在",Caption:"标签",FUNCTIONS:"函数",DIMENSION_MEMBERS:"维度成员",CALCULATED_MEMBERS:"计算成员",PARAMETERS:"参数",CALCULATED_MEASURE:"计算公式",RESTRICTED_MEASURE:"受限度量",VARIANCE_MEASURE:"差值度量",AGGREGATION:"聚合",DIMENSION_TO_MEASURE:"维度转度量",MEASURE_CONTROL:"度量控制",PROPERTIES:"属性",OPERATION:"运算",VALUE:"值",AGGREGATION_DIMENSIONS:"聚合维度",ADD_DIMENSION:"添加维度",SELECTION_CONTEXT:"选择上下文",ENABLE_CONSTANT_SELECTION:"启用常量选择",EDIT_FORMULA:"编辑公式",ToggleSidebar:"切换侧边栏",UseConditionalAggregation:"使用条件聚合",ConditionalDimensions:"条件维度",ExcludeConditions:"排除条件",Compare:"比",To:"较",BaseDimension:"基准维度",SetNoDataasZero:"将无数据当作零",CalculateasPercentage:"计算为百分比",DirectDivide:"直接除",AbsoluteBaseValue:"绝对化基值",DivideBy:"除以",CompareValueA:"比 (A)",ToValueB:"较 (B)",Measure:"度量",RestrictiveConditions:"限定条件",ConstantSelectionTootip:"锁定限定条件维度成员,使其不会被用户上下文切片器所覆盖",Dimension:"维度",MeasureSelectOptions:"度量选择选项",ConditionalAggregation:"条件聚合",Unit:"单位",Formulas:"公式",MeasureSelectPlaceholder:"选择或新建一个度量",MeasureIsRequired:"度量必选"},AdvancedFilter:{Title:"组合切片器",AND:"且",OR:"或",GROUP:"组合",Operator:"操作符",Value:"值",Condition:"条件",AddGroup:'"且"组合',OrGroup:'"或"组合',EndGroup:"结束组合",DeleteGroup:"删除组合",Tips:"使用 且/或 创建条件组合"},Selection:{Slicers:"切片器",AdvancedFilter:"组合切片器",CombinationSlicer:"组合切片器",AdvancedSlicer:"高级切片器",DimensionMembers:"维度成员",TimeRanges:"动态时间范围",OnContext:"基于",SLICERS_BAR:{TITLE:"过滤器"},SLICER:{ADVANCED_SLICER:"高级切片器",ADVANCED_FILTER:"组合切片器"},DateFunctions:{SYSTEMTIME:"系统时间",TODAY:"今天"}}}}},"./packages/angular/mock/logger.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{j:()=>provideLogger});var _angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),ngx_logger__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/ngx-logger/fesm2020/ngx-logger.mjs");function provideLogger(){return(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.importProvidersFrom)(ngx_logger__WEBPACK_IMPORTED_MODULE_1__.f9.forRoot({level:ngx_logger__WEBPACK_IMPORTED_MODULE_1__._z.DEBUG,serverLogLevel:ngx_logger__WEBPACK_IMPORTED_MODULE_1__._z.ERROR}))}},"./packages/angular/mock/translate.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{qX:()=>provideTranslate,zd:()=>zhHansLanguage});var _angular_common_http__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@angular/common/fesm2022/http.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@ngx-translate/core/dist/fesm2022/ngx-translate-core.mjs"),rxjs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js"),_metad_ocap_angular_core__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/angular/core/i18n/missing-tanslation.ts"),_metad_ocap_angular_i18n__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/angular/i18n/zhHans.ts");const zhHansLanguage="zh-Hans";class CustomTranslateLoader{getTranslation(lang){return console.log(lang),lang===zhHansLanguage?(0,rxjs__WEBPACK_IMPORTED_MODULE_0__.of)(_metad_ocap_angular_i18n__WEBPACK_IMPORTED_MODULE_1__.q):(0,rxjs__WEBPACK_IMPORTED_MODULE_0__.of)(null)}}function provideTranslate(defaultLanguage=zhHansLanguage){return(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.importProvidersFrom)(_ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__.aw.forRoot({missingTranslationHandler:{provide:_ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__.gC,useClass:_metad_ocap_angular_core__WEBPACK_IMPORTED_MODULE_4__.l},loader:{provide:_ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__.Zw,useClass:CustomTranslateLoader,deps:[_angular_common_http__WEBPACK_IMPORTED_MODULE_5__.eN]},defaultLanguage}))}},"./packages/copilot/src/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Fh:()=>AI_PROVIDERS,nx:()=>CopilotAgentType,eV:()=>CopilotChatMessageRoleEnum,yY:()=>CopilotService,Jb:()=>DefaultBusinessRole,lZ:()=>DefaultModel,Py:()=>entryPointsToChatCompletionFunctions,hs:()=>entryPointsToFunctionCallHandler,uF:()=>getCommandPrompt,fe:()=>processChatStream});var asyncToGenerator=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"),classPrivateFieldInitSpec=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js"),classPrivateFieldSet2=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js"),classPrivateFieldGet2=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js"),openai=__webpack_require__("./node_modules/@langchain/openai/index.js"),esm_fetch=__webpack_require__("./node_modules/@microsoft/fetch-event-source/lib/esm/fetch.js"),dist=__webpack_require__("./node_modules/ai/dist/index.mjs"),BehaviorSubject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),shareReplay=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js"),switchMap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/switchMap.js"),throwError=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/throwError.js"),Observable=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Observable.js"),of=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js"),catchError=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/catchError.js"),dom_fetch=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/dom/fetch.js"),asyncIterator=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncIterator.js"),awaitAsyncGenerator=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js"),wrapAsyncGenerator=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js");const textStreamPart={code:"0",name:"text",parse:value=>{if("string"!=typeof value)throw new Error('"text" parts expect a string value.');return{type:"text",value}}},functionCallStreamPart={code:"1",name:"function_call",parse:value=>{if(null==value||"object"!=typeof value||!("function_call"in value)||"object"!=typeof value.function_call||null==value.function_call||!("name"in value.function_call)||!("arguments"in value.function_call)||"string"!=typeof value.function_call.name||"string"!=typeof value.function_call.arguments)throw new Error('"function_call" parts expect an object with a "function_call" property.');return{type:"function_call",value}}},dataStreamPart={code:"2",name:"data",parse:value=>{if(!Array.isArray(value))throw new Error('"data" parts expect an array value.');return{type:"data",value}}},errorStreamPart={code:"3",name:"error",parse:value=>{if("string"!=typeof value)throw new Error('"error" parts expect a string value.');return{type:"error",value}}},assistantMessageStreamPart={code:"4",name:"assistant_message",parse:value=>{if(!(null!=value&&"object"==typeof value&&"id"in value&&"role"in value&&"content"in value&&"string"==typeof value.id&&"string"==typeof value.role&&"assistant"===value.role&&Array.isArray(value.content)&&value.content.every((item=>null!=item&&"object"==typeof item&&"type"in item&&"text"===item.type&&"text"in item&&null!=item.text&&"object"==typeof item.text&&"value"in item.text&&"string"==typeof item.text.value))))throw new Error('"assistant_message" parts expect an object with an "id", "role", and "content" property.');return{type:"assistant_message",value}}},assistantControlDataStreamPart={code:"5",name:"assistant_control_data",parse:value=>{if(null==value||"object"!=typeof value||!("threadId"in value)||!("messageId"in value)||"string"!=typeof value.threadId||"string"!=typeof value.messageId)throw new Error('"assistant_control_data" parts expect an object with a "threadId" and "messageId" property.');return{type:"assistant_control_data",value:{threadId:value.threadId,messageId:value.messageId}}}},dataMessageStreamPart={code:"6",name:"data_message",parse:value=>{if(null==value||"object"!=typeof value||!("role"in value)||!("data"in value)||"string"!=typeof value.role||"data"!==value.role)throw new Error('"data_message" parts expect an object with a "role" and "data" property.');return{type:"data_message",value}}},toolCallStreamPart={code:"7",name:"tool_calls",parse:value=>{if(null==value||"object"!=typeof value||!("tool_calls"in value)||"object"!=typeof value.tool_calls||null==value.tool_calls||!Array.isArray(value.tool_calls)||value.tool_calls.some((tc=>{null!=tc&&"object"==typeof tc&&"id"in tc&&"string"==typeof tc.id&&"type"in tc&&"string"==typeof tc.type&&"function"in tc&&null!=tc.function&&"object"==typeof tc.function&&"arguments"in tc.function&&"string"==typeof tc.function.name&&tc.function.arguments})))throw new Error('"tool_calls" parts expect an object with a ToolCallPayload.');return{type:"tool_calls",value}}},streamParts=[textStreamPart,functionCallStreamPart,dataStreamPart,errorStreamPart,assistantMessageStreamPart,assistantControlDataStreamPart,dataMessageStreamPart,toolCallStreamPart],streamPartsByCode={[textStreamPart.code]:textStreamPart,[functionCallStreamPart.code]:functionCallStreamPart,[dataStreamPart.code]:dataStreamPart,[errorStreamPart.code]:errorStreamPart,[assistantMessageStreamPart.code]:assistantMessageStreamPart,[assistantControlDataStreamPart.code]:assistantControlDataStreamPart,[dataMessageStreamPart.code]:dataMessageStreamPart,[toolCallStreamPart.code]:toolCallStreamPart},validCodes=streamParts.map((part=>part.code)),parseStreamPart=line=>{const firstSeparatorIndex=line.indexOf(":");if(-1===firstSeparatorIndex)throw new Error("Failed to parse stream string. No separator found.");const prefix=line.slice(0,firstSeparatorIndex);if(!validCodes.includes(prefix))throw new Error(`Failed to parse stream string. Invalid code ${prefix}.`);const code=prefix,textValue=line.slice(firstSeparatorIndex+1),jsonValue=JSON.parse(textValue);return streamPartsByCode[code].parse(jsonValue)};function formatStreamPart(type,value){const streamPart=streamParts.find((part=>part.name===type));if(!streamPart)throw new Error(`Invalid stream part type: ${type}`);return`${streamPart.code}:${JSON.stringify(value)}\n`}const NEWLINE="\n".charCodeAt(0);function concatChunks(chunks,totalLength){const concatenatedChunks=new Uint8Array(totalLength);let offset=0;for(const chunk of chunks)concatenatedChunks.set(chunk,offset),offset+=chunk.length;return chunks.length=0,concatenatedChunks}function _readDataStream(){return _readDataStream=(0,wrapAsyncGenerator.Z)((function*(reader,{isAborted}={}){const decoder=new TextDecoder,chunks=[];let totalLength=0;for(;;){const{value}=yield(0,awaitAsyncGenerator.Z)(reader.read());if(value&&(chunks.push(value),totalLength+=value.length,value[value.length-1]!==NEWLINE))continue;if(0===chunks.length)break;const concatenatedChunks=concatChunks(chunks,totalLength);totalLength=0;const streamParts=decoder.decode(concatenatedChunks,{stream:!0}).split("\n").filter((line=>""!==line)).map(parseStreamPart);for(const streamPart of streamParts)yield streamPart;if(isAborted?.()){reader.cancel();break}}})),_readDataStream.apply(this,arguments)}function parseComplexResponse(_x){return _parseComplexResponse.apply(this,arguments)}function _parseComplexResponse(){return _parseComplexResponse=(0,asyncToGenerator.Z)((function*({reader,abortControllerRef,update,onFinish,generateId=dist.x0,getCurrentDate=()=>new Date}){const createdAt=getCurrentDate(),prefixMap={data:[]};var _iteratorError,_iteratorAbruptCompletion=!1,_didIteratorError=!1;try{for(var _step,_iterator=(0,asyncIterator.Z)(function read_data_stream_readDataStream(_x){return _readDataStream.apply(this,arguments)}(reader,{isAborted:()=>null===abortControllerRef?.current}));_iteratorAbruptCompletion=!(_step=yield _iterator.next()).done;_iteratorAbruptCompletion=!1){const{type,value}=_step.value;{"text"===type&&(prefixMap.text?prefixMap.text={...prefixMap.text,content:(prefixMap.text.content||"")+value}:prefixMap.text={id:generateId(),role:"assistant",content:value,createdAt});let functionCallMessage=null;"function_call"===type&&(prefixMap.function_call={id:generateId(),role:"assistant",content:"",function_call:value.function_call,name:value.function_call.name,createdAt},functionCallMessage=prefixMap.function_call);let toolCallMessage=null;"tool_calls"===type&&(prefixMap.tool_calls={id:generateId(),role:"assistant",content:"",tool_calls:value.tool_calls,createdAt},toolCallMessage=prefixMap.tool_calls),"data"===type&&prefixMap.data.push(...value);const responseMessage=prefixMap.text;update([functionCallMessage,toolCallMessage,responseMessage].filter(Boolean),[...prefixMap.data])}}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{_iteratorAbruptCompletion&&null!=_iterator.return&&(yield _iterator.return())}finally{if(_didIteratorError)throw _iteratorError}}return onFinish?.(prefixMap),{messages:[prefixMap.text,prefixMap.function_call,prefixMap.tool_calls].filter(Boolean),data:prefixMap.data}})),_parseComplexResponse.apply(this,arguments)}function _streamable(){return(_streamable=(0,wrapAsyncGenerator.Z)((function*(stream){const extract=chunkToText();var _iteratorError,_iteratorAbruptCompletion=!1,_didIteratorError=!1;try{for(var _step,_iterator=(0,asyncIterator.Z)(stream);_iteratorAbruptCompletion=!(_step=yield(0,awaitAsyncGenerator.Z)(_iterator.next())).done;_iteratorAbruptCompletion=!1){{const text=extract(_step.value);text&&(yield text)}}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{_iteratorAbruptCompletion&&null!=_iterator.return&&(yield(0,awaitAsyncGenerator.Z)(_iterator.return()))}finally{if(_didIteratorError)throw _iteratorError}}}))).apply(this,arguments)}function chunkToText(){const trimStartOfStream=(0,dist.qq)();let isFunctionStreamingIn;return json=>{if(function isError(data){return"code"in data&&!!data.code}(json))throw new Error(json.message);if(isChatCompletionChunk(json)){json.output.delta;if(isFunctionStreamingIn&&("function_call"===json.output?.finish_reason||"stop"===json.output?.finish_reason))return isFunctionStreamingIn=!1,'"}}';if(isFunctionStreamingIn&&"tool_calls"===json.output?.finish_reason)return isFunctionStreamingIn=!1,'"}}]}'}return trimStartOfStream(isChatCompletionChunk(json)&&json.output.delta?json.output.delta:function isCompletion(data){return"output"in data&&data.output&&"text"in data.output}(json)?json.output.text:"")}}const __internal__OpenAIFnMessagesSymbol=Symbol("internal_openai_fn_messages");function isChatCompletionChunk(data){return"output"in data&&data.output&&"text"in data.output}function DashScopeStream(res,callbacks){const cb=callbacks;let stream;if(stream=Symbol.asyncIterator in res?(0,dist.uU)(function streamable(_x){return _streamable.apply(this,arguments)}(res)).pipeThrough((0,dist.T_)(cb?.experimental_onFunctionCall||cb?.experimental_onToolCall?{...cb,onFinal:void 0}:{...cb})):(0,dist.t2)(res,function parseOpenAIStream(){const extract=chunkToText();return data=>extract(JSON.parse(data))}(),cb?.experimental_onFunctionCall||cb?.experimental_onToolCall?{...cb,onFinal:void 0}:{...cb}),cb&&(cb.experimental_onFunctionCall||cb.experimental_onToolCall)){const functionCallTransformer=function createFunctionCallTransformer(callbacks){const textEncoder=new TextEncoder;let isFirstChunk=!0,aggregatedResponse="",aggregatedFinalCompletionResponse="",isFunctionStreamingIn=!1;const functionCallMessages=callbacks[__internal__OpenAIFnMessagesSymbol]||[],isComplexMode=callbacks?.experimental_streamData,decode=(0,dist.NX)();return new TransformStream({transform:(chunk,controller)=>(0,asyncToGenerator.Z)((function*(){const message=decode(chunk);aggregatedFinalCompletionResponse+=message;if(isFirstChunk&&(message.startsWith('{"function_call":')||message.startsWith('{"tool_calls":')))return isFunctionStreamingIn=!0,aggregatedResponse+=message,void(isFirstChunk=!1);isFunctionStreamingIn?aggregatedResponse+=message:controller.enqueue(isComplexMode?textEncoder.encode(formatStreamPart("text",message)):chunk)}))(),flush:controller=>(0,asyncToGenerator.Z)((function*(){try{if(!isFirstChunk&&isFunctionStreamingIn&&(callbacks.experimental_onFunctionCall||callbacks.experimental_onToolCall)){isFunctionStreamingIn=!1;const payload=JSON.parse(aggregatedResponse);let functionResponse,newFunctionCallMessages=[...functionCallMessages];if(callbacks.experimental_onFunctionCall){void 0===payload.function_call&&console.warn("experimental_onFunctionCall should not be defined when using tools");const argumentsPayload=JSON.parse(payload.function_call.arguments);functionResponse=yield callbacks.experimental_onFunctionCall({name:payload.function_call.name,arguments:argumentsPayload},(result=>(newFunctionCallMessages=[...functionCallMessages,{role:"assistant",content:"",function_call:payload.function_call},{role:"function",name:payload.function_call.name,content:JSON.stringify(result)}],newFunctionCallMessages)))}if(callbacks.experimental_onToolCall){const toolCalls={tools:[]};for(const tool of payload.tool_calls)toolCalls.tools.push({id:tool.id,type:"function",func:{name:tool.function.name,arguments:tool.function.arguments}});let responseIndex=0;try{functionResponse=yield callbacks.experimental_onToolCall(toolCalls,(result=>{if(result){const{tool_call_id,function_name,tool_call_result}=result;newFunctionCallMessages=[...newFunctionCallMessages,...0===responseIndex?[{role:"assistant",content:"",tool_calls:payload.tool_calls.map((tc=>({id:tc.id,type:"function",function:{name:tc.function.name,arguments:JSON.stringify(tc.function.arguments)}})))}]:[],{role:"tool",tool_call_id,name:function_name,content:JSON.stringify(tool_call_result)}],responseIndex++}return newFunctionCallMessages}))}catch(e){console.error("Error calling experimental_onToolCall:",e)}}if(!functionResponse)return void controller.enqueue(textEncoder.encode(isComplexMode?formatStreamPart(payload.function_call?"function_call":"tool_calls",JSON.parse(aggregatedResponse)):aggregatedResponse));if("string"==typeof functionResponse)return void controller.enqueue(isComplexMode?textEncoder.encode(formatStreamPart("text",functionResponse)):textEncoder.encode(functionResponse));const filteredCallbacks={...callbacks,onStart:void 0};callbacks.onFinal=void 0;const reader=DashScopeStream(functionResponse,{...filteredCallbacks,[__internal__OpenAIFnMessagesSymbol]:newFunctionCallMessages}).getReader();for(;;){const{done,value}=yield reader.read();if(done)break;controller.enqueue(value)}}}finally{callbacks.onFinal&&aggregatedFinalCompletionResponse&&(yield callbacks.onFinal(aggregatedFinalCompletionResponse))}}))()})}(cb);return stream.pipeThrough(functionCallTransformer)}return stream.pipeThrough((0,dist.h6)(cb?.experimental_streamData))}function callChatApi(_x){return _callChatApi.apply(this,arguments)}function _callChatApi(){return(_callChatApi=(0,asyncToGenerator.Z)((function*({api,model,chatRequest,messages,body,credentials,headers,abortController,appendMessage,restoreMessagesOnFailure,onResponse,onUpdate,onFinish,generateId}){const{functions,function_call}=chatRequest,response=yield fetch(api,{method:"POST",body:JSON.stringify({input:{result_format:"message",messages,functions,function_call},parameters:{},model}),headers:{...headers,"content-type":"application/json",accept:"text/event-stream"},signal:abortController?.()?.signal,credentials}).catch((err=>{throw restoreMessagesOnFailure(),err}));if(onResponse)try{yield onResponse(response)}catch(err){throw err}if(!response.ok)throw restoreMessagesOnFailure(),new Error((yield response.text())||"Failed to fetch the chat response.");if(!response.body)throw new Error("The response body is empty.");const reader=DashScopeStream(response).getReader();if("true"===response.headers.get(dist.uY))return yield parseComplexResponse({reader,abortControllerRef:null!=abortController?{current:abortController()}:void 0,update:onUpdate,onFinish(prefixMap){onFinish&&null!=prefixMap.text&&onFinish(prefixMap.text)},generateId});{const createdAt=new Date,decode=(0,dist.NX)(!1);let streamedResponse="";const responseMessage={id:generateId(),createdAt,content:"",role:"assistant"};for(;;){const{done,value}=yield reader.read();if(done)break;if(streamedResponse=decode(value),streamedResponse.startsWith('{"function_call":')?responseMessage.function_call=streamedResponse:streamedResponse.startsWith('{"tool_calls":')?responseMessage.tool_calls=streamedResponse:responseMessage.content=streamedResponse,appendMessage({...responseMessage}),null===abortController?.()){reader.cancel();break}}if(streamedResponse.startsWith('{"function_call":')){const parsedFunctionCall=JSON.parse(streamedResponse).function_call;responseMessage.function_call=parsedFunctionCall,appendMessage({...responseMessage})}if(streamedResponse.startsWith('{"tool_calls":')){const parsedToolCalls=JSON.parse(streamedResponse).tool_calls;responseMessage.tool_calls=parsedToolCalls,appendMessage({...responseMessage})}return onFinish&&onFinish(responseMessage),responseMessage}}))).apply(this,arguments)}var json5_dist=__webpack_require__("./node_modules/json5/dist/index.js"),dist_default=__webpack_require__.n(json5_dist);function call_chat_api_callChatApi(_x){return shared_call_chat_api_callChatApi.apply(this,arguments)}function shared_call_chat_api_callChatApi(){return(shared_call_chat_api_callChatApi=(0,asyncToGenerator.Z)((function*({api,model,messages,body,credentials,headers,abortController,appendMessage,restoreMessagesOnFailure,onResponse,onUpdate,onFinish,generateId}){body={messages,stream:!0,...body,model};const response=yield fetch(api,{method:"POST",body:JSON.stringify(body),headers:{"Content-Type":"application/json",...headers},signal:abortController?.()?.signal,credentials}).catch((err=>{throw restoreMessagesOnFailure(),err}));if(onResponse)try{yield onResponse(response)}catch(err){throw err}if(!response.ok)throw restoreMessagesOnFailure(),new Error((yield response.text())||"Failed to fetch the chat response.");if(!response.body)throw new Error("The response body is empty.");const reader=body.stream?(0,dist.HP)(response).getReader():response.body.getReader();if("true"===response.headers.get(dist.uY))return yield parseComplexResponse({reader,abortControllerRef:null!=abortController?{current:abortController()}:void 0,update:onUpdate,onFinish(prefixMap){onFinish&&null!=prefixMap.text&&onFinish(prefixMap.text)},generateId});{const createdAt=new Date,decode=(0,dist.NX)(!1);let streamedResponse="";const responseMessage={id:generateId(),createdAt,content:"",role:"assistant"};for(;;){const{done,value}=yield reader.read();if(done)break;if(streamedResponse+=decode(value),streamedResponse.startsWith('{"function_call":')?responseMessage.function_call=streamedResponse:streamedResponse.startsWith('{"tool_calls":')?responseMessage.tool_calls=streamedResponse:body.stream&&(responseMessage.content=streamedResponse),appendMessage({...responseMessage}),null===abortController?.()){reader.cancel();break}}if(body.stream){if(streamedResponse.startsWith('{"function_call":')){const parsedFunctionCall=JSON.parse(streamedResponse).function_call;responseMessage.function_call=parsedFunctionCall,appendMessage({...responseMessage})}if(streamedResponse.startsWith('{"tool_calls":')){const parsedToolCalls=JSON.parse(streamedResponse).tool_calls;responseMessage.tool_calls=parsedToolCalls,appendMessage({...responseMessage})}}else{const parsedResponse=dist_default().parse(streamedResponse),message=parsedResponse.choices[0]?.message;if(message)if(message.function_call){const parsedFunctionCall=message.function_call;responseMessage.function_call=parsedFunctionCall}else if(message.tool_calls){const parsedToolCalls=message.tool_calls;responseMessage.tool_calls=parsedToolCalls}else responseMessage.content=message.content}return onFinish&&onFinish(responseMessage),responseMessage}}))).apply(this,arguments)}const DefaultModel="gpt-3.5-turbo",DefaultBusinessRole="default";var CopilotChatMessageRoleEnum;function getCommandPrompt(prompt){const match=(prompt=prompt.trim()).match(/^\/([a-zA-Z\-]*)\s*/i),command=match?.[1];return{command,prompt:command?prompt.replace(`/${command}`,"").trim():prompt}}!function(CopilotChatMessageRoleEnum){CopilotChatMessageRoleEnum.System="system",CopilotChatMessageRoleEnum.User="user",CopilotChatMessageRoleEnum.Assistant="assistant",CopilotChatMessageRoleEnum.Info="info"}(CopilotChatMessageRoleEnum||(CopilotChatMessageRoleEnum={}));var AiProvider;!function(AiProvider){AiProvider.OpenAI="openai",AiProvider.Azure="azure",AiProvider.DashScope="dashscope"}(AiProvider||(AiProvider={}));const AI_PROVIDERS={[AiProvider.OpenAI]:{apiHost:"https://api.openai.com/v1",chatCompletionsUrl:"/chat/completions",modelsUrl:"/models",isTools:!0,models:[{id:"gpt-3.5-turbo",name:"GPT-3.5 Turbo"},{id:"gpt-3.5-turbo-16k",name:"GPT-3.5 Turbo 16k"},{id:"gpt-4o",name:"GPT-4 Omni"},{id:"gpt-4-turbo",name:"GPT-4 Turbo"},{id:"gpt-4",name:"GPT-4"},{id:"gpt-4-32k",name:"GPT-4 32k"}]},[AiProvider.Azure]:{apiHost:"",chatCompletionsUrl:"/chat/completions",modelsUrl:"/models",isTools:!0,models:[{id:"gpt-3.5-turbo",name:"GPT-3.5 Turbo"},{id:"gpt-3.5-turbo-16k",name:"GPT-3.5 Turbo 16k"},{id:"gpt-4o",name:"GPT-4 Omni"},{id:"gpt-4-turbo",name:"GPT-4 Turbo"},{id:"gpt-4",name:"GPT-4"},{id:"gpt-4-32k",name:"GPT-4 32k"}]},[AiProvider.DashScope]:{apiHost:"https://dashscope.aliyuncs.com/api/v1",chatCompletionsUrl:"/services/aigc/text-generation/generation",modelsUrl:null,isTools:!1,models:[{id:"qwen-turbo",name:"通义千问 Turbo"},{id:"qwen-plus",name:"通义千问 Plus"},{id:"qwen-max",name:"通义千问 Max"},{id:"qwen-1.8b-chat",name:"通义千问 1.8b"},{id:"qwen-7b-chat",name:"通义千问 7b"},{id:"qwen-14b-chat",name:"通义千问 14b"},{id:"qwen-72b-chat",name:"通义千问 72b"},{id:"llama2-7b-chat-v2",name:"LLaMa2 7b v2"},{id:"llama2-13b-chat-v2",name:"LLaMa2 13b v2"},{id:"chatglm-6b-v2",name:"ChatGLM 6b v2"},{id:"chatglm3-6b",name:"ChatGLM3 6b"},{id:"baichuan-7b-v1",name:"百川 7b v1"},{id:"baichuan2-7b-chat-v1",name:"百川2 7b v1"}]}};function chatCompletionsUrl(copilot){const apiHost=copilot.apiHost||AI_PROVIDERS[copilot.provider]?.apiHost,chatCompletionsUrl=AI_PROVIDERS[copilot.provider]?.chatCompletionsUrl;return copilot.chatUrl||(apiHost?.endsWith("/")?apiHost.slice(0,apiHost.length-1)+chatCompletionsUrl:apiHost+chatCompletionsUrl)}var CopilotAgentType,_copilot$=new WeakMap;class CopilotService{get copilot(){return(0,classPrivateFieldGet2.Z)(_copilot$,this).value}set copilot(value){(0,classPrivateFieldGet2.Z)(_copilot$,this).next(value?{...(0,classPrivateFieldGet2.Z)(_copilot$,this).value,...value}:null)}constructor(copilot){(0,classPrivateFieldInitSpec.Z)(this,_copilot$,void 0),(0,classPrivateFieldSet2.Z)(_copilot$,this,new BehaviorSubject.X({})),this.copilot$=(0,classPrivateFieldGet2.Z)(_copilot$,this).asObservable(),this.enabled$=this.copilot$.pipe((0,map.U)((copilot=>copilot?.enabled&&copilot?.apiKey))),this.isTools$=this.copilot$.pipe((0,map.U)((copilot=>copilot?.provider&&AI_PROVIDERS[copilot.provider]?.isTools))),this.llm$=this.copilot$.pipe((0,map.U)((copilot=>{switch(copilot.provider){case AiProvider.OpenAI:case AiProvider.Azure:return new openai.z7({apiKey:copilot.apiKey,configuration:{baseURL:copilot.apiHost||null,defaultHeaders:{...this.requestOptions().headers??{}}},model:copilot.defaultModel,temperature:0});default:return null}})),(0,shareReplay.d)(1)),copilot&&(this.copilot=copilot)}update(copilot){this.copilot=copilot}requestOptions(){return{}}createChat(messages,options){var _this=this;return(0,asyncToGenerator.Z)((function*(){const{request,signal}=options??{},response=yield fetch(chatCompletionsUrl(_this.copilot),{method:"POST",headers:{"content-type":"application/json",..._this.requestOptions()?.headers??{}},signal,body:JSON.stringify({model:DefaultModel,messages:messages.map((message=>({role:message.role,content:message.content}))),...request??{}})});if(200===response.status){return(yield response.json()).choices}throw new Error((yield response.json()).error?.message)}))()}chatCompletions(messages,request){return(0,dom_fetch.U)(chatCompletionsUrl(this.copilot),{method:"POST",headers:{"Content-Type":"application/json",...this.requestOptions()?.headers??{}},body:JSON.stringify({model:DefaultModel,messages:messages.map((message=>({role:message.role,content:message.content}))),...request??{}})}).pipe((0,switchMap.w)((response=>response.ok?response.json():(0,throwError._)((()=>`Error ${response.status}`)))))}chatStream(messages,request){return new Observable.y((subscriber=>{const ctrl=new AbortController;return(0,esm_fetch.L)(chatCompletionsUrl(this.copilot),{method:"POST",headers:{"Content-Type":"application/json",...this.requestOptions()?.headers??{}},body:JSON.stringify({model:DefaultModel,messages:messages.map((message=>({role:message.role,content:message.content}))),...request??{},stream:!0}),signal:ctrl.signal,onopen:response=>(0,asyncToGenerator.Z)((function*(){response.ok&&response.headers.get("content-type")===esm_fetch.a||(response.status>=400&&response.status<500&&response.status,subscriber.error(response.status))}))(),onmessage(msg){if("FatalError"===msg.event)throw new Error(msg.data);if('"[DONE]"'===msg.data||"[DONE]"===msg.data)subscriber.complete();else try{subscriber.next(JSON.parse(msg.data))}catch(err){subscriber.error(err)}},onclose(){subscriber.complete()},onerror(err){subscriber.error(err),ctrl.abort()}}),()=>ctrl.abort()}))}getModels(){return(0,dom_fetch.U)(function modelsUrl(copilot){const apiHost=copilot.apiHost||AI_PROVIDERS[copilot.provider]?.apiHost,modelsUrl=AI_PROVIDERS[copilot.provider]?.modelsUrl;return copilot.modelsUrl||(apiHost?.endsWith("/")?apiHost.slice(0,apiHost.length-1)+modelsUrl:apiHost+modelsUrl)}(this.copilot),{method:"GET",headers:{"Content-Type":"application/json",...this.requestOptions()?.headers??{}}}).pipe((0,switchMap.w)((response=>response.ok?response.json():(0,of.of)({error:!0,message:`Error ${response.status}`}))),(0,catchError.K)((err=>(console.error(err),(0,of.of)({error:!0,message:err.message})))))}chat({sendExtraMessageFields,onResponse,onFinish,onError,appendMessage,credentials,headers,body,generateId=dist.x0,abortController,model}={model:DefaultModel},chatRequest,{options,data}={}){var _this2=this;return(0,asyncToGenerator.Z)((function*(){const callChatApiFuc=_this2.copilot.provider===AiProvider.DashScope?callChatApi:call_chat_api_callChatApi;return yield callChatApiFuc({api:chatCompletionsUrl(_this2.copilot),model,chatRequest,messages:sendExtraMessageFields?chatRequest.messages:chatRequest.messages.map((({role,content,name,function_call})=>({role,content,...void 0!==name&&{name},...void 0!==function_call&&{function_call}}))),body:{data:chatRequest.data,...body,...options?.body??{}},headers:{..._this2.requestOptions()?.headers??{},...headers,...options?.headers??{}},abortController:()=>abortController,credentials,onResponse,onUpdate(merged,data){console.log("onUpdate",merged,data)},onFinish,appendMessage,restoreMessagesOnFailure(){},generateId})}))()}}!function(CopilotAgentType){CopilotAgentType.Default="Default",CopilotAgentType.OpenAI="OpenAI",CopilotAgentType.LangChain="LangChain"}(CopilotAgentType||(CopilotAgentType={}));function processChatStream(_x){return _processChatStream.apply(this,arguments)}function _processChatStream(){return(_processChatStream=(0,asyncToGenerator.Z)((function*({getStreamedResponse,experimental_onFunctionCall,experimental_onToolCall,updateChatRequest,getCurrentMessages,conversationId}){let retry=0;for(;;){const messagesAndDataOrJustMessage=yield getStreamedResponse();if("messages"in messagesAndDataOrJustMessage){let hasFollowingResponse=!1;for(const message of messagesAndDataOrJustMessage.messages)if(void 0!==message.function_call&&"string"!=typeof message.function_call||void 0!==message.tool_calls&&"string"!=typeof message.tool_calls){if(hasFollowingResponse=!0,experimental_onFunctionCall){const functionCall=message.function_call;if("object"!=typeof functionCall){console.warn("experimental_onFunctionCall should not be defined when using tools");continue}const functionCallResponse=yield experimental_onFunctionCall(getCurrentMessages(),functionCall,conversationId);if(void 0===functionCallResponse){hasFollowingResponse=!1;break}if("string"==typeof functionCallResponse){updateChatRequest({messages:[{...message,content:functionCallResponse}]});break}functionCallResponse&&updateChatRequest(functionCallResponse)}if(experimental_onToolCall){const toolCalls=message.tool_calls;if(!Array.isArray(toolCalls)||toolCalls.some((toolCall=>"object"!=typeof toolCall))){console.warn("experimental_onToolCall should not be defined when using tools");continue}const toolCallResponse=yield experimental_onToolCall(getCurrentMessages(),toolCalls);if(void 0===toolCallResponse){hasFollowingResponse=!1;break}if("string"==typeof toolCallResponse){hasFollowingResponse=!1;break}toolCallResponse&&updateChatRequest(toolCallResponse)}}if(!hasFollowingResponse)break}else{const streamedResponseMessage=messagesAndDataOrJustMessage;if(!(void 0!==streamedResponseMessage.function_call&&"string"!=typeof streamedResponseMessage.function_call||void 0!==streamedResponseMessage.tool_calls&&"string"!=typeof streamedResponseMessage.tool_calls))return messagesAndDataOrJustMessage;if(experimental_onFunctionCall){const functionCall=streamedResponseMessage.function_call;if("object"!=typeof functionCall){console.warn("experimental_onFunctionCall should not be defined when using tools");continue}const functionCallResponse=yield experimental_onFunctionCall(getCurrentMessages(),functionCall,conversationId);if(void 0===functionCallResponse)break;if("string"==typeof functionCallResponse)return{...streamedResponseMessage,content:functionCallResponse};if(retry>3)break;retry+=1,functionCallResponse&&(fixFunctionCallArguments(functionCallResponse),updateChatRequest(functionCallResponse))}if(experimental_onToolCall){const toolCalls=streamedResponseMessage.tool_calls;if("object"!=typeof toolCalls){console.warn("experimental_onToolCall should not be defined when using functions");continue}const toolCallResponse=yield experimental_onToolCall(getCurrentMessages(),toolCalls);if(void 0===toolCallResponse)break;if("string"==typeof toolCallResponse){updateChatRequest({messages:[{...streamedResponseMessage,content:toolCallResponse}]});break}toolCallResponse&&(fixFunctionCallArguments(toolCallResponse),updateChatRequest(toolCallResponse))}function fixFunctionCallArguments(response){for(const message of response.messages){if(void 0!==message.tool_calls)for(const toolCall of message.tool_calls)"object"==typeof toolCall&&toolCall.function.arguments&&"string"!=typeof toolCall.function.arguments&&(toolCall.function.arguments=JSON.stringify(toolCall.function.arguments));void 0!==message.function_call&&"object"==typeof message.function_call&&message.function_call.arguments&&"string"!=typeof message.function_call.arguments&&(message.function_call.arguments=JSON.stringify(message.function_call.arguments))}}}}}))).apply(this,arguments)}function entryPointsToFunctionCallHandler(entryPoints){return function(){var _ref=(0,asyncToGenerator.Z)((function*(chatMessages,functionCall,conversationId){const entrypointsByFunctionName={};for(const entryPoint of entryPoints)entrypointsByFunctionName[entryPoint.name]=entryPoint;const entryPointFunction=entrypointsByFunctionName[functionCall.name||""];if(entryPointFunction){let parsedFunctionCallArguments=[];functionCall.arguments&&(parsedFunctionCallArguments=dist_default().parse(functionCall.arguments));const paramsInCorrectOrder=[];for(const arg of entryPointFunction.argumentAnnotations)paramsInCorrectOrder.push(parsedFunctionCallArguments[arg.name]);const result=yield entryPointFunction.implementation(...paramsInCorrectOrder,{conversationId,messages:chatMessages});if(!result)return;if("string"==typeof result)return result;return{messages:[...chatMessages,{...result,id:(0,dist.x0)(),name:functionCall.name,role:"function"}]}}}));return function(_x,_x2,_x3){return _ref.apply(this,arguments)}}()}function entryPointsToChatCompletionFunctions(entryPoints){return entryPoints.map(annotatedFunctionToChatCompletionFunction)}function annotatedFunctionToChatCompletionFunction(annotatedFunction){const parameters={};for(const arg of annotatedFunction.argumentAnnotations){const{name,required,...forwardedArgs}=arg;parameters[arg.name]=forwardedArgs}const requiredParameterNames=[];for(const arg of annotatedFunction.argumentAnnotations)arg.required&&requiredParameterNames.push(arg.name);return{name:annotatedFunction.name,description:annotatedFunction.description,parameters:{type:"object",properties:parameters,required:requiredParameterNames}}}__webpack_require__("./node_modules/zod-to-json-schema/dist/esm/index.js")}}]);