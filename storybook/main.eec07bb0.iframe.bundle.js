(self.webpackChunkocap=self.webpackChunkocap||[]).push([[179],{"./packages/angular/.storybook/peview.scss?ngGlobalStyle":()=>{},"./packages/angular/_index.scss?ngGlobalStyle":()=>{},"./packages/angular/.storybook/preview.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>_storybook_preview});var angular=__webpack_require__("./node_modules/@storybook/addon-docs/angular/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-themes/dist/index.mjs");const documentation_namespaceObject=JSON.parse('{"pipes":[],"interfaces":[],"injectables":[{"name":"StorybookCopilotEngine","id":"injectable-StorybookCopilotEngine-3a1e54ba15d74cf267389c588e5cebc27fc092783c334a5b7201a1457b95f08926a6ba1358e77e9eb4d66012404e87270a9a85f8c2d18a7746f614299720021b","file":"packages/angular/copilot/stories/chat.stories.ts","properties":[],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { CommonModule } from \'@angular/common\'\\nimport { provideHttpClient } from \'@angular/common/http\'\\nimport { ChangeDetectionStrategy, Component, Injectable, importProvidersFrom } from \'@angular/core\'\\nimport { provideAnimations } from \'@angular/platform-browser/animations\'\\nimport {\\n  AIOptions,\\n  AnnotatedFunction,\\n  CopilotChatConversation,\\n  CopilotChatMessage,\\n  CopilotChatMessageRoleEnum,\\n  CopilotChatOptions,\\n  CopilotCommand,\\n  CopilotContext,\\n  CopilotEngine,\\n  CopilotService\\n} from \'@metad/copilot\'\\nimport { OcapCoreModule } from \'@metad/ocap-angular/core\'\\nimport { Meta, StoryObj, applicationConfig, argsToTemplate, moduleMetadata } from \'@storybook/angular\'\\nimport { nanoid } from \'nanoid\'\\nimport { provideMarkdown } from \'ngx-markdown\'\\nimport { provideLogger, provideTranslate, zhHansLanguage } from \'../../mock/\'\\nimport { NgmCopilotChatComponent } from \'../chat/chat.component\'\\nimport { injectCopilotCommand } from \'../hooks/\'\\nimport { NgmCopilotEngineService, NgmCopilotService } from \'../services\'\\nimport { NgmStoryBookCopilotService } from \'./copilot.service\'\\n\\n@Injectable()\\nclass StorybookCopilotEngine extends NgmCopilotEngineService {}\\n\\n@Component({\\n  standalone: true,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  selector: \'ngm-sb-copilot-user\',\\n  template: `<h1>Create a user</h1>`,\\n  styles: [\'\'],\\n  imports: [CommonModule]\\n})\\nexport class NgmSBCopilotUserComponent {\\n  #myCommand = injectCopilotCommand({\\n    name: \'c\',\\n    description: \'Create a user\',\\n    examples: [`Create a user name Tiven, age 18`],\\n    systemPrompt: async () => {\\n      return `Create a user by prompt`\\n    },\\n    implementation: async (args) => {\\n      console.log(`Created user`)\\n      return {\\n        id: nanoid(),\\n        content: \'创建执行成功\',\\n        role: CopilotChatMessageRoleEnum.Info\\n      }\\n    }\\n  })\\n\\n  #saveCommand = injectCopilotCommand({\\n    name: \'s\',\\n    description: \'Save the user\',\\n    examples: [`Save a user name Tiven, age 18`],\\n    systemPrompt: async () => {\\n      return `Save a user by prompt`\\n    }\\n  })\\n\\n  #noExampleCommand = injectCopilotCommand({\\n    name: \'n\',\\n    description: \'New a user\',\\n    systemPrompt: async () => {\\n      return `New a user by prompt`\\n    }\\n  })\\n}\\n\\nexport default {\\n  title: \'Copilot/Chat\',\\n  component: NgmCopilotChatComponent,\\n  decorators: [\\n    applicationConfig({\\n      providers: [\\n        provideAnimations(),\\n        provideHttpClient(),\\n        provideTranslate(zhHansLanguage),\\n        importProvidersFrom(OcapCoreModule),\\n        provideLogger(),\\n        provideMarkdown()\\n      ]\\n    }),\\n    moduleMetadata({\\n      imports: [CommonModule, NgmCopilotChatComponent, NgmSBCopilotUserComponent],\\n      providers: [\\n        {\\n          provide: NgmCopilotService,\\n          useClass: NgmStoryBookCopilotService\\n        },\\n        {\\n          provide: NgmCopilotEngineService,\\n          useClass: StorybookCopilotEngine\\n        }\\n      ]\\n    })\\n  ]\\n} as Meta<NgmCopilotChatComponent>\\n\\ntype Story = StoryObj<NgmCopilotChatComponent>\\n\\nexport const Primary: Story = {\\n  args: {\\n    welcomeTitle: \'Welcome to My AI Copilot\'\\n  }\\n}\\n\\nexport const Size: Story = {\\n  render: (args) => ({\\n    props: args,\\n    template: `<ngm-copilot-chat ${argsToTemplate(\\n      args\\n    )} class=\\"h-[500px] w-[300px] shadow-lg rounded-lg m-4\\" style=\\"height: 500px;\\"></ngm-copilot-chat>`\\n  }),\\n  args: {\\n    welcomeTitle: \'Welcome to My AI Copilot\'\\n  },\\n  parameters: {\\n    background: { default: \'dark\' },\\n    actions: { argTypesRegex: \'^conversations.*\' }\\n  }\\n}\\n\\nexport const CustomNgmCopilotEngine: Story = {\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n<div>\\n  <ngm-sb-copilot-user></ngm-sb-copilot-user>\\n  <ngm-copilot-chat ${argsToTemplate(\\n    args\\n  )} class=\\"h-[500px] w-[300px] shadow-lg rounded-lg m-4\\" style=\\"height: 500px;\\"></ngm-copilot-chat>\\n</div>`\\n  }),\\n  args: {\\n    welcomeTitle: \'Welcome to My AI Copilot\'\\n  }\\n}\\n\\nclass StorybookCustomCopilotEngine implements CopilotEngine {\\n  conversations(): CopilotChatConversation<CopilotChatMessage>[] {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  getCommandWithContext(name: string): { command: CopilotCommand<any[]>; context: CopilotContext } {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  updateConversations?(\\n    fn: (conversations: CopilotChatConversation<CopilotChatMessage>[]) => CopilotChatConversation<CopilotChatMessage>[]\\n  ): void {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  updateConversation?(\\n    id: string,\\n    fn: (conversation: CopilotChatConversation<CopilotChatMessage>) => CopilotChatConversation<CopilotChatMessage>\\n  ): void {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  updateLastConversation?(\\n    fn: (conversation: CopilotChatConversation<CopilotChatMessage>) => CopilotChatConversation<CopilotChatMessage>\\n  ): void {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  updateAiOptions(options: Partial<AIOptions>): void {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  executeCommandSuggestion(\\n    input: string,\\n    options: { command: CopilotCommand<any[]>; context: CopilotContext }\\n  ): Promise<string> {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  chat(prompt: string, options?: CopilotChatOptions): Promise<string | void | CopilotChatMessage> {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  messages(): CopilotChatMessage[] {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  copilot?: CopilotService\\n  dropCopilot?: (event: any) => void\\n  setEntryPoint?: (id: string, entryPoint: AnnotatedFunction<any[]>) => void\\n  removeEntryPoint?: (id: string) => void\\n  registerCommand?(area: string, command: CopilotCommand<any[]>): void {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  unregisterCommand?(area: string, name: string): void {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  commands?: () => CopilotCommand<any[]>[]\\n  deleteMessage(message: CopilotChatMessage): void {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  name?: string = \'Storybook custom engine\'\\n  aiOptions: AIOptions = {\\n    model: \'\',\\n    messages: []\\n  }\\n  systemPrompt?: string\\n  prompts: string[] = [\'/d {name} {age}\']\\n  // conversations: Array<CopilotChatMessage[]> = []\\n  placeholder?: string\\n\\n  upsertMessage(message: CopilotChatMessage): void {}\\n  clear() {}\\n}\\n\\nexport const CustomEngine: Story = {\\n  args: {\\n    copilotEngine: new StorybookCustomCopilotEngine()\\n  }\\n}\\n","extends":["NgmCopilotEngineService"],"type":"injectable"}],"guards":[],"interceptors":[],"classes":[{"name":"CustomLoader","id":"class-CustomLoader-d092cc4206ff760cd16a89087fbec1a87c13e72e8679228a6dfa18503dbc29ab317a38eb221ae47455a636713eea3481f747888f9d82251ac93b6cb0c113f812","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { CommonModule } from \'@angular/common\'\\nimport { importProvidersFrom } from \'@angular/core\'\\nimport { provideAnimations } from \'@angular/platform-browser/animations\'\\nimport {\\n  DisplayDensity,\\n  NgmDSCoreService,\\n  NgmMissingTranslationHandler,\\n  OCAP_AGENT_TOKEN,\\n  OCAP_DATASOURCE_TOKEN,\\n  OCAP_MODEL_TOKEN,\\n  OcapCoreModule\\n} from \'@metad/ocap-angular/core\'\\nimport { AgentType, C_MEASURES, DataSource, Schema, Type } from \'@metad/ocap-core\'\\nimport { MissingTranslationHandler, TranslateLoader, TranslateModule } from \'@ngx-translate/core\'\\nimport { Meta, applicationConfig, moduleMetadata } from \'@storybook/angular\'\\nimport { NgxEchartsModule } from \'ngx-echarts\'\\nimport { Observable, of } from \'rxjs\'\\nimport { ZhHans } from \'../i18n\'\\nimport { CUBE_SALES_ORDER, MockAgent } from \'../mock/agent-mock.service\'\\nimport { AnalyticalCardComponent } from \'./analytical-card.component\'\\nimport { AnalyticalCardModule } from \'./analytical-card.module\'\\n\\nclass CustomLoader implements TranslateLoader {\\n  getTranslation(lang: string): Observable<any> {\\n    return of(ZhHans)\\n  }\\n}\\n\\nexport default {\\n  title: \'Story/AnalyticalCard\',\\n  component: AnalyticalCardComponent,\\n  decorators: [\\n    applicationConfig({\\n      providers: [\\n        provideAnimations(),\\n        importProvidersFrom(\\n          TranslateModule.forRoot({\\n            missingTranslationHandler: {\\n              provide: MissingTranslationHandler,\\n              useClass: NgmMissingTranslationHandler\\n            },\\n            loader: { provide: TranslateLoader, useClass: CustomLoader },\\n            defaultLanguage: \'zh-Hans\'\\n          })\\n        ),\\n        importProvidersFrom(OcapCoreModule),\\n        importProvidersFrom(\\n          NgxEchartsModule.forRoot({\\n            echarts: () => import(\'echarts\')\\n          })\\n        )\\n      ]\\n    }),\\n    moduleMetadata({\\n      imports: [CommonModule, AnalyticalCardModule],\\n      providers: [\\n        NgmDSCoreService,\\n        {\\n          provide: OCAP_AGENT_TOKEN,\\n          useClass: MockAgent,\\n          multi: true\\n        },\\n        {\\n          provide: OCAP_DATASOURCE_TOKEN,\\n          useValue: {\\n            type: \'SQL\',\\n            factory: async (): Promise<Type<DataSource>> => {\\n              const { SQLDataSource } = await import(\'@metad/ocap-sql\')\\n              return SQLDataSource\\n            }\\n          },\\n          multi: true\\n        },\\n        {\\n          provide: OCAP_MODEL_TOKEN,\\n          useValue: {\\n            name: \'Sales\',\\n            type: \'SQL\',\\n            agentType: AgentType.Browser,\\n            settings: {\\n              ignoreUnknownProperty: true\\n            },\\n            schema: {\\n              cubes: [\\n                CUBE_SALES_ORDER,\\n                {\\n                  ...CUBE_SALES_ORDER,\\n                  name: \'SalesOrder10s\'\\n                },\\n                {\\n                  ...CUBE_SALES_ORDER,\\n                  name: \'Empty\'\\n                }\\n              ]\\n            } as Schema\\n          },\\n          multi: true\\n        }\\n      ]\\n    })\\n  ]\\n} as Meta<AnalyticalCardComponent>\\n\\nexport const Primary = {\\n  args: {\\n    title: \'Primary Analytical Card\',\\n    appearance: {\\n      // displayBehaviour: DisplayBehaviour.auto,\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}\\n\\nexport const Appearance = {\\n  args: {\\n    title: \'Display Density Compact\',\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}\\n\\nexport const Loading = {\\n  args: {\\n    title: \'Loading\',\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder10s\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}\\n\\nexport const HideButtons = {\\n  args: {\\n    title: \'Hide Buttons\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}\\n\\nexport const Empty = {\\n  args: {\\n    title: \'Empty Data\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'Empty\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}\\n\\nexport const Error = {\\n  args: {\\n    title: \'Error\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales1\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}\\n\\nexport const SetOptionError = {\\n  args: {\\n    title: \'SetOption Error\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          },\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}\\n\\nexport const DrillDimensions = {\\n  args: {\\n    title: \'Drill Dimensions\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      },\\n      presentationVariant: {\\n        groupBy: [\\n          {\\n            dimension: \'[Department]\',\\n            level: \'[Department].[Department]\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}\\n\\n\\nexport const ChartTypes = {\\n  args: {\\n    title: \'Chart Types\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      },\\n      presentationVariant: {\\n        groupBy: [\\n          {\\n            dimension: \'[Department]\',\\n            level: \'[Department].[Department]\'\\n          }\\n        ]\\n      }\\n    },\\n    chartSettings: {\\n      chartTypes: [\\n        {\\n          type: \'Line\'\\n        }\\n      ]\\n    },\\n    options: {}\\n  }\\n}\\n","inputsClass":[],"outputsClass":[],"properties":[],"methods":[{"name":"getTranslation","args":[{"name":"lang","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"lang","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"hostBindings":[],"hostListeners":[],"implements":["TranslateLoader"]},{"name":"StorybookCustomCopilotEngine","id":"class-StorybookCustomCopilotEngine-3a1e54ba15d74cf267389c588e5cebc27fc092783c334a5b7201a1457b95f08926a6ba1358e77e9eb4d66012404e87270a9a85f8c2d18a7746f614299720021b","file":"packages/angular/copilot/stories/chat.stories.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { CommonModule } from \'@angular/common\'\\nimport { provideHttpClient } from \'@angular/common/http\'\\nimport { ChangeDetectionStrategy, Component, Injectable, importProvidersFrom } from \'@angular/core\'\\nimport { provideAnimations } from \'@angular/platform-browser/animations\'\\nimport {\\n  AIOptions,\\n  AnnotatedFunction,\\n  CopilotChatConversation,\\n  CopilotChatMessage,\\n  CopilotChatMessageRoleEnum,\\n  CopilotChatOptions,\\n  CopilotCommand,\\n  CopilotContext,\\n  CopilotEngine,\\n  CopilotService\\n} from \'@metad/copilot\'\\nimport { OcapCoreModule } from \'@metad/ocap-angular/core\'\\nimport { Meta, StoryObj, applicationConfig, argsToTemplate, moduleMetadata } from \'@storybook/angular\'\\nimport { nanoid } from \'nanoid\'\\nimport { provideMarkdown } from \'ngx-markdown\'\\nimport { provideLogger, provideTranslate, zhHansLanguage } from \'../../mock/\'\\nimport { NgmCopilotChatComponent } from \'../chat/chat.component\'\\nimport { injectCopilotCommand } from \'../hooks/\'\\nimport { NgmCopilotEngineService, NgmCopilotService } from \'../services\'\\nimport { NgmStoryBookCopilotService } from \'./copilot.service\'\\n\\n@Injectable()\\nclass StorybookCopilotEngine extends NgmCopilotEngineService {}\\n\\n@Component({\\n  standalone: true,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  selector: \'ngm-sb-copilot-user\',\\n  template: `<h1>Create a user</h1>`,\\n  styles: [\'\'],\\n  imports: [CommonModule]\\n})\\nexport class NgmSBCopilotUserComponent {\\n  #myCommand = injectCopilotCommand({\\n    name: \'c\',\\n    description: \'Create a user\',\\n    examples: [`Create a user name Tiven, age 18`],\\n    systemPrompt: async () => {\\n      return `Create a user by prompt`\\n    },\\n    implementation: async (args) => {\\n      console.log(`Created user`)\\n      return {\\n        id: nanoid(),\\n        content: \'创建执行成功\',\\n        role: CopilotChatMessageRoleEnum.Info\\n      }\\n    }\\n  })\\n\\n  #saveCommand = injectCopilotCommand({\\n    name: \'s\',\\n    description: \'Save the user\',\\n    examples: [`Save a user name Tiven, age 18`],\\n    systemPrompt: async () => {\\n      return `Save a user by prompt`\\n    }\\n  })\\n\\n  #noExampleCommand = injectCopilotCommand({\\n    name: \'n\',\\n    description: \'New a user\',\\n    systemPrompt: async () => {\\n      return `New a user by prompt`\\n    }\\n  })\\n}\\n\\nexport default {\\n  title: \'Copilot/Chat\',\\n  component: NgmCopilotChatComponent,\\n  decorators: [\\n    applicationConfig({\\n      providers: [\\n        provideAnimations(),\\n        provideHttpClient(),\\n        provideTranslate(zhHansLanguage),\\n        importProvidersFrom(OcapCoreModule),\\n        provideLogger(),\\n        provideMarkdown()\\n      ]\\n    }),\\n    moduleMetadata({\\n      imports: [CommonModule, NgmCopilotChatComponent, NgmSBCopilotUserComponent],\\n      providers: [\\n        {\\n          provide: NgmCopilotService,\\n          useClass: NgmStoryBookCopilotService\\n        },\\n        {\\n          provide: NgmCopilotEngineService,\\n          useClass: StorybookCopilotEngine\\n        }\\n      ]\\n    })\\n  ]\\n} as Meta<NgmCopilotChatComponent>\\n\\ntype Story = StoryObj<NgmCopilotChatComponent>\\n\\nexport const Primary: Story = {\\n  args: {\\n    welcomeTitle: \'Welcome to My AI Copilot\'\\n  }\\n}\\n\\nexport const Size: Story = {\\n  render: (args) => ({\\n    props: args,\\n    template: `<ngm-copilot-chat ${argsToTemplate(\\n      args\\n    )} class=\\"h-[500px] w-[300px] shadow-lg rounded-lg m-4\\" style=\\"height: 500px;\\"></ngm-copilot-chat>`\\n  }),\\n  args: {\\n    welcomeTitle: \'Welcome to My AI Copilot\'\\n  },\\n  parameters: {\\n    background: { default: \'dark\' },\\n    actions: { argTypesRegex: \'^conversations.*\' }\\n  }\\n}\\n\\nexport const CustomNgmCopilotEngine: Story = {\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n<div>\\n  <ngm-sb-copilot-user></ngm-sb-copilot-user>\\n  <ngm-copilot-chat ${argsToTemplate(\\n    args\\n  )} class=\\"h-[500px] w-[300px] shadow-lg rounded-lg m-4\\" style=\\"height: 500px;\\"></ngm-copilot-chat>\\n</div>`\\n  }),\\n  args: {\\n    welcomeTitle: \'Welcome to My AI Copilot\'\\n  }\\n}\\n\\nclass StorybookCustomCopilotEngine implements CopilotEngine {\\n  conversations(): CopilotChatConversation<CopilotChatMessage>[] {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  getCommandWithContext(name: string): { command: CopilotCommand<any[]>; context: CopilotContext } {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  updateConversations?(\\n    fn: (conversations: CopilotChatConversation<CopilotChatMessage>[]) => CopilotChatConversation<CopilotChatMessage>[]\\n  ): void {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  updateConversation?(\\n    id: string,\\n    fn: (conversation: CopilotChatConversation<CopilotChatMessage>) => CopilotChatConversation<CopilotChatMessage>\\n  ): void {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  updateLastConversation?(\\n    fn: (conversation: CopilotChatConversation<CopilotChatMessage>) => CopilotChatConversation<CopilotChatMessage>\\n  ): void {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  updateAiOptions(options: Partial<AIOptions>): void {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  executeCommandSuggestion(\\n    input: string,\\n    options: { command: CopilotCommand<any[]>; context: CopilotContext }\\n  ): Promise<string> {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  chat(prompt: string, options?: CopilotChatOptions): Promise<string | void | CopilotChatMessage> {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  messages(): CopilotChatMessage[] {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  copilot?: CopilotService\\n  dropCopilot?: (event: any) => void\\n  setEntryPoint?: (id: string, entryPoint: AnnotatedFunction<any[]>) => void\\n  removeEntryPoint?: (id: string) => void\\n  registerCommand?(area: string, command: CopilotCommand<any[]>): void {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  unregisterCommand?(area: string, name: string): void {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  commands?: () => CopilotCommand<any[]>[]\\n  deleteMessage(message: CopilotChatMessage): void {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  name?: string = \'Storybook custom engine\'\\n  aiOptions: AIOptions = {\\n    model: \'\',\\n    messages: []\\n  }\\n  systemPrompt?: string\\n  prompts: string[] = [\'/d {name} {age}\']\\n  // conversations: Array<CopilotChatMessage[]> = []\\n  placeholder?: string\\n\\n  upsertMessage(message: CopilotChatMessage): void {}\\n  clear() {}\\n}\\n\\nexport const CustomEngine: Story = {\\n  args: {\\n    copilotEngine: new StorybookCustomCopilotEngine()\\n  }\\n}\\n","inputsClass":[],"outputsClass":[],"properties":[{"name":"aiOptions","defaultValue":"{\\n    model: \'\',\\n    messages: []\\n  }","deprecated":false,"deprecationMessage":"","type":"AIOptions","optional":false,"description":"","line":198},{"name":"commands","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"","line":193},{"name":"copilot","deprecated":false,"deprecationMessage":"","type":"CopilotService","optional":true,"description":"","line":183},{"name":"dropCopilot","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"","line":184},{"name":"name","defaultValue":"\'Storybook custom engine\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":197},{"name":"placeholder","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":205},{"name":"prompts","defaultValue":"[\'/d {name} {age}\']","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":203},{"name":"removeEntryPoint","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"","line":186},{"name":"setEntryPoint","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"","line":185},{"name":"systemPrompt","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":202}],"methods":[{"name":"chat","args":[{"name":"prompt","type":"string","deprecated":false,"deprecationMessage":""},{"name":"options","type":"CopilotChatOptions","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"Promise<string | void | CopilotChatMessage>","typeParameters":[],"line":177,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"prompt","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"options","type":"CopilotChatOptions","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"clear","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":208,"deprecated":false,"deprecationMessage":""},{"name":"conversations","args":[],"optional":false,"returnType":"CopilotChatConversation[]","typeParameters":[],"line":146,"deprecated":false,"deprecationMessage":""},{"name":"deleteMessage","args":[{"name":"message","type":"CopilotChatMessage","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":194,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"message","type":"CopilotChatMessage","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"executeCommandSuggestion","args":[{"name":"input","type":"string","deprecated":false,"deprecationMessage":""},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Promise<string>","typeParameters":[],"line":171,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"input","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getCommandWithContext","args":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"literal type","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"messages","args":[],"optional":false,"returnType":"CopilotChatMessage[]","typeParameters":[],"line":180,"deprecated":false,"deprecationMessage":""},{"name":"registerCommand","args":[{"name":"area","type":"string","deprecated":false,"deprecationMessage":""},{"name":"command","type":"CopilotCommand<any[]>","deprecated":false,"deprecationMessage":""}],"optional":true,"returnType":"void","typeParameters":[],"line":187,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"area","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"command","type":"CopilotCommand<any[]>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"unregisterCommand","args":[{"name":"area","type":"string","deprecated":false,"deprecationMessage":""},{"name":"name","type":"string","deprecated":false,"deprecationMessage":""}],"optional":true,"returnType":"void","typeParameters":[],"line":190,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"area","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"name","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"updateAiOptions","args":[{"name":"options","type":"Partial<AIOptions>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":168,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"options","type":"Partial<AIOptions>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"updateConversation","args":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":""},{"name":"fn","type":"function","deprecated":false,"deprecationMessage":"","function":[{"name":"conversation","type":"CopilotChatConversation<CopilotChatMessage>","deprecated":false,"deprecationMessage":""}]}],"optional":true,"returnType":"void","typeParameters":[],"line":157,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"fn","type":"function","deprecated":false,"deprecationMessage":"","function":[{"name":"conversation","type":"CopilotChatConversation<CopilotChatMessage>","deprecated":false,"deprecationMessage":""}],"tagName":{"text":"param"}}]},{"name":"updateConversations","args":[{"name":"fn","type":"function","deprecated":false,"deprecationMessage":"","function":[{"name":"conversations","type":"CopilotChatConversation<CopilotChatMessage>[]","deprecated":false,"deprecationMessage":""}]}],"optional":true,"returnType":"void","typeParameters":[],"line":152,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"fn","type":"function","deprecated":false,"deprecationMessage":"","function":[{"name":"conversations","type":"CopilotChatConversation<CopilotChatMessage>[]","deprecated":false,"deprecationMessage":""}],"tagName":{"text":"param"}}]},{"name":"updateLastConversation","args":[{"name":"fn","type":"function","deprecated":false,"deprecationMessage":"","function":[{"name":"conversation","type":"CopilotChatConversation<CopilotChatMessage>","deprecated":false,"deprecationMessage":""}]}],"optional":true,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"fn","type":"function","deprecated":false,"deprecationMessage":"","function":[{"name":"conversation","type":"CopilotChatConversation<CopilotChatMessage>","deprecated":false,"deprecationMessage":""}],"tagName":{"text":"param"}}]},{"name":"upsertMessage","args":[{"name":"message","type":"CopilotChatMessage","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":207,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"message","type":"CopilotChatMessage","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"hostBindings":[],"hostListeners":[],"implements":["CopilotEngine"]}],"directives":[],"components":[{"name":"DragComponent","id":"component-DragComponent-787db0a8bd8a8a68660b3d77d80b3100e1e1bf01f1542b99692ea4007b3ece7cd5f7d02ba83ff9f29969e2db05903af90b7d8f73541c485f808f45ae8f414dba","file":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ngm-story-component-drag","styleUrls":[],"styles":["\\n      .mat-drawer-container {\\n        height: 500px;\\n      }\\n    "],"template":"<mat-drawer-container class=\\"example-container\\" autosize cdkDropListGroup>    <mat-drawer mode=\\"side\\" opened cdkDropList>\\n      <ngm-entity-schema [dataSettings]=\\"dataSettings\\"></ngm-entity-schema>\\n      <ngm-entity-schema\\n        [dataSettings]=\\"{\\n          dataSource: dataSettings.dataSource,\\n          entitySet: \'sales_fact\'\\n        }\\"\\n      ></ngm-entity-schema>\\n    </mat-drawer>\\n    <mat-drawer-content cdkDropList [cdkDropListData]=\\"drops\\" (cdkDropListDropped)=\\"drop($event)\\">\\n      <ul>\\n        <li *ngFor=\\"let item of drops\\">\\n          {{ item.entity }}/{{ item.name || item.raw.memberKey }}/{{ item.type }}/{{ item.dataType }}/{{ item.dbType }}\\n        </li>\\n      </ul>\\n    </mat-drawer-content>\\n  </mat-drawer-container>","templateUrl":[],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"dataSettings","deprecated":false,"deprecationMessage":"","line":52,"type":"DataSettings","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"drops","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":54}],"methodsClass":[{"name":"drop","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":56,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"MatSidenavModule","type":"module"},{"name":"DragDropModule","type":"module"},{"name":"NgmEntitySchemaComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { DragDropModule } from \'@angular/cdk/drag-drop\'\\nimport { CommonModule } from \'@angular/common\'\\nimport { Component, Input } from \'@angular/core\'\\nimport { MatSidenavModule } from \'@angular/material/sidenav\'\\nimport { BrowserAnimationsModule, provideAnimations } from \'@angular/platform-browser/animations\'\\nimport {\\n  NgmDSCoreService,\\n  OCAP_AGENT_TOKEN,\\n  OCAP_DATASOURCE_TOKEN,\\n  OCAP_MODEL_TOKEN,\\n  provideOcapCore\\n} from \'@metad/ocap-angular/core\'\\nimport { provideTranslate } from \'@metad/ocap-angular/mock\'\\nimport { AgentType, DataSettings, DataSource, Type } from \'@metad/ocap-core\'\\nimport { Meta, StoryObj, applicationConfig, moduleMetadata } from \'@storybook/angular\'\\nimport { CUBE_SALES_ORDER, MockAgent } from \'../../mock/agent-mock.service\'\\nimport { NgmEntitySchemaComponent } from \'./entity-schema.component\'\\nimport { provideHttpClient } from \'@angular/common/http\'\\nimport { EntityCapacity } from \'./types\'\\n\\n@Component({\\n  standalone: true,\\n  imports: [CommonModule, MatSidenavModule, DragDropModule, NgmEntitySchemaComponent],\\n  selector: \'ngm-story-component-drag\',\\n  template: `<mat-drawer-container class=\\"example-container\\" autosize cdkDropListGroup>\\n    <mat-drawer mode=\\"side\\" opened cdkDropList>\\n      <ngm-entity-schema [dataSettings]=\\"dataSettings\\"></ngm-entity-schema>\\n      <ngm-entity-schema\\n        [dataSettings]=\\"{\\n          dataSource: dataSettings.dataSource,\\n          entitySet: \'sales_fact\'\\n        }\\"\\n      ></ngm-entity-schema>\\n    </mat-drawer>\\n    <mat-drawer-content cdkDropList [cdkDropListData]=\\"drops\\" (cdkDropListDropped)=\\"drop($event)\\">\\n      <ul>\\n        <li *ngFor=\\"let item of drops\\">\\n          {{ item.entity }}/{{ item.name || item.raw.memberKey }}/{{ item.type }}/{{ item.dataType }}/{{ item.dbType }}\\n        </li>\\n      </ul>\\n    </mat-drawer-content>\\n  </mat-drawer-container>`,\\n  styles: [\\n    `\\n      .mat-drawer-container {\\n        height: 500px;\\n      }\\n    `\\n  ]\\n})\\nclass DragComponent {\\n  @Input() dataSettings: DataSettings\\n\\n  drops = []\\n\\n  drop(event) {\\n    this.drops.push(event.item.data)\\n  }\\n}\\n\\nconst meta: Meta<NgmEntitySchemaComponent> = {\\n  title: \'Entity/EntitySchema\',\\n  component: NgmEntitySchemaComponent,\\n  decorators: [\\n    applicationConfig({\\n      providers: [\\n        provideAnimations(),\\n        provideTranslate(),\\n        provideHttpClient(),\\n        provideOcapCore(),\\n        {\\n          provide: OCAP_AGENT_TOKEN,\\n          useClass: MockAgent,\\n          multi: true\\n        },\\n        {\\n          provide: OCAP_DATASOURCE_TOKEN,\\n          useValue: {\\n            type: \'SQL\',\\n            factory: async (): Promise<Type<DataSource>> => {\\n              const { SQLDataSource } = await import(\'@metad/ocap-sql\')\\n              return SQLDataSource\\n            }\\n          },\\n          multi: true\\n        },\\n        {\\n          provide: OCAP_MODEL_TOKEN,\\n          useValue: {\\n            name: \'Sales\',\\n            type: \'SQL\',\\n            agentType: AgentType.Browser,\\n            settings: {\\n              ignoreUnknownProperty: true\\n            },\\n            schema: {\\n              cubes: [CUBE_SALES_ORDER]\\n            }\\n          },\\n          multi: true\\n        }\\n      ]\\n    }),\\n    moduleMetadata({\\n      imports: [BrowserAnimationsModule, MatSidenavModule, DragDropModule, NgmEntitySchemaComponent, DragComponent],\\n      providers: [NgmDSCoreService]\\n    })\\n  ]\\n}\\n\\nexport default meta\\n\\ntype Story = StoryObj<NgmEntitySchemaComponent>\\n\\nexport const Primary: Story = {\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n  }\\n}\\n\\nexport const SelectedHierarchy = {\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    selectedHierarchy: \'[Product]\'\\n  }\\n}\\n\\nexport const Capacity = {\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    capacities: [\\n      EntityCapacity.Dimension,\\n      EntityCapacity.Measure,\\n      EntityCapacity.Calculation,\\n      EntityCapacity.Indicator,\\n    ]\\n  }\\n}\\n\\n// const DragTemplate = (args: DragComponent) => ({\\n//   props: args,\\n//   template: `<ngm-story-component-drag [dataSettings]=\\"dataSettings\\"></ngm-story-component-drag>`,\\n// })\\n\\n// export const DragPrimary = DragTemplate.bind({})\\n// DragPrimary.args = {\\n//   dataSettings: {\\n//     dataSource: \'Sales\',\\n//     entitySet: \'SalesOrder\'\\n//   }\\n// }\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n      .mat-drawer-container {\\n        height: 500px;\\n      }\\n    \\n","extends":[]},{"name":"GridsComponent","id":"component-GridsComponent-5c67294b645c40dcd464003e57198aca335013ce929dc58eab0b5fc65eca7b9d5ce0dc1e250c3134c1d2190630f0a0ac6f2056e76ca615631d184e8a2ef6fd25","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ngm-story-component-switch-grid","styleUrls":[],"styles":[],"template":"<button mat-button (click)=\\"switch()\\">Switch</button>    <ngm-analytical-grid\\n      style=\\"width: 400px; height: 400px;\\"\\n      [dataSettings]=\\"grid.dataSettings\\"\\n      [options]=\\"grid.options\\"\\n    ></ngm-analytical-grid>","templateUrl":[],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"a","defaultValue":"{\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    }\\n  }","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":33},{"name":"b","defaultValue":"{\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Department]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    }\\n  }","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":52},{"name":"grid","defaultValue":"this.a","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":71}],"methodsClass":[{"name":"switch","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":72,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"MatButtonModule","type":"module"},{"name":"AnalyticalGridModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \'@angular/common\'\\nimport { provideHttpClient } from \'@angular/common/http\'\\nimport { Component, importProvidersFrom } from \'@angular/core\'\\nimport { MatButtonModule } from \'@angular/material/button\'\\nimport { provideAnimations } from \'@angular/platform-browser/animations\'\\nimport {\\n  DisplayDensity,\\n  NgmDSCoreService,\\n  OCAP_AGENT_TOKEN,\\n  OCAP_DATASOURCE_TOKEN,\\n  OCAP_MODEL_TOKEN,\\n  OcapCoreModule\\n} from \'@metad/ocap-angular/core\'\\nimport { AgentType, C_MEASURES, DataSource, Type } from \'@metad/ocap-core\'\\nimport { Meta, StoryObj, applicationConfig, moduleMetadata } from \'@storybook/angular\'\\nimport { provideTranslate } from \'../mock\'\\nimport { CUBE_SALES_ORDER, MockAgent } from \'../mock/agent-mock.service\'\\nimport { AnalyticalGridComponent } from \'./analytical-grid.component\'\\nimport { AnalyticalGridModule } from \'./analytical-grid.module\'\\n\\n@Component({\\n  standalone: true,\\n  imports: [CommonModule, MatButtonModule, AnalyticalGridModule],\\n  selector: \'ngm-story-component-switch-grid\',\\n  template: `<button mat-button (click)=\\"switch()\\">Switch</button>\\n    <ngm-analytical-grid\\n      style=\\"width: 400px; height: 400px;\\"\\n      [dataSettings]=\\"grid.dataSettings\\"\\n      [options]=\\"grid.options\\"\\n    ></ngm-analytical-grid> `\\n})\\nclass GridsComponent {\\n  a = {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    }\\n  }\\n  b = {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Department]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    }\\n  }\\n  grid = this.a\\n  switch() {\\n    if (this.grid === this.a) {\\n      this.grid = this.b\\n    } else {\\n      this.grid = this.a\\n    }\\n  }\\n}\\n\\nexport default {\\n  title: \'Story/AnalyticalGrid\',\\n  component: AnalyticalGridComponent,\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideTranslate(), importProvidersFrom(OcapCoreModule)]\\n    }),\\n    moduleMetadata({\\n      imports: [AnalyticalGridModule, GridsComponent],\\n      providers: [\\n        NgmDSCoreService,\\n        {\\n          provide: OCAP_AGENT_TOKEN,\\n          useClass: MockAgent,\\n          multi: true\\n        },\\n        {\\n          provide: OCAP_DATASOURCE_TOKEN,\\n          useValue: {\\n            type: \'SQL\',\\n            factory: async (): Promise<Type<DataSource>> => {\\n              const { SQLDataSource } = await import(\'@metad/ocap-sql\')\\n              return SQLDataSource\\n            }\\n          },\\n          multi: true\\n        },\\n        {\\n          provide: OCAP_MODEL_TOKEN,\\n          useValue: {\\n            name: \'Sales\',\\n            type: \'SQL\',\\n            agentType: AgentType.Browser,\\n            settings: {\\n              ignoreUnknownProperty: true\\n            },\\n            schema: {\\n              cubes: [\\n                CUBE_SALES_ORDER,\\n                {\\n                  ...CUBE_SALES_ORDER,\\n                  name: \'SalesOrder10s\'\\n                }\\n              ]\\n            }\\n          },\\n          multi: true\\n        }\\n      ]\\n    })\\n  ]\\n} as Meta<AnalyticalGridComponent<any>>\\n\\ntype Story = StoryObj<AnalyticalGridComponent<unknown>>\\nconst render = (args) => ({\\n  props: args,\\n  styles: [`.ngm-analytical-grid {height: 400px;}`]\\n})\\n\\nexport const A1Primary: Story = {\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}\\n\\nexport const A2Sticky = {\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      sticky: true\\n    }\\n  }\\n}\\n\\nexport const A3StickyGrid = {\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      sticky: true,\\n      grid: true\\n    }\\n  }\\n}\\n\\nexport const Loading = {\\n  render,\\n  args: {\\n    title: \'Loading Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder10s\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}\\n\\nexport const DensityCompact = {\\n  render,\\n  args: {\\n    title: \'Analytical Grid compact\',\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}\\n\\nexport const DisplayHierarchy = {\\n  render,\\n  args: {\\n    title: \'Analytical Grid Hierarchy\',\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\',\\n            displayHierarchy: true\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}\\n\\nexport const ShowToolbar = {\\n  render,\\n  args: {\\n    title: \'Analytical Grid Show Toolbar\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      showToolbar: true\\n    }\\n  }\\n}\\n\\nexport const Error = {\\n  render,\\n  args: {\\n    title: \'Analytical Grid Error\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales1\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      showToolbar: true\\n    }\\n  }\\n}\\n\\nexport const Paging = {\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      paging: true,\\n      pageSize: 3\\n    }\\n  }\\n}\\n\\nexport const PagingCompact = {\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      paging: true,\\n      pageSize: 3\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    }\\n  }\\n}\\n\\nexport const PagingError = {\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales1\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      paging: true,\\n      pageSize: 3,\\n      showToolbar: true\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    }\\n  }\\n}\\n\\nexport const Sortable = {\\n  render,\\n  args: {\\n    title: \'Sortable\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          },\\n          {\\n            dimension: \'[Department]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      sortable: true\\n    }\\n  }\\n}\\n\\nexport const MultipleMeasures = {\\n  render,\\n  args: {\\n    title: \'Multiple Measures Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: \'[Department]\'\\n          },\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          },\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Cost\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}\\n\\nexport const SwitchTemplate = {\\n  render: (args) => ({\\n    props: args,\\n    template: `<ngm-story-component-switch-grid></ngm-story-component-switch-grid>`\\n  }),\\n  args: {}\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[]},{"name":"NgmSBCopilotUserComponent","id":"component-NgmSBCopilotUserComponent-3a1e54ba15d74cf267389c588e5cebc27fc092783c334a5b7201a1457b95f08926a6ba1358e77e9eb4d66012404e87270a9a85f8c2d18a7746f614299720021b","file":"packages/angular/copilot/stories/chat.stories.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ngm-sb-copilot-user","styleUrls":[],"styles":[""],"template":"<h1>Create a user</h1>","templateUrl":[],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"#myCommand","defaultValue":"injectCopilotCommand({\\n    name: \'c\',\\n    description: \'Create a user\',\\n    examples: [`Create a user name Tiven, age 18`],\\n    systemPrompt: async () => {\\n      return `Create a user by prompt`\\n    },\\n    implementation: async (args) => {\\n      console.log(`Created user`)\\n      return {\\n        id: nanoid(),\\n        content: \'创建执行成功\',\\n        role: CopilotChatMessageRoleEnum.Info\\n      }\\n    }\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":40,"modifierKind":[123]},{"name":"#noExampleCommand","defaultValue":"injectCopilotCommand({\\n    name: \'n\',\\n    description: \'New a user\',\\n    systemPrompt: async () => {\\n      return `New a user by prompt`\\n    }\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":66,"modifierKind":[123]},{"name":"#saveCommand","defaultValue":"injectCopilotCommand({\\n    name: \'s\',\\n    description: \'Save the user\',\\n    examples: [`Save a user name Tiven, age 18`],\\n    systemPrompt: async () => {\\n      return `Save a user by prompt`\\n    }\\n  })","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \'@angular/common\'\\nimport { provideHttpClient } from \'@angular/common/http\'\\nimport { ChangeDetectionStrategy, Component, Injectable, importProvidersFrom } from \'@angular/core\'\\nimport { provideAnimations } from \'@angular/platform-browser/animations\'\\nimport {\\n  AIOptions,\\n  AnnotatedFunction,\\n  CopilotChatConversation,\\n  CopilotChatMessage,\\n  CopilotChatMessageRoleEnum,\\n  CopilotChatOptions,\\n  CopilotCommand,\\n  CopilotContext,\\n  CopilotEngine,\\n  CopilotService\\n} from \'@metad/copilot\'\\nimport { OcapCoreModule } from \'@metad/ocap-angular/core\'\\nimport { Meta, StoryObj, applicationConfig, argsToTemplate, moduleMetadata } from \'@storybook/angular\'\\nimport { nanoid } from \'nanoid\'\\nimport { provideMarkdown } from \'ngx-markdown\'\\nimport { provideLogger, provideTranslate, zhHansLanguage } from \'../../mock/\'\\nimport { NgmCopilotChatComponent } from \'../chat/chat.component\'\\nimport { injectCopilotCommand } from \'../hooks/\'\\nimport { NgmCopilotEngineService, NgmCopilotService } from \'../services\'\\nimport { NgmStoryBookCopilotService } from \'./copilot.service\'\\n\\n@Injectable()\\nclass StorybookCopilotEngine extends NgmCopilotEngineService {}\\n\\n@Component({\\n  standalone: true,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  selector: \'ngm-sb-copilot-user\',\\n  template: `<h1>Create a user</h1>`,\\n  styles: [\'\'],\\n  imports: [CommonModule]\\n})\\nexport class NgmSBCopilotUserComponent {\\n  #myCommand = injectCopilotCommand({\\n    name: \'c\',\\n    description: \'Create a user\',\\n    examples: [`Create a user name Tiven, age 18`],\\n    systemPrompt: async () => {\\n      return `Create a user by prompt`\\n    },\\n    implementation: async (args) => {\\n      console.log(`Created user`)\\n      return {\\n        id: nanoid(),\\n        content: \'创建执行成功\',\\n        role: CopilotChatMessageRoleEnum.Info\\n      }\\n    }\\n  })\\n\\n  #saveCommand = injectCopilotCommand({\\n    name: \'s\',\\n    description: \'Save the user\',\\n    examples: [`Save a user name Tiven, age 18`],\\n    systemPrompt: async () => {\\n      return `Save a user by prompt`\\n    }\\n  })\\n\\n  #noExampleCommand = injectCopilotCommand({\\n    name: \'n\',\\n    description: \'New a user\',\\n    systemPrompt: async () => {\\n      return `New a user by prompt`\\n    }\\n  })\\n}\\n\\nexport default {\\n  title: \'Copilot/Chat\',\\n  component: NgmCopilotChatComponent,\\n  decorators: [\\n    applicationConfig({\\n      providers: [\\n        provideAnimations(),\\n        provideHttpClient(),\\n        provideTranslate(zhHansLanguage),\\n        importProvidersFrom(OcapCoreModule),\\n        provideLogger(),\\n        provideMarkdown()\\n      ]\\n    }),\\n    moduleMetadata({\\n      imports: [CommonModule, NgmCopilotChatComponent, NgmSBCopilotUserComponent],\\n      providers: [\\n        {\\n          provide: NgmCopilotService,\\n          useClass: NgmStoryBookCopilotService\\n        },\\n        {\\n          provide: NgmCopilotEngineService,\\n          useClass: StorybookCopilotEngine\\n        }\\n      ]\\n    })\\n  ]\\n} as Meta<NgmCopilotChatComponent>\\n\\ntype Story = StoryObj<NgmCopilotChatComponent>\\n\\nexport const Primary: Story = {\\n  args: {\\n    welcomeTitle: \'Welcome to My AI Copilot\'\\n  }\\n}\\n\\nexport const Size: Story = {\\n  render: (args) => ({\\n    props: args,\\n    template: `<ngm-copilot-chat ${argsToTemplate(\\n      args\\n    )} class=\\"h-[500px] w-[300px] shadow-lg rounded-lg m-4\\" style=\\"height: 500px;\\"></ngm-copilot-chat>`\\n  }),\\n  args: {\\n    welcomeTitle: \'Welcome to My AI Copilot\'\\n  },\\n  parameters: {\\n    background: { default: \'dark\' },\\n    actions: { argTypesRegex: \'^conversations.*\' }\\n  }\\n}\\n\\nexport const CustomNgmCopilotEngine: Story = {\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n<div>\\n  <ngm-sb-copilot-user></ngm-sb-copilot-user>\\n  <ngm-copilot-chat ${argsToTemplate(\\n    args\\n  )} class=\\"h-[500px] w-[300px] shadow-lg rounded-lg m-4\\" style=\\"height: 500px;\\"></ngm-copilot-chat>\\n</div>`\\n  }),\\n  args: {\\n    welcomeTitle: \'Welcome to My AI Copilot\'\\n  }\\n}\\n\\nclass StorybookCustomCopilotEngine implements CopilotEngine {\\n  conversations(): CopilotChatConversation<CopilotChatMessage>[] {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  getCommandWithContext(name: string): { command: CopilotCommand<any[]>; context: CopilotContext } {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  updateConversations?(\\n    fn: (conversations: CopilotChatConversation<CopilotChatMessage>[]) => CopilotChatConversation<CopilotChatMessage>[]\\n  ): void {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  updateConversation?(\\n    id: string,\\n    fn: (conversation: CopilotChatConversation<CopilotChatMessage>) => CopilotChatConversation<CopilotChatMessage>\\n  ): void {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  updateLastConversation?(\\n    fn: (conversation: CopilotChatConversation<CopilotChatMessage>) => CopilotChatConversation<CopilotChatMessage>\\n  ): void {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  updateAiOptions(options: Partial<AIOptions>): void {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  executeCommandSuggestion(\\n    input: string,\\n    options: { command: CopilotCommand<any[]>; context: CopilotContext }\\n  ): Promise<string> {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  chat(prompt: string, options?: CopilotChatOptions): Promise<string | void | CopilotChatMessage> {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  messages(): CopilotChatMessage[] {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  copilot?: CopilotService\\n  dropCopilot?: (event: any) => void\\n  setEntryPoint?: (id: string, entryPoint: AnnotatedFunction<any[]>) => void\\n  removeEntryPoint?: (id: string) => void\\n  registerCommand?(area: string, command: CopilotCommand<any[]>): void {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  unregisterCommand?(area: string, name: string): void {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  commands?: () => CopilotCommand<any[]>[]\\n  deleteMessage(message: CopilotChatMessage): void {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  name?: string = \'Storybook custom engine\'\\n  aiOptions: AIOptions = {\\n    model: \'\',\\n    messages: []\\n  }\\n  systemPrompt?: string\\n  prompts: string[] = [\'/d {name} {age}\']\\n  // conversations: Array<CopilotChatMessage[]> = []\\n  placeholder?: string\\n\\n  upsertMessage(message: CopilotChatMessage): void {}\\n  clear() {}\\n}\\n\\nexport const CustomEngine: Story = {\\n  args: {\\n    copilotEngine: new StorybookCustomCopilotEngine()\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n","extends":[]},{"name":"TestCellTemplate","id":"component-TestCellTemplate-5c6a3a4d7182031a58e9d8719c26774963245f3e40366d2e2c489d44c2c4f854015df227d652e8bf3973d61a06b44e708b54866af73a94c1dd571c5c1fd44f38","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ngm-test-tree-table-cell-template","styleUrls":[],"styles":[],"template":"<ng-template #cell let-data=\\"name\\">\\n  <button mat-button>\\n    {{data}}\\n  </button>\\n</ng-template>\\n<ng-template #name let-data=\\"name\\">\\n  <a href=\\"{{data}}\\">{{data}}</a>\\n</ng-template>\\n\\n<ngm-tree-table [columns]=\\"columns\\" [data]=\\"data\\" [nameCellTemplate]=\\"name\\"></ngm-tree-table>\\n","templateUrl":[],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"cell","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":58,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'cell\'"}],"modifierKind":[170]},{"name":"columns","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":61},{"name":"data","defaultValue":"TREE_NODE_DATA","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":60}],"methodsClass":[{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { AfterViewInit, Component, TemplateRef, ViewChild } from \'@angular/core\'\\nimport { RouterModule } from \'@angular/router\'\\nimport { MatButtonModule } from \'@angular/material/button\'\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\'\\nimport { DisplayDensity, OcapCoreModule } from \'@metad/ocap-angular/core\'\\nimport { Meta, StoryObj, moduleMetadata } from \'@storybook/angular\'\\nimport { TreeTableComponent } from \'./tree-table.component\'\\nimport { TreeTableModule } from \'./tree-table.module\'\\n\\n\\nconst TREE_NODE_DATA = [\\n  {\\n    name: \'Fruit\',\\n    children: [\\n      { name: \'Apple\', value: 10, raw: { type: \'Hive\' } },\\n      { name: \'Banana\', value: 20 },\\n      { name: \'Fruit loops\', value: 30 }\\n    ]\\n  },\\n  {\\n    name: \'Vegetables\',\\n    children: [\\n      {\\n        name: \'Green\',\\n        children: [\\n          { name: \'Broccoli\', value: 10 },\\n          { name: \'Brussel sprouts\', value: 20 }\\n        ]\\n      },\\n      {\\n        name: \'Orange\',\\n        children: [\\n          { name: \'Pumpkins\', value: 30, raw: { type: \'PG\' } },\\n          { name: \'Carrots\', value: 40 }\\n        ]\\n      }\\n    ]\\n  }\\n] as any\\n\\n@Component({\\n  selector: \'ngm-test-tree-table-cell-template\',\\n  template: `\\n<ng-template #cell let-data=\\"name\\">\\n  <button mat-button>\\n    {{data}}\\n  </button>\\n</ng-template>\\n<ng-template #name let-data=\\"name\\">\\n  <a href=\\"{{data}}\\">{{data}}</a>\\n</ng-template>\\n\\n<ngm-tree-table [columns]=\\"columns\\" [data]=\\"data\\" [nameCellTemplate]=\\"name\\"></ngm-tree-table>  \\n  `\\n})\\nclass TestCellTemplate implements AfterViewInit {\\n\\n  @ViewChild(\'cell\') cell: TemplateRef<any>\\n\\n  data = TREE_NODE_DATA\\n  columns\\n\\n  ngOnInit() {\\n    //\\n  }\\n\\n  ngAfterViewInit(): void {\\n    this.columns = [\\n      {\\n        name: \'type\',\\n        caption: \'类型\',\\n        cellTemplate: this.cell\\n      }\\n    ]\\n  }\\n}\\n\\nexport default {\\n  title: \'Common/TreeTable\',\\n  component: TreeTableComponent,\\n  decorators: [\\n    moduleMetadata({\\n      imports: [BrowserAnimationsModule, MatButtonModule, RouterModule, TreeTableModule, OcapCoreModule],\\n      declarations: [ TestCellTemplate ]\\n    })\\n  ]\\n} as Meta<TreeTableComponent<unknown>>\\n\\ntype Story = StoryObj<TreeTableComponent<unknown>>\\n\\nexport const Primary: Story = {\\n  args: {\\n    data: TREE_NODE_DATA,\\n    columns: [\\n      {\\n        name: \'type\',\\n        caption: \'类型\'\\n      }\\n    ]\\n  },\\n};\\n\\nexport const DensityCompact: Story = {\\n  args: {\\n    data: TREE_NODE_DATA,\\n    columns: [\\n      {\\n        name: \'type\',\\n        caption: \'类型\'\\n      }\\n    ],\\n    displayDensity: DisplayDensity.compact\\n  }\\n}\\n\\nexport const Striped: Story = {\\n  args: {\\n    data: TREE_NODE_DATA,\\n    columns: [\\n      {\\n        name: \'type\',\\n        caption: \'类型\'\\n      }\\n    ],\\n    displayDensity: DisplayDensity.compact,\\n    striped: true\\n  }\\n}\\n\\nexport const Grid: Story = {\\n  args: {\\n    data: TREE_NODE_DATA,\\n    columns: [\\n      {\\n        name: \'type\',\\n        caption: \'类型\'\\n      }\\n    ],\\n    displayDensity: DisplayDensity.compact,\\n    grid: true\\n  }\\n}\\n\\nexport const Pipe: Story = {\\n  args: {\\n    data: TREE_NODE_DATA,\\n    columns: [\\n      {\\n        name: \'type\',\\n        caption: \'类型\',\\n        pipe: (value) => {\\n          return `Type is ` + value\\n        }\\n      }\\n    ],\\n    displayDensity: DisplayDensity.compact,\\n    striped: true\\n  }\\n}\\n\\nexport const InitialLevel: Story = {\\n  args: {\\n    data: TREE_NODE_DATA,\\n    columns: [\\n      {\\n        name: \'type\',\\n        caption: \'类型\'\\n      }\\n    ],\\n    initialLevel: Number.MAX_SAFE_INTEGER\\n  }\\n}\\n\\nexport const StickyHeaders: Story = {\\n  args: {\\n    nameLabel: \'名称\',\\n    data: TREE_NODE_DATA,\\n    columns: [\\n      {\\n        name: \'type\',\\n        caption: \'类型\'\\n      }\\n    ],\\n    initialLevel: Number.MAX_SAFE_INTEGER,\\n    stickyHeaders: true\\n  }\\n}\\n\\nexport const CellTemplate: Story = {\\n  args: {\\n  },\\n  render: (args: Partial<TestCellTemplate>) => ({\\n    template: `<ngm-test-tree-table-cell-template></ngm-test-tree-table-cell-template>`\\n  })\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"implements":["AfterViewInit"]},{"name":"TestMemberTreeSelectComponent","id":"component-TestMemberTreeSelectComponent-6e685562d6118cb6bd94fa8dbbcb4ca59978463018b46220ef63aeaeee72fb6c113028bf1acabb96ab8f5561f637b273a42f1d6c715d3ee0c79cf09d1c69098f","file":"packages/angular/controls/tree-select/tree-select.component.stories.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"test-member-tree-select","styleUrls":[],"styles":[],"template":"<ngm-member-tree-select    [dataSettings]=\\"dataSettings\\"\\n    [dimension]=\\"dimension\\"\\n    [appearance]=\\"appearance\\"\\n    [options]=\\"options\\"\\n    [data]=\\"data\\"\\n    [ngModel]=\\"model\\"\\n    (ngModelChange)=\\"onModelChange($event)\\">\\n  </ngm-member-tree-select>","templateUrl":[],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"appearance","deprecated":false,"deprecationMessage":"","line":39,"type":"NgmAppearance","decorators":[]},{"name":"data","deprecated":false,"deprecationMessage":"","line":41,"type":"any","decorators":[]},{"name":"dataSettings","deprecated":false,"deprecationMessage":"","line":37,"type":"DataSettings","decorators":[]},{"name":"dimension","deprecated":false,"deprecationMessage":"","line":38,"type":"Dimension","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","line":36,"type":"string","decorators":[]},{"name":"model","defaultValue":"{\\n    members: [\\n      { value: \'Fruit\' }\\n    ]\\n  }","deprecated":false,"deprecationMessage":"","line":42,"type":"{ members: {}; }","decorators":[]},{"name":"options","deprecated":false,"deprecationMessage":"","line":40,"type":"MemberTreeSelectOptions","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"onModelChange","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\'\\nimport { FormsModule } from \'@angular/forms\'\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\'\\nimport { TREE_NODE_DATA } from \'@metad/ocap-angular/common/tree-select/tree-select.component.stories\'\\nimport {\\n  DisplayDensity,\\n  NgmAppearance,\\n  NgmMissingTranslationHandler,\\n  OcapCoreModule,\\n  OCAP_AGENT_TOKEN,\\n  OCAP_DATASOURCE_TOKEN,\\n  OCAP_MODEL_TOKEN,\\n  NgmDSCoreService\\n} from \'@metad/ocap-angular/core\'\\nimport { AgentType, DataSettings, DataSource, Dimension, DisplayBehaviour, Type } from \'@metad/ocap-core\'\\nimport { MissingTranslationHandler, TranslateModule } from \'@ngx-translate/core\'\\nimport { Meta, moduleMetadata } from \'@storybook/angular\'\\nimport { CUBE_SALES_ORDER, MockAgent } from \'../../mock/agent-mock.service\'\\nimport { NgmControlsModule } from \'../controls.module\'\\nimport { MemberTreeSelectOptions, NgmMemberTreeSelectComponent } from \'./tree-select.component\'\\n\\n@Component({\\n  selector: \'test-member-tree-select\',\\n  template: `<ngm-member-tree-select\\n    [dataSettings]=\\"dataSettings\\"\\n    [dimension]=\\"dimension\\"\\n    [appearance]=\\"appearance\\"\\n    [options]=\\"options\\"\\n    [data]=\\"data\\"\\n    [ngModel]=\\"model\\"\\n    (ngModelChange)=\\"onModelChange($event)\\">\\n  </ngm-member-tree-select>`\\n})\\nclass TestMemberTreeSelectComponent<T> {\\n  \\n  @Input() label: string\\n  @Input() dataSettings: DataSettings\\n  @Input() dimension: Dimension\\n  @Input() appearance: NgmAppearance\\n  @Input() options: MemberTreeSelectOptions\\n  @Input() data\\n  @Input() model = {\\n    members: [\\n      { value: \'Fruit\' }\\n    ]\\n  }\\n\\n  onModelChange(event) {\\n    console.warn(event)\\n  }\\n}\\n\\nexport default {\\n  title: \'Controls/MemberTreeSelect\',\\n  component: NgmMemberTreeSelectComponent,\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [TestMemberTreeSelectComponent],\\n      imports: [\\n        BrowserAnimationsModule,\\n        FormsModule,\\n        NgmControlsModule,\\n        OcapCoreModule,\\n        TranslateModule.forRoot({\\n          missingTranslationHandler: {\\n            provide: MissingTranslationHandler,\\n            useClass: NgmMissingTranslationHandler\\n          }\\n        })\\n      ],\\n      providers: [\\n        NgmDSCoreService,\\n        {\\n          provide: OCAP_AGENT_TOKEN,\\n          useClass: MockAgent,\\n          multi: true\\n        },\\n        {\\n          provide: OCAP_DATASOURCE_TOKEN,\\n          useValue: {\\n            type: \'SQL\',\\n            factory: async (): Promise<Type<DataSource>> => {\\n              const { SQLDataSource } = await import(\'@metad/ocap-sql\')\\n              return SQLDataSource\\n            }\\n          },\\n          multi: true\\n        },\\n        {\\n          provide: OCAP_MODEL_TOKEN,\\n          useValue: {\\n            name: \'Sales\',\\n            type: \'SQL\',\\n            agentType: AgentType.Browser,\\n            settings: {\\n              ignoreUnknownProperty: true\\n            },\\n            schema: {\\n              cubes: [\\n                CUBE_SALES_ORDER\\n              ]\\n            }\\n          },\\n          multi: true\\n        }\\n      ]\\n    })\\n  ]\\n} as Meta<NgmMemberTreeSelectComponent>\\n\\n\\n// const Template: Story<NgmMemberTreeSelectComponent> = (args: NgmMemberTreeSelectComponent) => ({\\n//   props: args,\\n//   template: `<test-member-tree-select [label]=\\"label\\"\\n//     [dataSettings]=\\"dataSettings\\"  \\n//     [dimension]=\\"dimension\\"\\n//     [appearance]=\\"appearance\\"\\n//     [data]=\\"data\\"\\n//     [options]=\\"options\\"\\n//   ></test-member-tree-select>`\\n// })\\n\\n// export const Primary = Template.bind({})\\n// Primary.args = {\\n//   dimension: {\\n//     dimension: \'product\'\\n//   },\\n//   appearance: {\\n//     displayDensity: DisplayDensity.compact\\n//   },\\n//   data: TREE_NODE_DATA\\n// }\\n\\n// export const FromDataSource = Template.bind({})\\n// FromDataSource.args = {\\n//   dataSettings: {\\n//     dataSource: \'Sales\',\\n//     entitySet: \'SalesOrder\'\\n//   },\\n//   dimension: {\\n//     dimension: \'[Product]\',\\n//     displayBehaviour: DisplayBehaviour.auto\\n//   },\\n//   appearance: {\\n//     displayDensity: DisplayDensity.compact,\\n//   },\\n// }\\n\\n// export const DefaultMembers = Template.bind({})\\n// DefaultMembers.args = {\\n//   dataSettings: {\\n//     dataSource: \'Sales\',\\n//     entitySet: \'SalesOrder\'\\n//   },\\n//   dimension: {\\n//     dimension: \'[Product]\',\\n//     displayBehaviour: DisplayBehaviour.auto\\n//   },\\n//   appearance: {\\n//     displayDensity: DisplayDensity.compact,\\n//   },\\n//   options: {\\n//     defaultMembers: [\\n//       { value: \'[Fantastic]\' }\\n//     ]\\n//   }\\n// }\\n\\n// const TemplateWidth: Story<NgmMemberTreeSelectComponent> = (args: NgmMemberTreeSelectComponent) => ({\\n//   props: args,\\n//   styles: [\\n//     `.ngm-member-tree-select {\\n//       width: 100px;\\n//     }`\\n//   ]\\n// })\\n\\n// export const Width = TemplateWidth.bind({})\\n// Width.args = {\\n//   dataSettings: {\\n//     dataSource: \'Sales\',\\n//     entitySet: \'SalesOrder3s\'\\n//   },\\n//   dimension: {\\n//     dimension: \'product\'\\n//   },\\n//   appearance: {\\n//     displayDensity: DisplayDensity.compact\\n//   },\\n//   options: {\\n//     searchable: true,\\n//     virtualScroll: true,\\n//     multiple: true\\n//   },\\n//   data: [\\n//     ...TREE_NODE_DATA,\\n//     {\\n//       key: \'FruitLong\',\\n//       label: \'水果水果水果水果水果水果水果水果水果水果水果水果水果水果\',\\n//     }\\n//   ]\\n// }\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[]},{"name":"TestSelectComponent","id":"component-TestSelectComponent-69142af97546ab3727f8075fe8bdb5c58f8b053cda0e9bf4b6560ddc136a534da6dd9ebc3292ca0a398d7acd341c4a447b4b4f3dfbff6ab832ed980eeab11ac6","file":"packages/angular/common/select/mat/select.component.stories.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"test-select","styleUrls":[],"styles":[],"template":"<ngm-mat-select    [label]=\\"label\\"\\n    [placeholder]=\\"\'Please Select \' + label\\"\\n    [selectOptions]=\\"selectOptions\\"\\n    [multiple]=\\"multiple\\"\\n    [virtualScroll]=\\"virtualScroll\\"\\n    [displayBehaviour]=\\"displayBehaviour\\"\\n    [displayDensity]=\\"displayDensity\\"\\n    [validators]=\\"validators\\"\\n    [formControl]=\\"formControl\\"\\n    (ngModelChange)=\\"onModelChange($event)\\"\\n  >\\n  </ngm-mat-select>\\n","templateUrl":[],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"color","deprecated":false,"deprecationMessage":"","line":38,"type":"string","decorators":[]},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":35,"type":"boolean","decorators":[]},{"name":"displayBehaviour","deprecated":false,"deprecationMessage":"","line":39,"type":"DisplayBehaviour | string","decorators":[]},{"name":"displayDensity","deprecated":false,"deprecationMessage":"","line":40,"type":"DisplayDensity | string","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","line":31,"type":"string","decorators":[]},{"name":"model","defaultValue":"null","deprecated":false,"deprecationMessage":"","line":41,"type":"any","decorators":[]},{"name":"multiple","deprecated":false,"deprecationMessage":"","line":34,"type":"boolean","decorators":[]},{"name":"placeholder","deprecated":false,"deprecationMessage":"","line":32,"type":"string","decorators":[]},{"name":"selectOptions","deprecated":false,"deprecationMessage":"","line":33,"type":"TreeNodeInterface<T>","decorators":[]},{"name":"treeViewer","deprecated":false,"deprecationMessage":"","line":37,"type":"boolean","decorators":[]},{"name":"validators","deprecated":false,"deprecationMessage":"","line":42,"type":"ValidatorFn | ValidatorFn[] | null","decorators":[]},{"name":"virtualScroll","deprecated":false,"deprecationMessage":"","line":36,"type":"boolean","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"formControl","defaultValue":"new FormControl()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":44}],"methodsClass":[{"name":"ngOnChanges","args":[{"type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":53,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":46,"deprecated":false,"deprecationMessage":""},{"name":"onModelChange","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":57,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \'@angular/common\'\\nimport { Component, Input, OnChanges, SimpleChanges } from \'@angular/core\'\\nimport { AbstractControl, FormControl, FormsModule, ReactiveFormsModule, ValidationErrors, ValidatorFn } from \'@angular/forms\'\\nimport { MatFormFieldModule } from \'@angular/material/form-field\'\\nimport { MatInputModule } from \'@angular/material/input\'\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\'\\nimport { DisplayDensity, OcapCoreModule } from \'@metad/ocap-angular/core\'\\nimport { DisplayBehaviour, TreeNodeInterface } from \'@metad/ocap-core\'\\nimport { Meta, moduleMetadata } from \'@storybook/angular\'\\nimport { NgmMatSelectComponent } from \'./select.component\'\\n\\n@Component({\\n  selector: \'test-select\',\\n  template: `<ngm-mat-select\\n    [label]=\\"label\\"\\n    [placeholder]=\\"\'Please Select \' + label\\"\\n    [selectOptions]=\\"selectOptions\\"\\n    [multiple]=\\"multiple\\"\\n    [virtualScroll]=\\"virtualScroll\\"\\n    [displayBehaviour]=\\"displayBehaviour\\"\\n    [displayDensity]=\\"displayDensity\\"\\n    [validators]=\\"validators\\"\\n    [formControl]=\\"formControl\\"\\n    (ngModelChange)=\\"onModelChange($event)\\"\\n  >\\n  </ngm-mat-select>\\n`\\n})\\nclass TestSelectComponent<T> implements OnChanges {\\n\\n  @Input() label: string\\n  @Input() placeholder: string\\n  @Input() selectOptions: TreeNodeInterface<T>\\n  @Input() multiple: boolean\\n  @Input() disabled: boolean\\n  @Input() virtualScroll: boolean\\n  @Input() treeViewer: boolean\\n  @Input() color: string\\n  @Input() displayBehaviour: DisplayBehaviour | string\\n  @Input() displayDensity: DisplayDensity | string\\n  @Input() model = null\\n  @Input() validators: ValidatorFn | ValidatorFn[] | null\\n\\n  formControl = new FormControl()\\n\\n  ngOnInit() {\\n    if (this.disabled) {\\n      this.formControl.disable()\\n    }\\n    this.formControl.setValue(this.model)\\n  }\\n\\n  ngOnChanges({validators}: SimpleChanges): void {\\n    //\\n  }\\n\\n  onModelChange(event) {\\n    console.warn(event)\\n  }\\n}\\n\\nexport default {\\n  title: \'NgmMatSelectComponent\',\\n  component: NgmMatSelectComponent,\\n  decorators: [\\n    moduleMetadata({\\n      imports: [CommonModule, BrowserAnimationsModule, FormsModule, ReactiveFormsModule, OcapCoreModule,\\n        MatFormFieldModule,\\n        MatInputModule\\n      ],\\n      declarations: [TestSelectComponent]\\n    })\\n  ]\\n} as Meta<NgmMatSelectComponent>\\n\\nconst TREE_NODE_DATA = [\\n  {\\n    value: \'Fruit\',\\n    label: \'水果\'\\n  },\\n  { value: \'Apple\', label: \'苹果\', raw: { type: \'Hive\' } },\\n  { value: \'Banana\', label: \'香蕉\' },\\n  { value: \'Fruit loops\', label: \'果循环\' },\\n  {\\n    value: \'Vegetables\',\\n    label: \'蔬菜\'\\n  },\\n  {\\n    value: \'Green\',\\n    label: \'绿色\'\\n  },\\n  { value: \'Broccoli\', label: \'西兰花\' },\\n  { value: \'Brussel sprouts\', label: \'豆芽\' },\\n  {\\n    value: \'Orange\',\\n    label: \'橙\'\\n  },\\n  { value: \'Pumpkins\', label: \'南瓜\', raw: { type: \'PG\' } },\\n  { value: \'Carrots\', label: \'胡萝卜\' }\\n] as any\\n\\n// const Template: Story<any> = (args: any) => ({\\n//   props: args,\\n//   template: `<test-select [label]=\\"label\\" [selectOptions]=\\"selectOptions\\" [model]=\\"model\\" [multiple]=\\"multiple\\" [virtualScroll]=\\"virtualScroll\\"\\n//   [displayBehaviour]=\\"displayBehaviour\\" [displayDensity]=\\"displayDensity\\"\\n//   [disabled]=\\"disabled\\"\\n//   ></test-select>`,\\n//   styles: [``]\\n// })\\n\\n// export const Select = Template.bind({})\\n// Select.args = {\\n//   label: \'水果\',\\n//   selectOptions: TREE_NODE_DATA,\\n//   model: \'Apple\'\\n// }\\n\\n// export const SelectMultiple = Template.bind({})\\n// SelectMultiple.args = {\\n//   label: \'水果\',\\n//   selectOptions: TREE_NODE_DATA,\\n//   multiple: true,\\n//   model: [\'Apple\', \'Pumpkins\']\\n// }\\n\\n// export const SelectVirtualScroll = Template.bind({})\\n// SelectVirtualScroll.args = {\\n//   label: \'水果\',\\n//   selectOptions: TREE_NODE_DATA,\\n//   multiple: true,\\n//   virtualScroll: true,\\n//   model: [\'Apple\', \'Pumpkins\']\\n// }\\n\\n// export const SelectDisplayBehaviour = Template.bind({})\\n// SelectDisplayBehaviour.args = {\\n//   label: \'水果\',\\n//   selectOptions: TREE_NODE_DATA,\\n//   model: \'Apple\',\\n//   displayBehaviour: DisplayBehaviour.descriptionAndId\\n// }\\n\\n// export const SelectCosy = Template.bind({})\\n// SelectCosy.args = {\\n//   label: \'水果\',\\n//   selectOptions: TREE_NODE_DATA,\\n//   model: \'Apple\',\\n//   displayDensity: DisplayDensity.cosy\\n// }\\n\\n// export const SelectCompact = Template.bind({})\\n// SelectCompact.args = {\\n//   label: \'水果\',\\n//   selectOptions: TREE_NODE_DATA,\\n//   model: \'Apple\',\\n//   displayDensity: DisplayDensity.compact\\n// }\\n\\n// export const SelectNoSelectOptions = Template.bind({})\\n// SelectNoSelectOptions.args = {\\n//   label: \'水果\',\\n//   model: \'Apple\'\\n// }\\n\\n// export const SelectDisabled = Template.bind({})\\n// SelectDisabled.args = {\\n//   label: \'水果\',\\n//   model: \'Apple\',\\n//   selectOptions: TREE_NODE_DATA,\\n//   disabled: true\\n// }\\n\\n// const TemplateError: Story<any> = (args: any) => ({\\n//   props: args,\\n//   template: `<test-select [label]=\\"label\\"\\n//     [selectOptions]=\\"selectOptions\\"\\n//     [model]=\\"model\\"\\n//     [multiple]=\\"multiple\\"\\n//     [virtualScroll]=\\"virtualScroll\\"\\n//     [displayBehaviour]=\\"displayBehaviour\\"\\n//     [displayDensity]=\\"displayDensity\\"\\n//     [disabled]=\\"disabled\\"\\n//     [validators]=\\"validators\\"\\n//   ></test-select>`,\\n//   styles: [``]\\n// })\\n\\n// export const SelectValidators = TemplateError.bind({})\\n// SelectValidators.args = {\\n//   label: \'水果\',\\n//   model: \'Apple\',\\n//   selectOptions: TREE_NODE_DATA,\\n//   validators:  [(control: AbstractControl): ValidationErrors | null => {\\n//     return control.value.value === \\"Apple\\" ? {forbiddenName: \'不喜欢这个水果\'} : null\\n//   }]\\n// }\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"implements":["OnChanges"]},{"name":"TestTreeSelectComponent","id":"component-TestTreeSelectComponent-1042af4fc5674213103d897fc4dad8886c718b47d55504b96c898af6d62b033ac0f81d833e4521bc9a64ede182b7395d67cec464e429681694751eb83cf9d8b2","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"test-tree-select","styleUrls":[],"styles":[],"template":"<ngm-tree-select    [label]=\\"label\\"\\n    [initialLevel]=\\"initialLevel\\"\\n    [treeNodes]=\\"treeNodes\\"\\n    [placeholder]=\\"\'Please Select \' + label\\"\\n    [multiple]=\\"multiple\\"\\n    [disabled]=\\"disabled\\"\\n    [autocomplete]=\\"autocomplete\\"\\n    [maxTagCount]=\\"maxTagCount\\"\\n    [virtualScroll]=\\"virtualScroll\\"\\n    [panelWidth]=\\"panelWidth\\"\\n    [displayBehaviour]=\\"displayBehaviour\\"\\n    [displayDensity]=\\"displayDensity\\"\\n    [treeViewer]=\\"treeViewer\\"\\n    [searchable]=\\"searchable\\"\\n    [color]=\\"color\\"\\n    [validators]=\\"validators\\"\\n    [ngModel]=\\"model\\"\\n    (ngModelChange)=\\"onModelChange($event)\\">\\n  </ngm-tree-select>","templateUrl":[],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"autocomplete","deprecated":false,"deprecationMessage":"","line":43,"type":"boolean","decorators":[]},{"name":"color","deprecated":false,"deprecationMessage":"","line":48,"type":"string","decorators":[]},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":40,"type":"boolean","decorators":[]},{"name":"displayBehaviour","deprecated":false,"deprecationMessage":"","line":49,"type":"DisplayBehaviour | string","decorators":[]},{"name":"displayDensity","deprecated":false,"deprecationMessage":"","line":50,"type":"DisplayDensity | string","decorators":[]},{"name":"initialLevel","deprecated":false,"deprecationMessage":"","line":41,"type":"number","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","line":36,"type":"string","decorators":[]},{"name":"maxTagCount","deprecated":false,"deprecationMessage":"","line":42,"type":"number","decorators":[]},{"name":"model","defaultValue":"null","deprecated":false,"deprecationMessage":"","line":51,"type":"any","decorators":[]},{"name":"multiple","deprecated":false,"deprecationMessage":"","line":39,"type":"boolean","decorators":[]},{"name":"panelWidth","deprecated":false,"deprecationMessage":"","line":45,"type":"string | number","decorators":[]},{"name":"placeholder","deprecated":false,"deprecationMessage":"","line":37,"type":"string","decorators":[]},{"name":"searchable","deprecated":false,"deprecationMessage":"","line":47,"type":"boolean","decorators":[]},{"name":"treeNodes","deprecated":false,"deprecationMessage":"","line":38,"type":"TreeNodeInterface<T>","decorators":[]},{"name":"treeViewer","deprecated":false,"deprecationMessage":"","line":46,"type":"boolean","decorators":[]},{"name":"validators","deprecated":false,"deprecationMessage":"","line":52,"type":"ValidatorFn | ValidatorFn[] | null","decorators":[]},{"name":"virtualScroll","deprecated":false,"deprecationMessage":"","line":44,"type":"boolean","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"onModelChange","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \'@angular/common\'\\nimport { Component, Input } from \'@angular/core\'\\nimport { AbstractControl, FormsModule, ReactiveFormsModule, ValidationErrors, ValidatorFn } from \'@angular/forms\'\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\'\\nimport { DisplayDensity, NgmMissingTranslationHandler, OcapCoreModule } from \'@metad/ocap-angular/core\'\\nimport { DisplayBehaviour, TreeNodeInterface } from \'@metad/ocap-core\'\\nimport { MissingTranslationHandler, TranslateModule } from \'@ngx-translate/core\'\\nimport { Meta, moduleMetadata } from \'@storybook/angular\'\\nimport { NgmTreeSelectComponent } from \'./tree-select.component\'\\n\\n@Component({\\n  selector: \'test-tree-select\',\\n  template: `<ngm-tree-select\\n    [label]=\\"label\\"\\n    [initialLevel]=\\"initialLevel\\"\\n    [treeNodes]=\\"treeNodes\\"\\n    [placeholder]=\\"\'Please Select \' + label\\"\\n    [multiple]=\\"multiple\\"\\n    [disabled]=\\"disabled\\"\\n    [autocomplete]=\\"autocomplete\\"\\n    [maxTagCount]=\\"maxTagCount\\"\\n    [virtualScroll]=\\"virtualScroll\\"\\n    [panelWidth]=\\"panelWidth\\"\\n    [displayBehaviour]=\\"displayBehaviour\\"\\n    [displayDensity]=\\"displayDensity\\"\\n    [treeViewer]=\\"treeViewer\\"\\n    [searchable]=\\"searchable\\"\\n    [color]=\\"color\\"\\n    [validators]=\\"validators\\"\\n    [ngModel]=\\"model\\"\\n    (ngModelChange)=\\"onModelChange($event)\\">\\n  </ngm-tree-select>`\\n})\\nclass TestTreeSelectComponent<T> {\\n  \\n  @Input() label: string\\n  @Input() placeholder: string\\n  @Input() treeNodes: TreeNodeInterface<T>\\n  @Input() multiple: boolean\\n  @Input() disabled: boolean\\n  @Input() initialLevel: number\\n  @Input() maxTagCount: number\\n  @Input() autocomplete: boolean\\n  @Input() virtualScroll: boolean\\n  @Input() panelWidth: string | number\\n  @Input() treeViewer: boolean\\n  @Input() searchable: boolean\\n  @Input() color: string\\n  @Input() displayBehaviour: DisplayBehaviour | string\\n  @Input() displayDensity: DisplayDensity | string\\n  @Input() model = null\\n  @Input() validators: ValidatorFn | ValidatorFn[] | null\\n\\n  onModelChange(event) {\\n    console.warn(event)\\n  }\\n}\\n\\nexport default {\\n  title: \'Common/TreeSelect\',\\n  decorators: [\\n    moduleMetadata({\\n      imports: [\\n        CommonModule,\\n        BrowserAnimationsModule,\\n        FormsModule,\\n        ReactiveFormsModule,\\n        TranslateModule.forRoot({\\n          missingTranslationHandler: {\\n            provide: MissingTranslationHandler,\\n            useClass: NgmMissingTranslationHandler\\n          }\\n        }),\\n        NgmTreeSelectComponent,\\n        OcapCoreModule\\n      ],\\n      declarations: [TestTreeSelectComponent]\\n    })\\n  ]\\n} as Meta<NgmTreeSelectComponent<unknown>>\\n\\nexport const TREE_NODE_DATA = [\\n  {\\n    key: \'Fruit\',\\n    label: \'水果\',\\n    children: [\\n      { key: \'Apple\', label: \'苹果\', value: 10, raw: { type: \'Hive\' } },\\n      { key: \'Banana\', label: \'香蕉\', value: 20 },\\n      { key: \'Fruit loops\', label: \'果循环\', value: 30 },\\n      {\\n        key: \'Fruit2\',\\n        label: \'水果\'\\n      }\\n    ]\\n  },\\n  {\\n    key: \'Vegetables\',\\n    label: \'蔬菜\',\\n    children: [\\n      {\\n        key: \'Green\',\\n        label: \'绿色\',\\n        children: [\\n          { key: \'Broccoli\', label: \'西兰花\', value: 10 },\\n          { key: \'Brussel sprouts\', label: \'豆芽\', value: 20 }\\n        ]\\n      },\\n      {\\n        key: \'Orange\',\\n        label: \'橙\',\\n        children: [\\n          { key: \'Pumpkins\', label: \'南瓜\', value: 30, raw: { type: \'PG\' } },\\n          { key: \'Carrots\', label: \'胡萝卜\', value: 40 }\\n        ]\\n      }\\n    ]\\n  }\\n] as any\\n\\n// const Template: Story<any> = (args: any) => ({\\n//   props: args,\\n//   template: `<test-tree-select [label]=\\"label\\" [treeNodes]=\\"treeNodes\\" [model]=\\"model\\" [multiple]=\\"multiple\\"\\n//     [maxTagCount]=\\"maxTagCount\\"\\n//     [autocomplete]=\\"autocomplete\\" [virtualScroll]=\\"virtualScroll\\" [panelWidth]=\\"panelWidth\\"\\n//     [displayBehaviour]=\\"displayBehaviour\\" [displayDensity]=\\"displayDensity\\" [treeViewer]=\\"treeViewer\\"\\n//     [searchable]=\\"searchable\\"\\n//     [color]=\\"color\\"\\n//     [initialLevel]=\\"initialLevel\\"\\n//     [validators]=\\"validators\\"\\n//     [disabled]=\\"disabled\\"\\n//     >\\n//   </test-tree-select>`,\\n//   styles: [``]\\n// })\\n\\n// export const ATreeSelectVirtualScroll = Template.bind({})\\n// ATreeSelectVirtualScroll.args = {\\n//   placeholder: \'水果选择器\',\\n//   treeNodes: TREE_NODE_DATA,\\n//   model: \'Apple\',\\n//   searchable: true,\\n//   virtualScroll: true\\n// }\\n\\n// export const ATreeSelect = Template.bind({})\\n// ATreeSelect.args = {\\n//   treeNodes: TREE_NODE_DATA,\\n//   model: \'Apple\',\\n//   searchable: true,\\n//   label: \'水果选择器\',\\n//   initialLevel: 3\\n// }\\n\\n// export const TreeSelectWithNoSelectOptions = Template.bind({})\\n// TreeSelectWithNoSelectOptions.args = {\\n//   model: \'Apple\',\\n//   searchable: true,\\n//   label: \'水果选择器\',\\n//   initialLevel: 2\\n// }\\n\\n// export const ATreeSelectMultipleSearchable = Template.bind({})\\n// ATreeSelectMultipleSearchable.args = {\\n//   label: \'水果选择器\',\\n//   treeNodes: TREE_NODE_DATA,\\n//   model: [\'Apple\'],\\n//   searchable: true,\\n//   multiple: true,\\n// }\\n\\n// export const ATreeSelectMultiple = Template.bind({})\\n// ATreeSelectMultiple.args = {\\n//   label: \'水果选择器\',\\n//   treeNodes: TREE_NODE_DATA,\\n//   multiple: true,\\n//   model: [\'Fruit\', \'Apple\']\\n// }\\n\\n// export const CAutocomplete = Template.bind({})\\n// CAutocomplete.args = {\\n//   label: \'AutoComplete\',\\n//   treeNodes: TREE_NODE_DATA,\\n//   autocomplete: true,\\n//   model: \'Apple\'\\n// }\\n\\n// export const DAutocompleteMultiple = Template.bind({})\\n// DAutocompleteMultiple.args = {\\n//   label: \'水果选择器\',\\n//   treeNodes: TREE_NODE_DATA,\\n//   multiple: true,\\n//   autocomplete: true,\\n//   model: [\'Fruit\', \'Apple\']\\n// }\\n\\n// export const DAutocompleteMaxTag = Template.bind({})\\n// DAutocompleteMaxTag.args = {\\n//   label: \'水果选择器\',\\n//   treeNodes: TREE_NODE_DATA,\\n//   multiple: true,\\n//   autocomplete: true,\\n//   maxTagCount: 2,\\n//   model: [\'Fruit\', \'Apple\']\\n// }\\n\\n// export const EAutocompleteVirtualScroll = Template.bind({})\\n// EAutocompleteVirtualScroll.args = {\\n//   label: \'AutoComplete\',\\n//   treeNodes: TREE_NODE_DATA,\\n//   autocomplete: true,\\n//   virtualScroll: true,\\n//   model: \'Apple\'\\n// }\\n\\n// export const EAutocompleteVirtualScrollWidth = Template.bind({})\\n// EAutocompleteVirtualScrollWidth.args = {\\n//   label: \'AutoComplete\',\\n//   treeNodes: TREE_NODE_DATA,\\n//   autocomplete: true,\\n//   virtualScroll: true,\\n//   panelWidth: \'500px\',\\n//   model: \'Apple\'\\n// }\\n\\n// export const FAutocompleteMultipleVirtualScroll = Template.bind({})\\n// FAutocompleteMultipleVirtualScroll.args = {\\n//   treeNodes: TREE_NODE_DATA,\\n//   multiple: true,\\n//   autocomplete: true,\\n//   virtualScroll: true,\\n//   model: [\'Fruit\', \'Apple\']\\n// }\\n\\n// export const GTreeSelectDisplayBehaviour = Template.bind({})\\n// GTreeSelectDisplayBehaviour.args = {\\n//   treeNodes: TREE_NODE_DATA,\\n//   displayBehaviour: DisplayBehaviour.descriptionAndId,\\n//   model: \'Apple\'\\n// }\\n\\n// export const HTreeSelectMultipleBehaviour = Template.bind({})\\n// HTreeSelectMultipleBehaviour.args = {\\n//   treeNodes: TREE_NODE_DATA,\\n//   multiple: true,\\n//   displayBehaviour: DisplayBehaviour.descriptionAndId,\\n//   model: [\'Fruit\', \'Apple\']\\n// }\\n\\n// export const IAutocompleteDisplayBehaviour = Template.bind({})\\n// IAutocompleteDisplayBehaviour.args = {\\n//   label: \'Autocomplete & DisplayBehaviour\',\\n//   treeNodes: TREE_NODE_DATA,\\n//   autocomplete: true,\\n//   displayBehaviour: DisplayBehaviour.descriptionAndId,\\n//   model: \'Apple\'\\n// }\\n\\n// export const JAutocompleteMultipleBehaviour = Template.bind({})\\n// JAutocompleteMultipleBehaviour.args = {\\n//   treeNodes: TREE_NODE_DATA,\\n//   autocomplete: true,\\n//   multiple: true,\\n//   displayBehaviour: DisplayBehaviour.descriptionAndId,\\n//   model: [\'Fruit\', \'Apple\']\\n// }\\n\\n// export const ATreeSelectDensityCosy = Template.bind({})\\n// ATreeSelectDensityCosy.args = {\\n//   label: \'TreeSelect Density\',\\n//   treeNodes: TREE_NODE_DATA,\\n//   displayDensity: DisplayDensity.cosy,\\n//   model: \'Apple\'\\n// }\\n\\n// export const CAutocompleteDensityCosy = Template.bind({})\\n// CAutocompleteDensityCosy.args = {\\n//   label: \'AutoComplete Density\',\\n//   treeNodes: TREE_NODE_DATA,\\n//   autocomplete: true,\\n//   displayDensity: DisplayDensity.cosy,\\n//   model: \'Apple\'\\n// }\\n\\n// export const ATreeSelectDensityCompact = Template.bind({})\\n// ATreeSelectDensityCompact.args = {\\n//   label: \'TreeSelect Density\',\\n//   treeNodes: TREE_NODE_DATA,\\n//   searchable: true,\\n//   displayDensity: DisplayDensity.compact,\\n//   model: \'Apple\'\\n// }\\n\\n// export const CAutocompleteDensityCompact = Template.bind({})\\n// CAutocompleteDensityCompact.args = {\\n//   label: \'AutoComplete Density\',\\n//   treeNodes: TREE_NODE_DATA,\\n//   autocomplete: true,\\n//   displayDensity: DisplayDensity.compact,\\n//   model: \'Apple\'\\n// }\\n\\n// export const BTreeSelectMultipleDensityCompact = Template.bind({})\\n// BTreeSelectMultipleDensityCompact.args = {\\n//   treeNodes: TREE_NODE_DATA,\\n//   multiple: true,\\n//   displayDensity: DisplayDensity.compact,\\n//   model: [\'Fruit\', \'Apple\']\\n// }\\n\\n// export const KTreeViewer = Template.bind({})\\n// KTreeViewer.args = {\\n//   treeNodes: TREE_NODE_DATA,\\n//   treeViewer: true,\\n//   model: \'Fruit\'\\n// }\\n\\n// export const KTreeViewerCompact = Template.bind({})\\n// KTreeViewerCompact.args = {\\n//   treeNodes: TREE_NODE_DATA,\\n//   multiple: true,\\n//   displayDensity: DisplayDensity.compact,\\n//   treeViewer: true,\\n//   model: [\'Fruit\', \'Apple\']\\n// }\\n\\n// export const KTreeViewerColorAccent = Template.bind({})\\n// KTreeViewerColorAccent.args = {\\n//   treeNodes: TREE_NODE_DATA,\\n//   multiple: true,\\n//   treeViewer: true,\\n//   color: \'accent\',\\n//   model: [\'Fruit\', \'Apple\']\\n// }\\n\\n// export const KTreeViewerColorPrimary = Template.bind({})\\n// KTreeViewerColorPrimary.args = {\\n//   treeNodes: TREE_NODE_DATA,\\n//   multiple: true,\\n//   treeViewer: true,\\n//   color: \'primary\',\\n//   model: [\'Fruit\', \'Apple\']\\n// }\\n\\n// export const KTreeViewerSearchable = Template.bind({})\\n// KTreeViewerSearchable.args = {\\n//   treeNodes: TREE_NODE_DATA,\\n//   multiple: true,\\n//   treeViewer: true,\\n//   searchable: true,\\n//   model: [\'Fruit\', \'Apple\']\\n// }\\n\\n// const TemplateWidth: Story<any> = (args: any) => ({\\n//   props: args,\\n//   styles: [`.ngm-tree-select {width: 100px;}`]\\n// })\\n\\n// export const LWidth = TemplateWidth.bind({})\\n// LWidth.args = {\\n//   treeNodes: [\\n//     ...TREE_NODE_DATA,\\n//     {\\n//       key: \'Fruit GT\',\\n//       label: \'水果水果水果水果水果水果水果水果水果水果水果水果水果水果水果水果水果水果水果水果\',\\n//     }\\n//   ],\\n//   multiple: true,\\n//   searchable: true,\\n//   model: [\'Fruit\', \'Apple\']\\n// }\\n\\n// export const LWidthNGT = TemplateWidth.bind({})\\n// LWidthNGT.args = {\\n//   treeNodes: TREE_NODE_DATA,\\n//   multiple: true,\\n//   searchable: true,\\n//   model: [\'Fruit\', \'Apple\']\\n// }\\n\\n// export const LAutocompleteWidth = TemplateWidth.bind({})\\n// LAutocompleteWidth.args = {\\n//   treeNodes: [\\n//     ...TREE_NODE_DATA,\\n//     {\\n//       key: \'Fruit GT\',\\n//       label: \'水果水果水果水果水果水果水果水果水果水果水果水果水果水果水果水果水果水果水果水果\',\\n//     }\\n//   ],\\n//   autocomplete: true,\\n//   searchable: true,\\n//   multiple: true,\\n//   panelWidth: \'auto\',\\n//   model: [\'Fruit\', \'Apple\']\\n// }\\n\\n// export const Disabled = Template.bind({})\\n// Disabled.args = {\\n//   treeNodes: TREE_NODE_DATA,\\n//   model: \'Apple\',\\n//   searchable: true,\\n//   label: \'水果选择器\',\\n//   initialLevel: 3,\\n//   disabled: true\\n// }\\n\\n// export const DisabledTreeView = Template.bind({})\\n// DisabledTreeView.args = {\\n//   treeNodes: TREE_NODE_DATA,\\n//   multiple: true,\\n//   treeViewer: true,\\n//   searchable: true,\\n//   model: [\'Fruit\', \'Apple\'],\\n//   disabled: true\\n// }\\n\\n// export const TreeSelectInitialLevel = Template.bind({})\\n// TreeSelectInitialLevel.args = {\\n//   treeNodes: TREE_NODE_DATA,\\n//   model: \'Apple\',\\n//   searchable: true,\\n//   label: \'水果选择器\',\\n//   initialLevel: 3\\n// }\\n\\n// export const TreeSelectValidators = Template.bind({})\\n// TreeSelectValidators.args = {\\n//   label: \'水果选择器\',\\n//   treeNodes: TREE_NODE_DATA,\\n//   searchable: true,\\n//   model: [\'Fruit\', \'Apple\'],\\n//   validators:  [(control: AbstractControl): ValidationErrors | null => {\\n//     console.log(control.value)\\n//     return Array.isArray(control.value) ? control.value.find((item) => item.key === \'Apple\')\\n//       ? {forbiddenName: \'不喜欢这个水果\'} : null : \\n//       control.value?.key === \'Apple\' ? {forbiddenName: \'不喜欢这个水果\'} : null\\n//   }]\\n// }\\n\\n// export const TreeSelectMultipleValidators = Template.bind({})\\n// TreeSelectMultipleValidators.args = {\\n//   label: \'水果选择器\',\\n//   treeNodes: TREE_NODE_DATA,\\n//   multiple: true,\\n//   searchable: true,\\n//   model: [\'Fruit\', \'Apple\'],\\n//   validators:  [(control: AbstractControl): ValidationErrors | null => {\\n//     console.log(control.value)\\n//     return Array.isArray(control.value) ? control.value.find((item) => item.key === \'Apple\')\\n//       ? {forbiddenName: \'不喜欢这个水果\'} : null : \\n//       control.value?.key === \'Apple\' ? {forbiddenName: \'不喜欢这个水果\'} : null\\n\\n//   }]\\n// }\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[]}],"modules":[],"miscellaneous":{"variables":[{"name":"A1Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"A2Sticky","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      sticky: true\\n    }\\n  }\\n}"},{"name":"A3StickyGrid","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      sticky: true,\\n      grid: true\\n    }\\n  }\\n}"},{"name":"actionsData","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-tree/member-tree.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  loadingChanging: action(\'loadingChanging\'),\\n}"},{"name":"actionsData","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/measure-select/measure-select.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  onPinTask: action(\'onPinTask\'),\\n  onArchiveTask: action(\'onArchiveTask\')\\n}"},{"name":"actionsData","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter-create/parameter-create.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  onPinTask: action(\'onPinTask\'),\\n  onArchiveTask: action(\'onArchiveTask\')\\n}"},{"name":"actionsData","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter-select/parameter-select.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  onPinTask: action(\'onPinTask\'),\\n  onArchiveTask: action(\'onArchiveTask\')\\n}"},{"name":"actionsData","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/advanced-filter/advanced-filter.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  onPinTask: action(\'onPinTask\'),\\n  onArchiveTask: action(\'onArchiveTask\')\\n}"},{"name":"actionsData","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/advanced-slicer/advanced-slicer.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  onPinTask: action(\'onPinTask\'),\\n  onArchiveTask: action(\'onArchiveTask\')\\n}"},{"name":"actionsData","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/slicer/slicer.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  onPinTask: action(\'onPinTask\'),\\n  onArchiveTask: action(\'onArchiveTask\')\\n}"},{"name":"actionsData","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/slicer-bar/slicer-bar.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  onPinTask: action(\'onPinTask\'),\\n  onArchiveTask: action(\'onArchiveTask\')\\n}"},{"name":"actionsData","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/slicers/slicers.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  onPinTask: action(\'onPinTask\'),\\n  onArchiveTask: action(\'onArchiveTask\')\\n}"},{"name":"actionsData","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  onPinTask: action(\'onPinTask\'),\\n  onArchiveTask: action(\'onArchiveTask\')\\n}"},{"name":"actionsData","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/time-filter-editor/time-filter-editor.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  onPinTask: action(\'onPinTask\'),\\n  onArchiveTask: action(\'onArchiveTask\')\\n}"},{"name":"actionsData","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/today-filter/today-filter.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  onPinTask: action(\'onPinTask\'),\\n  onArchiveTask: action(\'onArchiveTask\')\\n}"},{"name":"Appearance","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Display Density Compact\',\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Appearance","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-tree/member-tree.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'product\'\\n    },\\n    options: {\\n      searchable: true\\n    },\\n    appearance: {\\n      appearance: \'outline\',\\n      displayDensity: DisplayDensity.compact\\n    }\\n  },\\n}"},{"name":"AppearanceOutline","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {\\n      selectionType: FilterSelectionType.Multiple\\n    },\\n    appearance: {\\n      appearance: \'outline\'\\n    }\\n  }\\n}"},{"name":"AutoActiveFirst","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-tree/member-tree.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'product\'\\n    },\\n    options: {\\n      searchable: true,\\n      autoActiveFirst: true,\\n      selectionType: FilterSelectionType.Multiple\\n    },\\n    appearance: {\\n      appearance: \'outline\',\\n      displayDensity: DisplayDensity.compact\\n    }\\n  },\\n  render: (args) => ({\\n    props: {\\n      ...args,\\n      inputValue: \'\',\\n    },\\n    template: `<form>\\n<label for=\\"input\\">Custom Input:</label>\\n  <ngm-member-tree id=\\"input\\" [(ngModel)]=\\"inputValue\\" name=\\"customInput\\" ${argsToTemplate(args)}></ngm-member-tree>\\n  <p>Value: {{ inputValue | json }}</p>\\n</form>`,\\n    styles: [`.ngm-member-tree {height: 400px;}`]\\n  })\\n}"},{"name":"AVAILABLE_MEMBERS","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    value: 1,\\n    label: \'Department A\'\\n  },\\n  {\\n    value: 2,\\n    label: \'Department B\'\\n  },\\n  {\\n    value: 3,\\n    label: \'Department C\'\\n  }\\n]"},{"name":"Bottom","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/resizer/resizer.directive.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    position: \'bottom\'\\n  },\\n  render: (args: any) => ({\\n    template: `\\n    <mat-card ngmResizer [resizerHeight]=\\"200\\">\\nSimple card\\n  <div ngmResizerBar [resizerBarPosition]=\\"barPosition\\" cdkDrag></div>\\n</mat-card>`\\n  })\\n}"},{"name":"Calendar","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/compare-member-select/member-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    label: \'Dimension\',\\n    dimension: {\\n      dimension: \'[ZCALMONTH]\'\\n    }\\n  }\\n}"},{"name":"Capacity","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    capacities: [\\n      EntityCapacity.Dimension,\\n      EntityCapacity.Measure,\\n      EntityCapacity.Calculation,\\n      EntityCapacity.Indicator,\\n    ]\\n  }\\n}"},{"name":"CellTemplate","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n  },\\n  render: (args: Partial<TestCellTemplate>) => ({\\n    template: `<ngm-test-tree-table-cell-template></ngm-test-tree-table-cell-template>`\\n  })\\n}"},{"name":"ChartTypes","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Chart Types\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      },\\n      presentationVariant: {\\n        groupBy: [\\n          {\\n            dimension: \'[Department]\',\\n            level: \'[Department].[Department]\'\\n          }\\n        ]\\n      }\\n    },\\n    chartSettings: {\\n      chartTypes: [\\n        {\\n          type: \'Line\'\\n        }\\n      ]\\n    },\\n    options: {}\\n  }\\n}"},{"name":"CloseButton","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tabs/tabs.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"((args: any) => ({\\n  props: args,\\n  template: `\\n<mat-tab-group class=\\"ngm-appearance-desktop\\" disableRipple>\\n  <mat-tab label=\\"First\\">\\n    <ng-template matTabLabel>First\\n      <button mat-icon-button disableRipple displayDensity=\\"cosy\\" class=\\"ngm-appearance-desktop ngm-tab-button-right\\"\\n          [matMenuTriggerFor]=\\"pointMenu\\"\\n          [matMenuTriggerData]=\\"{point: point}\\"\\n      >\\n          <mat-icon>more_vert</mat-icon>\\n      </button>\\n    </ng-template>\\n   Content 1 </mat-tab>\\n  <mat-tab label=\\"Second\\"> Content 2 </mat-tab>\\n  <mat-tab label=\\"Third\\"> Content 3 </mat-tab>\\n</mat-tab-group>\\n<mat-menu #pointMenu=\\"matMenu\\" xPosition=\\"before\\">\\n  <button mat-menu-item>Item 1</button>\\n  <button mat-menu-item>Item 2</button>\\n</mat-menu>\\n  `,\\n  styles: [``]\\n})).bind({})"},{"name":"columns","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/table/table/table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[{ name: \'name\', caption: \'Name\' }, { name: \'caption\', caption: \'Caption\' }, { name: \'type\', caption: \'Type\' }]"},{"name":"config","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/.storybook/main.ts","deprecated":false,"deprecationMessage":"","type":"StorybookConfig","defaultValue":"{\\n  stories: [\'../**/*.mdx\', \'../**/*.stories.@(js|jsx|ts|tsx|mdx)\'],\\n  addons: [\\n    //👇 Your documentation written in MDX along with your stories goes here\\n    \'@storybook/addon-docs\',\\n    \'@storybook/addon-essentials\',\\n    \'@storybook/addon-storysource\',\\n    \'@storybook/addon-themes\'\\n  ],\\n  framework: {\\n    name: \'@storybook/angular\',\\n    options: {}\\n  },\\n  docs: {\\n    autodocs: true\\n  }\\n}"},{"name":"CustomEngine","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/copilot/stories/chat.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    copilotEngine: new StorybookCustomCopilotEngine()\\n  }\\n}"},{"name":"CustomNgmCopilotEngine","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/copilot/stories/chat.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n<div>\\n  <ngm-sb-copilot-user></ngm-sb-copilot-user>\\n  <ngm-copilot-chat ${argsToTemplate(\\n    args\\n  )} class=\\"h-[500px] w-[300px] shadow-lg rounded-lg m-4\\" style=\\"height: 500px;\\"></ngm-copilot-chat>\\n</div>`\\n  }),\\n  args: {\\n    welcomeTitle: \'Welcome to My AI Copilot\'\\n  }\\n}"},{"name":"data","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/table/table/table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'name1\',\\n    caption: \'caption1\',\\n    type: \'type1\'\\n  },\\n  {\\n    name: \'name2\',\\n    caption: \'caption2\',\\n    type: \'type2\'\\n  },\\n  {\\n    name: \'name3\',\\n    caption: \'caption3\',\\n    type: \'type3\'\\n  }\\n]"},{"name":"Day","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    granularity: TimeGranularity.Day\\n  }\\n}"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/measure-select/measure-select.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: MODEL_KEY,\\n      entitySet: CUBE_SALES_ORDER_NAME\\n    }\\n  }\\n}"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter-create/parameter-create.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: MODEL_KEY,\\n      entitySet: CUBE_SALES_ORDER_NAME\\n    },\\n    entityType: ENTITY_TYPE_SALESORDER\\n  }\\n}"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter-select/parameter-select.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: MODEL_KEY,\\n      entitySet: CUBE_SALES_ORDER_NAME\\n    },\\n    entityType: ENTITY_TYPE_SALESORDER\\n  }\\n}"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/advanced-filter/advanced-filter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {}\\n}"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/advanced-slicer/advanced-slicer.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {}\\n}"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/slicer/slicer.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    slicer: {\\n      dimension: {\\n        dimension: \'A\',\\n      },\\n      members: [\\n        {\\n          key: \'1\',\\n          caption: \'A\',\\n        },\\n        {\\n          key: \'2\',\\n          caption: \'B\',\\n        }\\n      ]\\n    }\\n  }\\n}"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/slicer-bar/slicer-bar.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    slicers: [\\n      {\\n        dimension: {\\n          dimension: \'A\',\\n        },\\n        members: [\\n          {\\n            key: \'1\',\\n            caption: \'A\',\\n          },\\n          {\\n            key: \'2\',\\n            caption: \'B\',\\n          }\\n        ]\\n      }\\n    ]\\n  }\\n}"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/slicers/slicers.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    slicers: [\\n      {\\n        dimension: {\\n          dimension: \'A\',\\n        },\\n        members: [\\n          {\\n            key: \'1\',\\n            caption: \'A\',\\n          },\\n          {\\n            key: \'2\',\\n            caption: \'B\',\\n          }\\n        ]\\n      }\\n    ]\\n  }\\n}"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    selectOptions: TREE_NODE_DATA,\\n    valueKey: \'key\'\\n  }\\n}"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {}\\n}"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/time-filter-editor/time-filter-editor.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    entityType: null\\n  }\\n}"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/today-filter/today-filter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n  }\\n}"},{"name":"DefaultValue","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    granularity: TimeGranularity.Week,\\n    defaultValue: \'2021-01-01\'\\n  }\\n}"},{"name":"Density","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {},\\n  render: (args) => ({\\n    props: args,\\n    template: `<div class=\\"flex flex-col gap-2\\">\\n<div class=\\"ngm-density__comfort\\">\\n  <ngm-input ${argsToTemplate(args)} label=\\"Comfort:\\"></ngm-input>\\n</div>\\n<div class=\\"ngm-density__cosy\\">\\n  <ngm-input ${argsToTemplate(args)} label=\\"Cosy:\\"></ngm-input>\\n</div>\\n<div class=\\"ngm-density__compact\\">\\n  <ngm-input ${argsToTemplate(args)} label=\\"Compact:\\"></ngm-input>\\n</div>\\n</div>`\\n  })\\n}"},{"name":"Density","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tag/tag.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    tags,\\n    color: \'red\'\\n  },\\n  render: (args: Partial<NgmTagsComponent>) => ({\\n    props: args,\\n    template: `<div class=\\"flex flex-col gap-2\\">\\n<div class=\\"ngm-density__comfort\\">\\n  <label>Comfort:</label>\\n  <ngm-tags ${argsToTemplate(args)}></ngm-tags>\\n</div>\\n<div class=\\"ngm-density__cosy\\">\\n  <label>Cosy:</label>\\n  <ngm-tags ${argsToTemplate(args)}></ngm-tags>\\n</div>\\n<div class=\\"ngm-density__compact\\">\\n  <label>Compact:</label>\\n  <ngm-tags ${argsToTemplate(args)}></ngm-tags>\\n</div>\\n</div>`\\n  })\\n}"},{"name":"Density","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n<div class=\\"flex items-center gap-4 p-4\\">\\n  <ngm-select label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n  </ngm-select>\\n\\n  <ngm-select searchable label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n  </ngm-select>\\n\\n\\n  <ngm-select label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n    <button ngmSuffix mat-icon-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </ngm-select>\\n  <ngm-select searchable label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n    <button ngmSuffix mat-icon-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </ngm-select>\\n  </div>\\n<div displayDensity=\\"cosy\\" class=\\"flex items-center gap-4 p-4\\">\\n  <ngm-select label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n  </ngm-select>\\n\\n  <ngm-select searchable label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n  </ngm-select>\\n\\n\\n  <ngm-select label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n    <button ngmSuffix mat-icon-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </ngm-select>\\n  <ngm-select searchable label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n    <button ngmSuffix mat-icon-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </ngm-select>\\n</div>\\n\\n<div displayDensity=\\"compact\\" class=\\"flex items-center gap-4 p-4\\">\\n  <ngm-select label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n  </ngm-select>\\n\\n  <ngm-select searchable label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n  </ngm-select>\\n\\n  <ngm-select label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\" displayDensity=\\"compact\\">\\n    <button ngmSuffix mat-icon-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </ngm-select>\\n  <ngm-select searchable label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n    <button ngmSuffix mat-icon-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </ngm-select>\\n</div>\\n    `\\n  }),\\n  args: {\\n    selectOptions: TREE_NODE_DATA,\\n    valueKey: \'key\'\\n  }\\n}"},{"name":"DensityCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Analytical Grid compact\',\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"DensityCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/breadcrumb/breadcrumb.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `<ngm-breadcrumb-bar [steps]=\\"steps\\" displayDensity=\\"compact\\"></ngm-breadcrumb-bar>`,\\n  }),\\n  args: {\\n    steps: [\\n      {\\n        value: \'A\',\\n        label: \'Step A\',\\n        active: true\\n      },\\n      {\\n        value: \'B\',\\n        label: \'Step B\',\\n        active: false\\n      }\\n    ]\\n  }\\n}"},{"name":"DensityCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/search/search.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    displayDensity: DisplayDensity.compact\\n  },\\n  render: (args: Partial<NgmSearchComponent>) => ({\\n    args,\\n    template: `<div class=\\"ngm-density__compact\\">\\n    <ngm-search ${argsToTemplate(args)}></ngm-search>\\n</div>`\\n  })\\n}"},{"name":"DensityCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    data: TREE_NODE_DATA,\\n    columns: [\\n      {\\n        name: \'type\',\\n        caption: \'类型\'\\n      }\\n    ],\\n    displayDensity: DisplayDensity.compact\\n  }\\n}"},{"name":"DensityCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {},\\n    appearance: {\\n    },\\n    displayDensity: DisplayDensity.compact\\n  }\\n}"},{"name":"DensityCosy","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/breadcrumb/breadcrumb.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `<ngm-breadcrumb-bar [steps]=\\"steps\\" displayDensity=\\"cosy\\"></ngm-breadcrumb-bar>`,\\n  }),\\n  args: {\\n    steps: [\\n      {\\n        value: \'A\',\\n        label: \'Step A\',\\n        active: true\\n      },\\n      {\\n        value: \'B\',\\n        label: \'Step B\',\\n        active: false\\n      }\\n    ]\\n  }\\n}"},{"name":"DescriptionAndId","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/display-behaviour/display-behaviour.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: { \\n    option: {\\n      value: 1,\\n      label: \'A\'\\n    },\\n    displayBehaviour: DisplayBehaviour.descriptionAndId\\n  }\\n}"},{"name":"DimensionWithHierarchy","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/property-select/property-select.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    label: \'Property Select\',\\n    dataSettings: {\\n      dataSource: \'key_sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    entityType: ENTITY_TYPE,\\n    capacities: [\\n      PropertyCapacity.Dimension,\\n      PropertyCapacity.Measure,\\n      PropertyCapacity.Parameter\\n    ],\\n    inputValue: {\\n      dimension: \'[Customers]\',\\n      hierarchy: \'[Customers]\',\\n      level: \'[Customers].[Country]\'\\n    }\\n  }\\n}"},{"name":"Disabled","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    disabled: true\\n  }\\n}"},{"name":"Disabled","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tag/tag.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    tags,\\n    color: \'blue\',\\n    disabled: true\\n  }\\n}"},{"name":"Disabled","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    props: {\\n      dataSettings: {\\n        dataSource: \'Sales\',\\n        entitySet: \'SalesOrder3s\'\\n      },\\n      dimension: {\\n        dimension: \'Department\'\\n      },\\n      options: {},\\n      disabled: true,\\n    },\\n    model: {\\n      members: [\\n        {\\n          key: \'1\',\\n          caption: \'Department 1\'\\n        },\\n        {\\n          key: \'2\',\\n          caption: \'Department 2\'\\n        }\\n      ]\\n    }\\n  },\\n  render: (args) => ({\\n    props: {\\n      ...args.props,\\n      model: args.model\\n    },\\n    template: `<div class=\\"flex flex-col gap-2\\">\\n  <ngm-smart-filter ${argsToTemplate(args.props)}></ngm-smart-filter>\\n  <ngm-smart-filter ${argsToTemplate(args.props)} [ngModel]=\\"model\\"></ngm-smart-filter>\\n</div>\\n    \\n    `,\\n    styles: [\\n      `.ngm-smart-filter {\\n        width: 100px;\\n      }`\\n    ]\\n  })\\n}"},{"name":"DisplayHierarchy","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Analytical Grid Hierarchy\',\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\',\\n            displayHierarchy: true\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"DrillDimensions","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Drill Dimensions\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      },\\n      presentationVariant: {\\n        groupBy: [\\n          {\\n            dimension: \'[Department]\',\\n            level: \'[Department].[Department]\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Editable","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/slicer/slicer.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    editable: true,\\n    slicer: {\\n      dimension: {\\n        dimension: \'A\',\\n      },\\n      members: [\\n        {\\n          key: \'1\',\\n          caption: \'A\',\\n        },\\n        {\\n          key: \'2\',\\n          caption: \'B\',\\n        }\\n      ]\\n    },\\n    dataSettings: {\\n      dataSource: MODEL_KEY,\\n      entitySet: CUBE_SALES_ORDER_NAME\\n    }\\n  }\\n}"},{"name":"Editable","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/slicer-bar/slicer-bar.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    editable: true,\\n    slicers: [\\n      {\\n        dimension: {\\n          dimension: \'A\',\\n        },\\n        members: [\\n          {\\n            key: \'1\',\\n            caption: \'A\',\\n          },\\n          {\\n            key: \'2\',\\n            caption: \'B\',\\n          }\\n        ]\\n      }\\n    ],\\n    dataSettings: {\\n      dataSource: MODEL_KEY,\\n      entitySet: CUBE_SALES_ORDER_NAME\\n    }\\n  }\\n}"},{"name":"Editable","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/slicers/slicers.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    editable: true,\\n    slicers: [\\n      {\\n        dimension: {\\n          dimension: \'A\',\\n        },\\n        members: [\\n          {\\n            key: \'1\',\\n            caption: \'A\',\\n          },\\n          {\\n            key: \'2\',\\n            caption: \'B\',\\n          }\\n        ]\\n      }\\n    ],\\n    dataSettings: {\\n      dataSource: MODEL_KEY,\\n      entitySet: CUBE_SALES_ORDER_NAME\\n    }\\n  }\\n}"},{"name":"Empty","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Empty Data\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'Empty\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"ENTITY_TYPE","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/property-select/property-select.stories.ts","deprecated":false,"deprecationMessage":"","type":"EntityType","defaultValue":"{\\n  name: \'Sales\',\\n  visible: true,\\n  properties: {\\n    A: {\\n      name: \'A\',\\n      caption: \'Field A\',\\n      role: AggregationRole.dimension,\\n      hierarchies: [\\n        {\\n          name: \'[A]\',\\n          caption: \'H-A\',\\n          role: AggregationRole.hierarchy,\\n          levels: [\\n            {\\n              name: \'[A].[All]\',\\n              caption: \'[A] Level 00\',\\n              role: AggregationRole.level,\\n              levelNumber: 0\\n            },\\n            {\\n              name: \'[A].[Description]\',\\n              caption: \'[A] Level 01\',\\n              role: AggregationRole.level,\\n              levelNumber: 1,\\n              properties: [\\n                {\\n                  name: \'[TEXTSH]\',\\n                  caption: \'短文本\'\\n                },\\n                {\\n                  name: \'[TEXTMD]\',\\n                  caption: \'中文本\'\\n                },\\n                {\\n                  name: \'[TEXTLG]\',\\n                  caption: \'长文本\'\\n                }\\n              ]\\n            }\\n          ]\\n        }\\n      ]\\n    },\\n    B: {\\n      name: \'B\',\\n      caption: \'Field B\',\\n      role: AggregationRole.dimension\\n    },\\n    C: {\\n      name: \'C\',\\n      caption: \'Field C\',\\n      role: AggregationRole.measure\\n    },\\n    D: {\\n      name: \'D\',\\n      caption: \'Field D\',\\n      role: AggregationRole.measure,\\n      calculationType: CalculationType.Calculated,\\n      formula: \'C / 100\'\\n    } as CalculatedProperty\\n  }\\n}"},{"name":"Error","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Error\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales1\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Error","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Analytical Grid Error\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales1\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      showToolbar: true\\n    }\\n  }\\n}"},{"name":"Focus","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/search/search.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {},\\n  render: (args: Partial<NgmSearchComponent>) => ({\\n    args,\\n    template: `<ngm-search ${argsToTemplate(args)} cdkMonitorSubtreeFocus></ngm-search>`\\n  })\\n}"},{"name":"Grid","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    data: TREE_NODE_DATA,\\n    columns: [\\n      {\\n        name: \'type\',\\n        caption: \'类型\'\\n      }\\n    ],\\n    displayDensity: DisplayDensity.compact,\\n    grid: true\\n  }\\n}"},{"name":"HideButtons","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Hide Buttons\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"InitialLevel","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    data: TREE_NODE_DATA,\\n    columns: [\\n      {\\n        name: \'type\',\\n        caption: \'类型\'\\n      }\\n    ],\\n    initialLevel: Number.MAX_SAFE_INTEGER\\n  }\\n}"},{"name":"Left","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/resizer/resizer.directive.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    position: \'left\'\\n  },\\n}"},{"name":"Loading","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Loading\',\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder10s\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Loading","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Loading Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder10s\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Menu","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/core/directives/density.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {},\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n<div class=\\"flex flex-col\\">\\n  <label>Comfortable</label>\\n  <button mat-icon-button displayDensity=\\"comfortable\\" class=\\"pac-model__nav-action\\"\\n    [matMenuTriggerFor]=\\"menu1\\"\\n    #mt=\\"matMenuTrigger\\"\\n    [class.active]=\\"mt.menuOpen\\"\\n    (click)=\\"$event.stopPropagation();$event.preventDefault()\\">\\n    <mat-icon>more_vert</mat-icon>\\n  </button>\\n\\n  <mat-menu #menu1=\\"matMenu\\" class=\\"ngm-density__comfortable\\">\\n    <button mat-menu-item>\\n        <mat-icon fontSet=\\"material-icons-outlined\\">stars</mat-icon>\\n        <span>{{ \'PAC.MODEL.SaveAsDefaultCube\' | translate: {Default: \\"Save as Default Cube\\"} }}</span>\\n    </button>\\n    <button mat-menu-item class=\\"ngm-appearance-danger\\">\\n        <mat-icon fontSet=\\"material-icons-round\\">delete_forever</mat-icon>\\n        <span>{{ \'PAC.ACTIONS.Delete\' | translate: {Default: \\"Delete\\"} }}</span>\\n    </button>\\n  </mat-menu>\\n\\n  <label>Cosy</label>\\n  <button mat-icon-button displayDensity=\\"cosy\\" class=\\"pac-model__nav-action\\"\\n    [matMenuTriggerFor]=\\"menu2\\"\\n    #mt=\\"matMenuTrigger\\"\\n    [class.active]=\\"mt.menuOpen\\"\\n    (click)=\\"$event.stopPropagation();$event.preventDefault()\\">\\n    <mat-icon>more_vert</mat-icon>\\n  </button>\\n\\n  <mat-menu #menu2=\\"matMenu\\" class=\\"ngm-density__cosy\\">\\n    <button mat-menu-item>\\n        <mat-icon fontSet=\\"material-icons-outlined\\">stars</mat-icon>\\n        <span>{{ \'PAC.MODEL.SaveAsDefaultCube\' | translate: {Default: \\"Save as Default Cube\\"} }}</span>\\n    </button>\\n    <button mat-menu-item class=\\"ngm-appearance-danger\\">\\n        <mat-icon fontSet=\\"material-icons-round\\">delete_forever</mat-icon>\\n        <span>{{ \'PAC.ACTIONS.Delete\' | translate: {Default: \\"Delete\\"} }}</span>\\n    </button>\\n  </mat-menu>\\n\\n  <label>Compact</label>\\n\\n  <button mat-icon-button displayDensity=\\"compact\\" class=\\"pac-model__nav-action\\"\\n    [matMenuTriggerFor]=\\"menu3\\"\\n    #mt=\\"matMenuTrigger\\"\\n    [class.active]=\\"mt.menuOpen\\"\\n    (click)=\\"$event.stopPropagation();$event.preventDefault()\\">\\n    <mat-icon>more_vert</mat-icon>\\n  </button>\\n\\n  <mat-menu #menu3=\\"matMenu\\" class=\\"ngm-density__compact\\">\\n    <button mat-menu-item>\\n        <mat-icon fontSet=\\"material-icons-outlined\\">stars</mat-icon>\\n        <span>{{ \'PAC.MODEL.SaveAsDefaultCube\' | translate: {Default: \\"Save as Default Cube\\"} }}</span>\\n    </button>\\n    <button mat-menu-item class=\\"ngm-appearance-danger\\">\\n        <mat-icon fontSet=\\"material-icons-round\\">delete_forever</mat-icon>\\n        <span>{{ \'PAC.ACTIONS.Delete\' | translate: {Default: \\"Delete\\"} }}</span>\\n    </button>\\n  </mat-menu>\\n</div>\\n    `\\n  })\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmInputComponent>","defaultValue":"{\\n  title: \'Common/Input\',\\n  component: NgmInputComponent,\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations()]\\n    }),\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [OcapCoreModule]\\n    })\\n  ]\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/compare-member-select/member-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"{\\n  title: \'Entity/CompareMemberSelect\',\\n  component: NgmCompareMemberSelectComponent,\\n  decorators: [\\n    applicationConfig({\\n      providers: [\\n        provideAnimations(),\\n        provideHttpClient(),\\n        provideTranslate(),\\n        provideLogger(),\\n        importProvidersFrom(MonacoEditorModule.forRoot())\\n      ]\\n    }),\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [MonacoEditorModule]\\n    })\\n  ]\\n} as Meta"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmEntitySchemaComponent>","defaultValue":"{\\n  title: \'Entity/EntitySchema\',\\n  component: NgmEntitySchemaComponent,\\n  decorators: [\\n    applicationConfig({\\n      providers: [\\n        provideAnimations(),\\n        provideTranslate(),\\n        provideHttpClient(),\\n        provideOcapCore(),\\n        {\\n          provide: OCAP_AGENT_TOKEN,\\n          useClass: MockAgent,\\n          multi: true\\n        },\\n        {\\n          provide: OCAP_DATASOURCE_TOKEN,\\n          useValue: {\\n            type: \'SQL\',\\n            factory: async (): Promise<Type<DataSource>> => {\\n              const { SQLDataSource } = await import(\'@metad/ocap-sql\')\\n              return SQLDataSource\\n            }\\n          },\\n          multi: true\\n        },\\n        {\\n          provide: OCAP_MODEL_TOKEN,\\n          useValue: {\\n            name: \'Sales\',\\n            type: \'SQL\',\\n            agentType: AgentType.Browser,\\n            settings: {\\n              ignoreUnknownProperty: true\\n            },\\n            schema: {\\n              cubes: [CUBE_SALES_ORDER]\\n            }\\n          },\\n          multi: true\\n        }\\n      ]\\n    }),\\n    moduleMetadata({\\n      imports: [BrowserAnimationsModule, MatSidenavModule, DragDropModule, NgmEntitySchemaComponent, DragComponent],\\n      providers: [NgmDSCoreService]\\n    })\\n  ]\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/measure-select/measure-select.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmMeasureSelectComponent>","defaultValue":"{\\n  title: \'Entity/MeasureSelect\',\\n  component: NgmMeasureSelectComponent,\\n  excludeStories: /.*Data$/,\\n  tags: [\'autodocs\'],\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideOcapMock(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      //👇 Imports both components to allow component composition with Storybook\\n      declarations: [],\\n      imports: []\\n    }),\\n    //👇 Wraps our stories with a decorator\\n    componentWrapperDecorator((story) => `<div style=\\"margin: 3em\\">${story}</div>`)\\n  ],\\n  render: (args) => ({\\n    props: {\\n      ...args\\n    },\\n    template: `<ngm-measure-select ${argsToTemplate(args)}></ngm-measure-select>`\\n  })\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/property-select/property-select.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmPropertySelectComponent>","defaultValue":"{\\n  title: \'Entity/PropertySelect\',\\n  component: NgmPropertySelectComponent,\\n  excludeStories: /.*Data$/,\\n  tags: [\'autodocs\'],\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideOcapMock(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      //👇 Imports both components to allow component composition with Storybook\\n      declarations: [],\\n      imports: [\\n        FormsModule,\\n        NgmPropertySelectComponent\\n      ]\\n    }),\\n    //👇 Wraps our stories with a decorator\\n    componentWrapperDecorator((story) => `<div style=\\"margin: 3em\\">${story}</div>`)\\n  ],\\n  render: (args) => ({\\n    props: {\\n      ...args,\\n    },\\n    template: `<ngm-property-select [(ngModel)]=\\"inputValue\\" ${argsToTemplate(args)}></ngm-property-select>`\\n  })\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmParameterComponent>","defaultValue":"{\\n  title: \'Parameter/ParameterComponent\',\\n  component: NgmParameterComponent,\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideOcapMock(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      imports: [NgmParameterComponent],\\n      providers: []\\n    })\\n  ]\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter-create/parameter-create.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmParameterCreateComponent>","defaultValue":"{\\n  title: \'Parameter/ParameterCreate\',\\n  component: NgmParameterCreateComponent,\\n  excludeStories: /.*Data$/,\\n  tags: [\'autodocs\'],\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideOcapMock(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      //👇 Imports both components to allow component composition with Storybook\\n      declarations: [],\\n      imports: []\\n    }),\\n    //👇 Wraps our stories with a decorator\\n    componentWrapperDecorator((story) => `<div style=\\"margin: 3em\\">${story}</div>`)\\n  ],\\n  render: (args) => ({\\n    props: {\\n      ...args\\n    },\\n    template: `<ngm-parameter-create ${argsToTemplate(args)}></ngm-parameter-create>`\\n  })\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter-select/parameter-select.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmParameterSelectComponent>","defaultValue":"{\\n  title: \'Parameter/ParameterSelect\',\\n  component: NgmParameterSelectComponent,\\n  excludeStories: /.*Data$/,\\n  tags: [\'autodocs\'],\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideOcapMock(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      //👇 Imports both components to allow component composition with Storybook\\n      declarations: [],\\n      imports: []\\n    }),\\n    //👇 Wraps our stories with a decorator\\n    componentWrapperDecorator((story) => `<div style=\\"margin: 3em\\">${story}</div>`)\\n  ],\\n  render: (args) => ({\\n    props: {\\n      ...args\\n    },\\n    template: `<ngm-parameter-select ${argsToTemplate(args)}></ngm-parameter-select>`\\n  })\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/advanced-filter/advanced-filter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmAdvancedFilterComponent>","defaultValue":"{\\n  title: \'Selection/AdvancedFilter\',\\n  component: NgmAdvancedFilterComponent,\\n  excludeStories: /.*Data$/,\\n  tags: [\'autodocs\'],\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideOcapMock(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      //👇 Imports both components to allow component composition with Storybook\\n      declarations: [],\\n      imports: [NgmAdvancedFilterModule]\\n    }),\\n    //👇 Wraps our stories with a decorator\\n    componentWrapperDecorator((story) => `<div style=\\"margin: 3em\\">${story}</div>`)\\n  ],\\n  render: (args) => ({\\n    props: {\\n      ...args\\n    },\\n    template: `<ngm-advanced-filter ${argsToTemplate(args)}></ngm-advanced-filter>`\\n  })\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/advanced-slicer/advanced-slicer.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmAdvancedSlicerComponent>","defaultValue":"{\\n  title: \'Selection/AdvancedSlicer\',\\n  component: NgmAdvancedSlicerComponent,\\n  excludeStories: /.*Data$/,\\n  tags: [\'autodocs\'],\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideOcapMock(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      //👇 Imports both components to allow component composition with Storybook\\n      declarations: [],\\n      imports: []\\n    }),\\n    //👇 Wraps our stories with a decorator\\n    componentWrapperDecorator((story) => `<div style=\\"margin: 3em\\">${story}</div>`)\\n  ],\\n  render: (args) => ({\\n    props: {\\n      ...args\\n    },\\n    template: `<ngm-advanced-slicer ${argsToTemplate(args)}></ngm-advanced-slicer>`\\n  })\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/slicer/slicer.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<SlicerComponent>","defaultValue":"{\\n  title: \'Selection/Slicer\',\\n  component: SlicerComponent,\\n  excludeStories: /.*Data$/,\\n  tags: [\'autodocs\'],\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideOcapMock(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      //👇 Imports both components to allow component composition with Storybook\\n      declarations: [],\\n      imports: [NgmSelectionModule]\\n    }),\\n    //👇 Wraps our stories with a decorator\\n    componentWrapperDecorator((story) => `<div style=\\"margin: 3em\\">${story}</div>`)\\n  ],\\n  render: (args) => ({\\n    props: {\\n      ...args\\n    },\\n    template: `<ngm-slicer ${argsToTemplate(args)}></ngm-slicer>`\\n  })\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/slicer-bar/slicer-bar.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<SlicerBarComponent>","defaultValue":"{\\n  title: \'Selection/SlicerBar\',\\n  component: SlicerBarComponent,\\n  excludeStories: /.*Data$/,\\n  tags: [\'autodocs\'],\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideOcapMock(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      //👇 Imports both components to allow component composition with Storybook\\n      declarations: [],\\n      imports: [NgmSelectionModule]\\n    }),\\n    //👇 Wraps our stories with a decorator\\n    componentWrapperDecorator((story) => `<div style=\\"margin: 3em\\">${story}</div>`)\\n  ],\\n  render: (args) => ({\\n    props: {\\n      ...args\\n    },\\n    template: `<ngm-slicer-bar ${argsToTemplate(args)}></ngm-slicer-bar>`\\n  })\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/slicers/slicers.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<SlicersComponent>","defaultValue":"{\\n  title: \'Selection/Slicers\',\\n  component: SlicersComponent,\\n  excludeStories: /.*Data$/,\\n  tags: [\'autodocs\'],\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideOcapMock(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      //👇 Imports both components to allow component composition with Storybook\\n      declarations: [],\\n      imports: [NgmSelectionModule]\\n    }),\\n    //👇 Wraps our stories with a decorator\\n    componentWrapperDecorator((story) => `<div style=\\"margin: 3em\\">${story}</div>`)\\n  ],\\n  render: (args) => ({\\n    props: {\\n      ...args\\n    },\\n    template: `<ngm-slicers ${argsToTemplate(args)}></ngm-slicers>`\\n  })\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmSelectComponent>","defaultValue":"{\\n  title: \'Common/Select\',\\n  component: NgmSelectComponent,\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [MatButtonModule, MatIconModule, OcapCoreModule, NgmSelectModule]\\n    })\\n  ]\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/table/table/table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmTableComponent>","defaultValue":"{\\n  title: \'Common/Table\',\\n  component: NgmTableComponent,\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [OcapCoreModule]\\n    })\\n  ]\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmMemberDatepickerComponent>","defaultValue":"{\\n  title: \'Selection/Datepicker\',\\n  component: NgmMemberDatepickerComponent,\\n  excludeStories: /.*Data$/,\\n  tags: [\'autodocs\'],\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideOcapMock(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      //👇 Imports both components to allow component composition with Storybook\\n      declarations: [],\\n      imports: [NgmMemberDatepickerModule, NgmYearpickerComponent]\\n    }),\\n    //👇 Wraps our stories with a decorator\\n    componentWrapperDecorator((story) => `<div style=\\"margin: 3em\\">${story}</div>`)\\n  ],\\n  render: (args) => ({\\n    props: {\\n      ...args\\n    },\\n    template: `<ngm-member-datepicker ${argsToTemplate(args)}></ngm-member-datepicker>`\\n  })\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/time-filter-editor/time-filter-editor.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmTimeFilterEditorComponent>","defaultValue":"{\\n  title: \'Selection/TimeFilterEditor\',\\n  component: NgmTimeFilterEditorComponent,\\n  excludeStories: /.*Data$/,\\n  tags: [\'autodocs\'],\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideOcapMock(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      //👇 Imports both components to allow component composition with Storybook\\n      declarations: [],\\n      imports: []\\n    }),\\n    //👇 Wraps our stories with a decorator\\n    componentWrapperDecorator((story) => `<div style=\\"margin: 3em\\">${story}</div>`)\\n  ],\\n  render: (args) => ({\\n    props: {\\n      ...args\\n    },\\n    template: `<ngm-time-filter-editor ${argsToTemplate(args)}></ngm-time-filter-editor>`\\n  })\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/today-filter/today-filter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmTodayFilterComponent>","defaultValue":"{\\n  title: \'Selection/TodayFilter\',\\n  component: NgmTodayFilterComponent,\\n  excludeStories: /.*Data$/,\\n  tags: [\'autodocs\'],\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideOcapMock(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      //👇 Imports both components to allow component composition with Storybook\\n      declarations: [],\\n      imports: []\\n    }),\\n    //👇 Wraps our stories with a decorator\\n    componentWrapperDecorator((story) => `<div style=\\"margin: 3em\\">${story}</div>`)\\n  ],\\n  render: (args) => ({\\n    props: {\\n      ...args\\n    },\\n    template: `<ngm-today-filter ${argsToTemplate(args)}></ngm-today-filter>`\\n  })\\n}"},{"name":"Month","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    granularity: TimeGranularity.Month\\n  }\\n}"},{"name":"MultipleMeasures","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Multiple Measures Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: \'[Department]\'\\n          },\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          },\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Cost\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Paginator","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/table/table/table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    columns,\\n    data,\\n    paging: true\\n  }\\n}"},{"name":"Paging","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      paging: true,\\n      pageSize: 3\\n    }\\n  }\\n}"},{"name":"PagingCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      paging: true,\\n      pageSize: 3\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    }\\n  }\\n}"},{"name":"PagingError","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales1\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      paging: true,\\n      pageSize: 3,\\n      showToolbar: true\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    }\\n  }\\n}"},{"name":"ParameterInput","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentInput\',\\n      paramType: ParameterControlEnum.Input\\n    }\\n  }\\n}"},{"name":"ParameterInputNumber","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentInput\',\\n      paramType: ParameterControlEnum.Input,\\n      dataType: \'number\'\\n    }\\n  }\\n}"},{"name":"ParameterInputString","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentInput\',\\n      paramType: ParameterControlEnum.Input,\\n      dataType: \'string\'\\n    }\\n  }\\n}"},{"name":"ParameterSelect","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentSelect\',\\n      paramType: ParameterControlEnum.Select,\\n      availableMembers: AVAILABLE_MEMBERS\\n    }\\n  }\\n}"},{"name":"ParameterSelectDensity","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentSelect\',\\n      paramType: ParameterControlEnum.Select,\\n      availableMembers: AVAILABLE_MEMBERS\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    }\\n  }\\n}"},{"name":"ParameterSelectMultiple","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentSelect\',\\n      paramType: ParameterControlEnum.Select,\\n      availableMembers: AVAILABLE_MEMBERS\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    options: {\\n      selectionType: FilterSelectionType.Multiple\\n    }\\n  }\\n}"},{"name":"Pipe","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    data: TREE_NODE_DATA,\\n    columns: [\\n      {\\n        name: \'type\',\\n        caption: \'类型\',\\n        pipe: (value) => {\\n          return `Type is ` + value\\n        }\\n      }\\n    ],\\n    displayDensity: DisplayDensity.compact,\\n    striped: true\\n  }\\n}"},{"name":"Prefix","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n<ngm-smart-filter [dataSettings]=\\"dataSettings\\" [dimension]=\\"dimension\\" [options]=\\"options\\">\\n    <div ngmPrefix>\\n      <mat-icon>search</mat-icon>\\n    </div>\\n</ngm-smart-filter>\\n    `\\n  }),\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {}\\n  }\\n}"},{"name":"preview","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/.storybook/preview.ts","deprecated":false,"deprecationMessage":"","type":"Preview","defaultValue":"{\\n  parameters: {\\n    docs: {\\n      toc: true, // 👈 Enables the table of contents\\n    },\\n  },\\n  decorators: [\\n    withThemeByClassName({\\n      themes: {\\n        light: \'\',\\n        dark: \'dark\',\\n      },\\n      defaultTheme: \'light\',\\n    }),\\n  ]\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Primary Analytical Card\',\\n    appearance: {\\n      // displayBehaviour: DisplayBehaviour.auto,\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/breadcrumb/breadcrumb.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    steps: [\\n      {\\n        value: \'A\',\\n        label: \'Step A\',\\n        active: true\\n      },\\n      {\\n        value: \'B\',\\n        label: \'Step B\',\\n        active: false\\n      }\\n    ]\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/display-behaviour/display-behaviour.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: { \\n    option: {\\n      value: 1,\\n      label: \'A\'\\n    }\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {}\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/resizer/resizer.directive.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    position: \'right\'\\n  },\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/search/search.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {}\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tabs/tabs.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n  },\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tag/tag.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    color: \'primary\',\\n    tags\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    data: TREE_NODE_DATA,\\n    columns: [\\n      {\\n        name: \'type\',\\n        caption: \'类型\'\\n      }\\n    ]\\n  },\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-tree/member-tree.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'product\'\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    }\\n  },\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\',\\n      displayBehaviour: DisplayBehaviour.auto\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/copilot/stories/chat.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    welcomeTitle: \'Welcome to My AI Copilot\'\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/copilot/stories/not-enabled.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Primary\',\\n    welcomeTitle: \'Welcome to My AI Copilot\',\\n    welcomeSubTitle: \'Your AI Copilot\'\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/core/directives/appearance.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: ButtonGroupDirective) => ({\\n    template: `\\n    <mat-slide-toggle>Slide me!</mat-slide-toggle>\\n  \\n  <div >\\n  <div >\\n    <mat-icon>share</mat-icon>\\n    <mat-icon displayDensity=\\"cosy\\">share</mat-icon>\\n    <mat-icon displayDensity=\\"compact\\">share</mat-icon>\\n  </div>\\n  \\n  <div>\\n    <button mat-icon-button ngmAppearance=\\"danger\\">\\n      <mat-icon>share</mat-icon>\\n    </button>\\n    <button mat-icon-button ngmAppearance=\\"acrylic\\">\\n      <mat-icon>share</mat-icon>\\n    </button>\\n    <button mat-icon-button displayDensity=\\"cosy\\">\\n      <mat-icon>share</mat-icon>\\n    </button>\\n    <button mat-icon-button displayDensity=\\"compact\\">\\n      <mat-icon>share</mat-icon>\\n    </button>\\n  </div>\\n  \\n  <div>\\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" ngmAppearance=\\"color\\" color=\\"primary\\">\\n      <mat-button-toggle value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" ngmAppearance=\\"color\\" color=\\"accent\\">\\n      <mat-button-toggle value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" displayDensity=\\"compact\\"\\n      ngmAppearance=\\"color\\" color=\\"accent\\"\\n      [value]=\\"\'italic\'\\">\\n      <mat-button-toggle disableRipple value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle disableRipple value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle disableRipple value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" multiple=\\"true\\" displayDensity=\\"compact\\"\\n      ngmAppearance=\\"color\\" color=\\"accent\\">\\n      <mat-button-toggle disableRipple value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle disableRipple value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle disableRipple value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" vertical ngmAppearance=\\"color\\" color=\\"primary\\">\\n      <mat-button-toggle value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" vertical multiple=\\"true\\" displayDensity=\\"compact\\"\\n      ngmAppearance=\\"color\\" color=\\"accent\\">\\n      <mat-button-toggle disableRipple value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle disableRipple value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle disableRipple value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" ngmAppearance=\\"outline\\" color=\\"primary\\">\\n      <mat-button-toggle value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" ngmAppearance=\\"outline\\" color=\\"primary\\" displayDensity=\\"compact\\">\\n      <mat-button-toggle value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  </div>\\n  \\n  <div>\\n    <mat-chip-list aria-label=\\"Fish selection\\" >\\n      <mat-chip>One fish</mat-chip>\\n      <mat-chip>Two fish</mat-chip>\\n      <mat-chip color=\\"primary\\" selected>Primary fish</mat-chip>\\n      <mat-chip color=\\"accent\\" selected>Accent fish</mat-chip>\\n      <mat-chip color=\\"warn\\" selected>warn fish</mat-chip>\\n    </mat-chip-list>\\n  \\n    <mat-chip-list aria-label=\\"Fish selection\\" ngmAppearance=\\"outline\\">\\n      <mat-chip>One fish</mat-chip>\\n      <mat-chip>Two fish</mat-chip>\\n      <mat-chip color=\\"primary\\" selected>Primary fish</mat-chip>\\n      <mat-chip color=\\"accent\\" selected>Accent fish</mat-chip>\\n      <mat-chip color=\\"warn\\" selected>warn fish</mat-chip>\\n    </mat-chip-list>\\n  \\n    <mat-chip-list aria-label=\\"Fish selection\\" ngmAppearance=\\"dashed\\">\\n      <mat-chip>One fish</mat-chip>\\n      <mat-chip>Two fish</mat-chip>\\n      <mat-chip color=\\"primary\\" selected>Primary fish</mat-chip>\\n      <mat-chip color=\\"accent\\" selected>Accent fish</mat-chip>\\n      <mat-chip color=\\"warn\\" selected>warn fish</mat-chip>\\n    </mat-chip-list>\\n  \\n    <mat-chip-list aria-label=\\"Fish selection\\" ngmAppearance=\\"outline\\" displayDensity=\\"compact\\">\\n      <mat-chip>One fish</mat-chip>\\n      <mat-chip>Two fish</mat-chip>\\n      <mat-chip color=\\"primary\\" selected>Primary fish</mat-chip>\\n      <mat-chip color=\\"accent\\" selected>Accent fish</mat-chip>\\n      <mat-chip color=\\"warn\\" selected>warn fish</mat-chip>\\n    </mat-chip-list>\\n  </div>\\n  \\n  <div fxLayout=\\"row wrap\\" fxLayoutAlign=\\"space-between center\\" >\\n    <div ngmButtonGroup>\\n      <button mat-button>Click me!</button>\\n      <button mat-raised-button color=\\"primary\\">Click me!</button>\\n    </div>\\n  \\n    <div ngmButtonGroup>\\n      <button mat-flat-button>Click me!</button>\\n      <button mat-raised-button color=\\"primary\\">Click me!</button>\\n      <button mat-raised-button color=\\"accent\\">Click me!</button>\\n    </div>\\n  \\n    <div ngmButtonGroup displayDensity=\\"cosy\\">\\n      <button mat-flat-button displayDensity=\\"cosy\\">Click me!</button>\\n      <button mat-raised-button color=\\"primary\\" displayDensity=\\"cosy\\">Click me!</button>\\n      <button mat-raised-button color=\\"accent\\" displayDensity=\\"cosy\\">Click me!</button>\\n    </div>\\n  \\n    <div ngmButtonGroup displayDensity=\\"compact\\">\\n      <button mat-flat-button displayDensity=\\"compact\\">Click me!</button>\\n      <button mat-raised-button color=\\"primary\\" displayDensity=\\"compact\\">Click me!</button>\\n      <button mat-raised-button color=\\"accent\\" displayDensity=\\"compact\\">Click me!</button>\\n    </div>\\n  </div>\\n  \\n  <div fxLayout=\\"row wrap\\" fxLayoutAlign=\\"space-between center\\" >\\n    <button mat-button color=\\"accent\\" [loading]=\\"true\\">Accent</button>\\n  \\n    <button mat-flat-button [loading]=\\"true\\">Confortable</button>\\n    <button mat-flat-button displayDensity=\\"cosy\\" [loading]=\\"true\\">Cosy</button>\\n    <button mat-flat-button displayDensity=\\"compact\\" [loading]=\\"true\\">Compact</button>\\n  \\n    <button mat-raised-button color=\\"primary\\" [loading]=\\"true\\">Primary</button>\\n    <button mat-raised-button color=\\"accent\\" [loading]=\\"true\\">Accent</button>\\n  \\n    <button mat-stroked-button color=\\"accent\\" [loading]=\\"true\\">Accent</button>\\n  \\n    <button mat-icon-button [loading]=\\"true\\" color=\\"primary\\">\\n      <mat-icon>more_vert</mat-icon>\\n    </button>\\n    <button mat-fab [loading]=\\"true\\" color=\\"primary\\">\\n      <mat-icon>delete</mat-icon>\\n    </button>\\n    <button mat-mini-fab [loading]=\\"true\\" color=\\"primary\\">\\n      <mat-icon>menu</mat-icon>\\n    </button>\\n  </div>\\n  \\n  <div fxLayout=\\"row wrap\\" fxLayoutAlign=\\"space-between center\\" >\\n    <div ngmButtonGroup>\\n      <button mat-button>Click me!</button>\\n      <button mat-raised-button color=\\"accent\\" [loading]=\\"true\\">Click me!</button>\\n    </div>\\n  </div>\\n  </div>\\n    `,\\n    props: args\\n  }),\\n  args: {\\n    text: \'Click me!\',\\n    padding: 10,\\n    disabled: true\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/core/directives/density.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {},\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n    <div>\\n      <mat-icon>share</mat-icon>\\n      <mat-icon displayDensity=\\"cosy\\">share</mat-icon>\\n      <mat-icon displayDensity=\\"compact\\">share</mat-icon>\\n    </div>\\n    \\n    <div>\\n      <button mat-icon-button>\\n        <mat-icon>share</mat-icon>\\n      </button>\\n      <button mat-icon-button displayDensity=\\"cosy\\">\\n        <mat-icon>share</mat-icon>\\n      </button>\\n      <button mat-icon-button displayDensity=\\"compact\\">\\n        <mat-icon>share</mat-icon>\\n      </button>\\n    </div>\\n    \\n    <div displayDensity=\\"comfort\\">\\n      <mat-checkbox>Check me!</mat-checkbox>\\n      <ngm-search></ngm-search>\\n      <mat-chip-grid #chipGrid aria-label=\\"Fruit selection\\">\\n        <mat-chip-row>fruit\\n          <button matChipRemove [attr.aria-label]=\\"\'remove \' + fruit\\">\\n            <mat-icon>cancel</mat-icon>\\n          </button>\\n        </mat-chip-row>\\n      </mat-chip-grid>\\n    </div>\\n    <div displayDensity=\\"cosy\\">\\n      <mat-checkbox>Check me!</mat-checkbox>\\n      <ngm-search></ngm-search>\\n      <mat-chip-grid #chipGrid aria-label=\\"Fruit selection\\">\\n        <mat-chip-row>fruit\\n          <button matChipRemove [attr.aria-label]=\\"\'remove \' + fruit\\">\\n            <mat-icon>cancel</mat-icon>\\n          </button>\\n        </mat-chip-row>\\n      </mat-chip-grid>\\n    </div>\\n    <div displayDensity=\\"compact\\">\\n      <mat-checkbox>Check me!</mat-checkbox>\\n      <ngm-search></ngm-search>\\n      <mat-chip-grid #chipGrid aria-label=\\"Fruit selection\\">\\n        <mat-chip-row>fruit\\n          <button matChipRemove [attr.aria-label]=\\"\'remove \' + fruit\\">\\n            <mat-icon>cancel</mat-icon>\\n          </button>\\n        </mat-chip-row>\\n      </mat-chip-grid>\\n    </div>\\n    \\n    <div class=\\"flex items-center gap-2\\">\\n      <mat-chip-grid displayDensity=\\"comfort\\">\\n        <mat-chip-row>fruit\\n          <button matChipRemove [attr.aria-label]=\\"\'remove \' + fruit\\">\\n            <mat-icon>cancel</mat-icon>\\n          </button>\\n        </mat-chip-row>\\n      </mat-chip-grid>\\n      <mat-chip-grid displayDensity=\\"cosy\\">\\n        <mat-chip-row>fruit\\n          <button matChipRemove [attr.aria-label]=\\"\'remove \' + fruit\\">\\n            <mat-icon>cancel</mat-icon>\\n          </button>\\n        </mat-chip-row>\\n      </mat-chip-grid>\\n      <mat-chip-grid displayDensity=\\"compact\\">\\n        <mat-chip-row>fruit\\n          <button matChipRemove [attr.aria-label]=\\"\'remove \' + fruit\\">\\n            <mat-icon>cancel</mat-icon>\\n          </button>\\n        </mat-chip-row>\\n      </mat-chip-grid>\\n    </div>\\n    \\n    <div class=\\"flex items-center gap-2\\">\\n      <mat-chip-set><mat-chip>fruit</mat-chip></mat-chip-set>\\n      <mat-chip-set displayDensity=\\"cosy\\"><mat-chip>fruit</mat-chip></mat-chip-set>\\n      <mat-chip-set displayDensity=\\"compact\\"><mat-chip>fruit</mat-chip></mat-chip-set>\\n    </div>\\n    `\\n  })\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/compare-member-select/member-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    label: \'Dimension\',\\n    dimension: {\\n      dimension: \'[Department]\'\\n    }\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/property-select/property-select.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    label: \'Property Select\',\\n    dataSettings: {\\n      dataSource: \'key_sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    entityType: ENTITY_TYPE,\\n    capacities: [\\n      PropertyCapacity.Dimension,\\n      PropertyCapacity.Measure,\\n      PropertyCapacity.Parameter\\n    ],\\n    inputValue: {\\n      dimension: \'A\',\\n      hierarchy: \'[A]\',\\n    }\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentSelector\',\\n      paramType: ParameterControlEnum.Dimensions,\\n      dimension: \'[Department]\',\\n      availableMembers: AVAILABLE_MEMBERS\\n    }\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/table/table/table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    columns,\\n    data\\n  }\\n}"},{"name":"PrimaryCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentSelector\',\\n      paramType: ParameterControlEnum.Dimensions,\\n      dimension: \'[Department]\'\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    }\\n  }\\n}"},{"name":"PrimaryMultiple","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentSelector\',\\n      paramType: ParameterControlEnum.Dimensions,\\n      dimension: \'[Department]\'\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    options: {\\n      selectionType: FilterSelectionType.Multiple\\n    }\\n  }\\n}"},{"name":"Quarter","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    granularity: TimeGranularity.Quarter\\n  }\\n}"},{"name":"render","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(args) => ({\\n  props: args,\\n  styles: [`.ngm-analytical-grid {height: 400px;}`]\\n})"},{"name":"render","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(args) => ({\\n  props: args,\\n  styles: [\\n    `.ngm-smart-filter {\\n      width: 100px;\\n    }`\\n  ]\\n})"},{"name":"Selectable","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tag/tag.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    color: \'green\',\\n    selectable: true,\\n    tags\\n  }\\n}"},{"name":"SelectedHierarchy","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    selectedHierarchy: \'[Product]\'\\n  }\\n}"},{"name":"SelectionTypeMultiple","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {\\n      multiple: true\\n      // selectionType: FilterSelectionType.Multiple\\n    },\\n    appearance: {\\n      \\n    },\\n    displayDensity: DisplayDensity.compact\\n  }\\n}"},{"name":"SetOptionError","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'SetOption Error\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          },\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"ShowToolbar","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Analytical Grid Show Toolbar\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      showToolbar: true\\n    }\\n  }\\n}"},{"name":"Size","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/copilot/stories/chat.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `<ngm-copilot-chat ${argsToTemplate(\\n      args\\n    )} class=\\"h-[500px] w-[300px] shadow-lg rounded-lg m-4\\" style=\\"height: 500px;\\"></ngm-copilot-chat>`\\n  }),\\n  args: {\\n    welcomeTitle: \'Welcome to My AI Copilot\'\\n  },\\n  parameters: {\\n    background: { default: \'dark\' },\\n    actions: { argTypesRegex: \'^conversations.*\' }\\n  }\\n}"},{"name":"Slider","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'SliderParam\',\\n      paramType: ParameterControlEnum.Input,\\n      dataType: \'number\',\\n      value: 6\\n    },\\n    options: {\\n      slider: true,\\n      sliderMax: 10,\\n      sliderStep: 2,\\n      sliderInvert: true\\n    }\\n  }\\n}"},{"name":"SliderVertical","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'SliderParam\',\\n      paramType: ParameterControlEnum.Input,\\n      dataType: \'number\',\\n      value: 6\\n    },\\n    options: {\\n      slider: true,\\n      sliderMax: 10,\\n      sliderStep: 2,\\n      sliderVertical: true\\n    }\\n  }\\n}"},{"name":"Sortable","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Sortable\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          },\\n          {\\n            dimension: \'[Department]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      sortable: true\\n    }\\n  }\\n}"},{"name":"SourceFrom","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-tree/member-tree.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'product\'\\n    },\\n    options: {\\n      memberSource: MemberSource.DIMENSION\\n    }\\n  },\\n}"},{"name":"SplitButton","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/split-button/split-button.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n  },\\n}"},{"name":"StickyHeaders","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    nameLabel: \'名称\',\\n    data: TREE_NODE_DATA,\\n    columns: [\\n      {\\n        name: \'type\',\\n        caption: \'类型\'\\n      }\\n    ],\\n    initialLevel: Number.MAX_SAFE_INTEGER,\\n    stickyHeaders: true\\n  }\\n}"},{"name":"Striped","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    data: TREE_NODE_DATA,\\n    columns: [\\n      {\\n        name: \'type\',\\n        caption: \'类型\'\\n      }\\n    ],\\n    displayDensity: DisplayDensity.compact,\\n    striped: true\\n  }\\n}"},{"name":"Suffix","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n<ngm-smart-filter [dataSettings]=\\"dataSettings\\" [dimension]=\\"dimension\\" [options]=\\"options\\">\\n    <div ngmSuffix>\\n      <mat-icon>search</mat-icon>\\n    </div>\\n</ngm-smart-filter>\\n    `\\n  }),\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Suffix","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n<ngm-select [selectOptions]=\\"selectOptions\\">\\n<div ngmSuffix>suffix</div>\\n</ngm-select>    \\n    `\\n  }),\\n  args: {\\n    selectOptions: TREE_NODE_DATA,\\n    valueKey: \'key\'\\n  }\\n}"},{"name":"SuffixSearchable","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n<ngm-select searchable [selectOptions]=\\"selectOptions\\" ${argsToTemplate(args)}>\\n  <div ngmSuffix>\\n    <mat-icon>search</mat-icon>\\n  </div>\\n</ngm-select>    \\n    `\\n  }),\\n  args: {\\n    selectOptions: TREE_NODE_DATA,\\n    valueKey: \'key\'\\n  }\\n}"},{"name":"SwitchTemplate","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `<ngm-story-component-switch-grid></ngm-story-component-switch-grid>`\\n  }),\\n  args: {}\\n}"},{"name":"tags","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tag/tag.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    key: \'tag1\',\\n    caption: \'Tag 1\',\\n  },\\n  {\\n    key: \'tag2\',\\n    caption: \'Tag 2\',\\n  },\\n  {\\n    key: \'tag3\',\\n    caption: \'Tag 3\',\\n  }\\n]"},{"name":"Top","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/resizer/resizer.directive.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    position: \'top\'\\n  },\\n  render: (args: any) => ({\\n    template: `\\n    <mat-card ngmResizer [resizerHeight]=\\"200\\">\\nSimple card\\n  <div ngmResizerBar [resizerBarPosition]=\\"barPosition\\" cdkDrag></div>\\n</mat-card>`\\n  })\\n}"},{"name":"TREE_NODE_DATA","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"[\\n  {\\n    key: \'Fruit\',\\n    label: \'水果\',\\n    children: [\\n      { key: \'Apple\', label: \'苹果\', value: 10, raw: { type: \'Hive\' } },\\n      { key: \'Banana\', label: \'香蕉\', value: 20 },\\n      { key: \'Fruit loops\', label: \'果循环\', value: 30 },\\n      {\\n        key: \'Fruit2\',\\n        label: \'水果\'\\n      }\\n    ]\\n  },\\n  {\\n    key: \'Vegetables\',\\n    label: \'蔬菜\',\\n    children: [\\n      {\\n        key: \'Green\',\\n        label: \'绿色\',\\n        children: [\\n          { key: \'Broccoli\', label: \'西兰花\', value: 10 },\\n          { key: \'Brussel sprouts\', label: \'豆芽\', value: 20 }\\n        ]\\n      },\\n      {\\n        key: \'Orange\',\\n        label: \'橙\',\\n        children: [\\n          { key: \'Pumpkins\', label: \'南瓜\', value: 30, raw: { type: \'PG\' } },\\n          { key: \'Carrots\', label: \'胡萝卜\', value: 40 }\\n        ]\\n      }\\n    ]\\n  }\\n] as any"},{"name":"TREE_NODE_DATA","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"[\\n  {\\n    name: \'Fruit\',\\n    children: [\\n      { name: \'Apple\', value: 10, raw: { type: \'Hive\' } },\\n      { name: \'Banana\', value: 20 },\\n      { name: \'Fruit loops\', value: 30 }\\n    ]\\n  },\\n  {\\n    name: \'Vegetables\',\\n    children: [\\n      {\\n        name: \'Green\',\\n        children: [\\n          { name: \'Broccoli\', value: 10 },\\n          { name: \'Brussel sprouts\', value: 20 }\\n        ]\\n      },\\n      {\\n        name: \'Orange\',\\n        children: [\\n          { name: \'Pumpkins\', value: 30, raw: { type: \'PG\' } },\\n          { name: \'Carrots\', value: 40 }\\n        ]\\n      }\\n    ]\\n  }\\n] as any"},{"name":"TREE_NODE_DATA","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/mat/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"[\\n  {\\n    value: \'Fruit\',\\n    label: \'水果\'\\n  },\\n  { value: \'Apple\', label: \'苹果\', raw: { type: \'Hive\' } },\\n  { value: \'Banana\', label: \'香蕉\' },\\n  { value: \'Fruit loops\', label: \'果循环\' },\\n  {\\n    value: \'Vegetables\',\\n    label: \'蔬菜\'\\n  },\\n  {\\n    value: \'Green\',\\n    label: \'绿色\'\\n  },\\n  { value: \'Broccoli\', label: \'西兰花\' },\\n  { value: \'Brussel sprouts\', label: \'豆芽\' },\\n  {\\n    value: \'Orange\',\\n    label: \'橙\'\\n  },\\n  { value: \'Pumpkins\', label: \'南瓜\', raw: { type: \'PG\' } },\\n  { value: \'Carrots\', label: \'胡萝卜\' }\\n] as any"},{"name":"TREE_NODE_DATA","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"[\\n  {\\n    key: null,\\n    caption: \'\',\\n    value: {\\n      name: null\\n    }\\n  },\\n  {\\n    key: \'Fruit\',\\n    caption: \'水果\'\\n  },\\n  { key: \'Apple\', caption: \'苹果\', value: { type: \'Hive\' } },\\n  { key: \'Banana\', caption: \'香蕉\' },\\n  { key: \'Fruit loops\', caption: \'果循环\' },\\n  {\\n    key: \'Vegetables\',\\n    caption: \'蔬菜\'\\n  },\\n  {\\n    key: \'Green\',\\n    caption: \'绿色\'\\n  },\\n  { key: \'Broccoli\', caption: \'西兰花\' },\\n  { key: \'Brussel sprouts\', caption: \'豆芽\' },\\n  {\\n    key: \'Orange\',\\n    caption: \'橙\'\\n  },\\n  { key: \'Pumpkins\', caption: \'南瓜\', raw: { type: \'PG\' } },\\n  { key: \'Carrots\', caption: \'胡萝卜\' }\\n] as any"},{"name":"Width","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/breadcrumb/breadcrumb.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `<ngm-breadcrumb-bar style=\\"width: 200px;\\" [steps]=\\"steps\\" displayDensity=\\"compact\\"></ngm-breadcrumb-bar>`,\\n  }),\\n  args: {\\n    steps: [\\n      {\\n        value: \'A\',\\n        label: \'Step A AAAAAAAAAAAA\',\\n        active: true\\n      },\\n      {\\n        value: \'B\',\\n        label: \'Step BBBBBBBBBBBBBB\',\\n        active: false\\n      }\\n    ]\\n  }\\n}"},{"name":"Width","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {\\n      selectionType: FilterSelectionType.Multiple\\n    }\\n  }\\n}"},{"name":"WidthCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {\\n      selectionType: FilterSelectionType.Multiple\\n    },\\n    appearance: {\\n    },\\n    displayDensity: DisplayDensity.compact\\n  }\\n}"},{"name":"WithIcon","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    valueKey: \'key\',\\n    selectOptions: [\\n      {\\n        key: \'Fruit\',\\n        caption: \'水果\',\\n        icon: \'apple\'\\n      }\\n    ]\\n  }\\n}"},{"name":"Year","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    granularity: TimeGranularity.Year\\n  }\\n}"},{"name":"Year_to_Today","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    selectionType: FilterSelectionType.SingleRange,\\n    granularity: TimeGranularity.Month,\\n    defaultValue: \'YEAR_TO_TODAY\'\\n  }\\n}"},{"name":"YearPicker","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","deprecated":false,"deprecationMessage":"","type":"YearStory","defaultValue":"{\\n  args: {\\n    label: \'Year Picker\',\\n  },\\n  render: (args) => ({\\n    props: {\\n      ...args\\n    },\\n    template: `<ngm-yearpicker ${argsToTemplate(args)}></ngm-yearpicker>`\\n  })\\n}"}],"functions":[],"typealiases":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<AnalyticalGridComponent<>>","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmInputComponent>","file":"packages/angular/common/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ResizerBarDirective>","file":"packages/angular/common/resizer/resizer.directive.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmSearchComponent>","file":"packages/angular/common/search/search.component.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<SplitButtonComponent>","file":"packages/angular/common/split-button/split-button.component.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<MatTabGroup>","file":"packages/angular/common/tabs/tabs.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmTagsComponent>","file":"packages/angular/common/tag/tag.component.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<TreeTableComponent<>>","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmMemberTreeComponent>","file":"packages/angular/controls/member-tree/member-tree.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmCopilotChatComponent>","file":"packages/angular/copilot/stories/chat.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmSearchComponent>","file":"packages/angular/core/directives/density.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmCompareMemberSelectComponent>","file":"packages/angular/entity/compare-member-select/member-select.component.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmEntitySchemaComponent>","file":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmMeasureSelectComponent>","file":"packages/angular/entity/measure-select/measure-select.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<>","file":"packages/angular/entity/property-select/property-select.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmParameterCreateComponent>","file":"packages/angular/parameter/parameter-create/parameter-create.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmParameterSelectComponent>","file":"packages/angular/parameter/parameter-select/parameter-select.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmAdvancedFilterComponent>","file":"packages/angular/selection/advanced-filter/advanced-filter.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmAdvancedSlicerComponent>","file":"packages/angular/selection/advanced-slicer/advanced-slicer.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<SlicerComponent>","file":"packages/angular/selection/slicer/slicer.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<SlicerBarComponent>","file":"packages/angular/selection/slicer-bar/slicer-bar.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<SlicersComponent>","file":"packages/angular/selection/slicers/slicers.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmSelectComponent>","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmTableComponent>","file":"packages/angular/common/table/table/table.component.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmMemberDatepickerComponent>","file":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmTimeFilterEditorComponent>","file":"packages/angular/selection/timer/time-filter-editor/time-filter-editor.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmTodayFilterComponent>","file":"packages/angular/selection/timer/today-filter/today-filter.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"YearStory","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmYearpickerComponent>","file":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"enumerations":[],"groupedVariables":{"packages/angular/analytical-grid/analytical-grid.component.stories.ts":[{"name":"A1Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"A2Sticky","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      sticky: true\\n    }\\n  }\\n}"},{"name":"A3StickyGrid","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      sticky: true,\\n      grid: true\\n    }\\n  }\\n}"},{"name":"DensityCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Analytical Grid compact\',\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"DisplayHierarchy","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Analytical Grid Hierarchy\',\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\',\\n            displayHierarchy: true\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Error","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Analytical Grid Error\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales1\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      showToolbar: true\\n    }\\n  }\\n}"},{"name":"Loading","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Loading Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder10s\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"MultipleMeasures","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Multiple Measures Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: \'[Department]\'\\n          },\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          },\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Cost\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Paging","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      paging: true,\\n      pageSize: 3\\n    }\\n  }\\n}"},{"name":"PagingCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      paging: true,\\n      pageSize: 3\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    }\\n  }\\n}"},{"name":"PagingError","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales1\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      paging: true,\\n      pageSize: 3,\\n      showToolbar: true\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    }\\n  }\\n}"},{"name":"render","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(args) => ({\\n  props: args,\\n  styles: [`.ngm-analytical-grid {height: 400px;}`]\\n})"},{"name":"ShowToolbar","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Analytical Grid Show Toolbar\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      showToolbar: true\\n    }\\n  }\\n}"},{"name":"Sortable","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Sortable\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          },\\n          {\\n            dimension: \'[Department]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      sortable: true\\n    }\\n  }\\n}"},{"name":"SwitchTemplate","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `<ngm-story-component-switch-grid></ngm-story-component-switch-grid>`\\n  }),\\n  args: {}\\n}"}],"packages/angular/controls/member-tree/member-tree.stories.ts":[{"name":"actionsData","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-tree/member-tree.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  loadingChanging: action(\'loadingChanging\'),\\n}"},{"name":"Appearance","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-tree/member-tree.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'product\'\\n    },\\n    options: {\\n      searchable: true\\n    },\\n    appearance: {\\n      appearance: \'outline\',\\n      displayDensity: DisplayDensity.compact\\n    }\\n  },\\n}"},{"name":"AutoActiveFirst","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-tree/member-tree.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'product\'\\n    },\\n    options: {\\n      searchable: true,\\n      autoActiveFirst: true,\\n      selectionType: FilterSelectionType.Multiple\\n    },\\n    appearance: {\\n      appearance: \'outline\',\\n      displayDensity: DisplayDensity.compact\\n    }\\n  },\\n  render: (args) => ({\\n    props: {\\n      ...args,\\n      inputValue: \'\',\\n    },\\n    template: `<form>\\n<label for=\\"input\\">Custom Input:</label>\\n  <ngm-member-tree id=\\"input\\" [(ngModel)]=\\"inputValue\\" name=\\"customInput\\" ${argsToTemplate(args)}></ngm-member-tree>\\n  <p>Value: {{ inputValue | json }}</p>\\n</form>`,\\n    styles: [`.ngm-member-tree {height: 400px;}`]\\n  })\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-tree/member-tree.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'product\'\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    }\\n  },\\n}"},{"name":"SourceFrom","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-tree/member-tree.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'product\'\\n    },\\n    options: {\\n      memberSource: MemberSource.DIMENSION\\n    }\\n  },\\n}"}],"packages/angular/entity/measure-select/measure-select.stories.ts":[{"name":"actionsData","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/measure-select/measure-select.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  onPinTask: action(\'onPinTask\'),\\n  onArchiveTask: action(\'onArchiveTask\')\\n}"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/measure-select/measure-select.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: MODEL_KEY,\\n      entitySet: CUBE_SALES_ORDER_NAME\\n    }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/measure-select/measure-select.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmMeasureSelectComponent>","defaultValue":"{\\n  title: \'Entity/MeasureSelect\',\\n  component: NgmMeasureSelectComponent,\\n  excludeStories: /.*Data$/,\\n  tags: [\'autodocs\'],\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideOcapMock(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      //👇 Imports both components to allow component composition with Storybook\\n      declarations: [],\\n      imports: []\\n    }),\\n    //👇 Wraps our stories with a decorator\\n    componentWrapperDecorator((story) => `<div style=\\"margin: 3em\\">${story}</div>`)\\n  ],\\n  render: (args) => ({\\n    props: {\\n      ...args\\n    },\\n    template: `<ngm-measure-select ${argsToTemplate(args)}></ngm-measure-select>`\\n  })\\n}"}],"packages/angular/parameter/parameter-create/parameter-create.stories.ts":[{"name":"actionsData","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter-create/parameter-create.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  onPinTask: action(\'onPinTask\'),\\n  onArchiveTask: action(\'onArchiveTask\')\\n}"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter-create/parameter-create.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: MODEL_KEY,\\n      entitySet: CUBE_SALES_ORDER_NAME\\n    },\\n    entityType: ENTITY_TYPE_SALESORDER\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter-create/parameter-create.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmParameterCreateComponent>","defaultValue":"{\\n  title: \'Parameter/ParameterCreate\',\\n  component: NgmParameterCreateComponent,\\n  excludeStories: /.*Data$/,\\n  tags: [\'autodocs\'],\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideOcapMock(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      //👇 Imports both components to allow component composition with Storybook\\n      declarations: [],\\n      imports: []\\n    }),\\n    //👇 Wraps our stories with a decorator\\n    componentWrapperDecorator((story) => `<div style=\\"margin: 3em\\">${story}</div>`)\\n  ],\\n  render: (args) => ({\\n    props: {\\n      ...args\\n    },\\n    template: `<ngm-parameter-create ${argsToTemplate(args)}></ngm-parameter-create>`\\n  })\\n}"}],"packages/angular/parameter/parameter-select/parameter-select.stories.ts":[{"name":"actionsData","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter-select/parameter-select.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  onPinTask: action(\'onPinTask\'),\\n  onArchiveTask: action(\'onArchiveTask\')\\n}"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter-select/parameter-select.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: MODEL_KEY,\\n      entitySet: CUBE_SALES_ORDER_NAME\\n    },\\n    entityType: ENTITY_TYPE_SALESORDER\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter-select/parameter-select.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmParameterSelectComponent>","defaultValue":"{\\n  title: \'Parameter/ParameterSelect\',\\n  component: NgmParameterSelectComponent,\\n  excludeStories: /.*Data$/,\\n  tags: [\'autodocs\'],\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideOcapMock(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      //👇 Imports both components to allow component composition with Storybook\\n      declarations: [],\\n      imports: []\\n    }),\\n    //👇 Wraps our stories with a decorator\\n    componentWrapperDecorator((story) => `<div style=\\"margin: 3em\\">${story}</div>`)\\n  ],\\n  render: (args) => ({\\n    props: {\\n      ...args\\n    },\\n    template: `<ngm-parameter-select ${argsToTemplate(args)}></ngm-parameter-select>`\\n  })\\n}"}],"packages/angular/selection/advanced-filter/advanced-filter.stories.ts":[{"name":"actionsData","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/advanced-filter/advanced-filter.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  onPinTask: action(\'onPinTask\'),\\n  onArchiveTask: action(\'onArchiveTask\')\\n}"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/advanced-filter/advanced-filter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {}\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/advanced-filter/advanced-filter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmAdvancedFilterComponent>","defaultValue":"{\\n  title: \'Selection/AdvancedFilter\',\\n  component: NgmAdvancedFilterComponent,\\n  excludeStories: /.*Data$/,\\n  tags: [\'autodocs\'],\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideOcapMock(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      //👇 Imports both components to allow component composition with Storybook\\n      declarations: [],\\n      imports: [NgmAdvancedFilterModule]\\n    }),\\n    //👇 Wraps our stories with a decorator\\n    componentWrapperDecorator((story) => `<div style=\\"margin: 3em\\">${story}</div>`)\\n  ],\\n  render: (args) => ({\\n    props: {\\n      ...args\\n    },\\n    template: `<ngm-advanced-filter ${argsToTemplate(args)}></ngm-advanced-filter>`\\n  })\\n}"}],"packages/angular/selection/advanced-slicer/advanced-slicer.stories.ts":[{"name":"actionsData","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/advanced-slicer/advanced-slicer.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  onPinTask: action(\'onPinTask\'),\\n  onArchiveTask: action(\'onArchiveTask\')\\n}"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/advanced-slicer/advanced-slicer.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {}\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/advanced-slicer/advanced-slicer.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmAdvancedSlicerComponent>","defaultValue":"{\\n  title: \'Selection/AdvancedSlicer\',\\n  component: NgmAdvancedSlicerComponent,\\n  excludeStories: /.*Data$/,\\n  tags: [\'autodocs\'],\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideOcapMock(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      //👇 Imports both components to allow component composition with Storybook\\n      declarations: [],\\n      imports: []\\n    }),\\n    //👇 Wraps our stories with a decorator\\n    componentWrapperDecorator((story) => `<div style=\\"margin: 3em\\">${story}</div>`)\\n  ],\\n  render: (args) => ({\\n    props: {\\n      ...args\\n    },\\n    template: `<ngm-advanced-slicer ${argsToTemplate(args)}></ngm-advanced-slicer>`\\n  })\\n}"}],"packages/angular/selection/slicer/slicer.stories.ts":[{"name":"actionsData","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/slicer/slicer.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  onPinTask: action(\'onPinTask\'),\\n  onArchiveTask: action(\'onArchiveTask\')\\n}"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/slicer/slicer.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    slicer: {\\n      dimension: {\\n        dimension: \'A\',\\n      },\\n      members: [\\n        {\\n          key: \'1\',\\n          caption: \'A\',\\n        },\\n        {\\n          key: \'2\',\\n          caption: \'B\',\\n        }\\n      ]\\n    }\\n  }\\n}"},{"name":"Editable","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/slicer/slicer.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    editable: true,\\n    slicer: {\\n      dimension: {\\n        dimension: \'A\',\\n      },\\n      members: [\\n        {\\n          key: \'1\',\\n          caption: \'A\',\\n        },\\n        {\\n          key: \'2\',\\n          caption: \'B\',\\n        }\\n      ]\\n    },\\n    dataSettings: {\\n      dataSource: MODEL_KEY,\\n      entitySet: CUBE_SALES_ORDER_NAME\\n    }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/slicer/slicer.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<SlicerComponent>","defaultValue":"{\\n  title: \'Selection/Slicer\',\\n  component: SlicerComponent,\\n  excludeStories: /.*Data$/,\\n  tags: [\'autodocs\'],\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideOcapMock(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      //👇 Imports both components to allow component composition with Storybook\\n      declarations: [],\\n      imports: [NgmSelectionModule]\\n    }),\\n    //👇 Wraps our stories with a decorator\\n    componentWrapperDecorator((story) => `<div style=\\"margin: 3em\\">${story}</div>`)\\n  ],\\n  render: (args) => ({\\n    props: {\\n      ...args\\n    },\\n    template: `<ngm-slicer ${argsToTemplate(args)}></ngm-slicer>`\\n  })\\n}"}],"packages/angular/selection/slicer-bar/slicer-bar.stories.ts":[{"name":"actionsData","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/slicer-bar/slicer-bar.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  onPinTask: action(\'onPinTask\'),\\n  onArchiveTask: action(\'onArchiveTask\')\\n}"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/slicer-bar/slicer-bar.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    slicers: [\\n      {\\n        dimension: {\\n          dimension: \'A\',\\n        },\\n        members: [\\n          {\\n            key: \'1\',\\n            caption: \'A\',\\n          },\\n          {\\n            key: \'2\',\\n            caption: \'B\',\\n          }\\n        ]\\n      }\\n    ]\\n  }\\n}"},{"name":"Editable","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/slicer-bar/slicer-bar.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    editable: true,\\n    slicers: [\\n      {\\n        dimension: {\\n          dimension: \'A\',\\n        },\\n        members: [\\n          {\\n            key: \'1\',\\n            caption: \'A\',\\n          },\\n          {\\n            key: \'2\',\\n            caption: \'B\',\\n          }\\n        ]\\n      }\\n    ],\\n    dataSettings: {\\n      dataSource: MODEL_KEY,\\n      entitySet: CUBE_SALES_ORDER_NAME\\n    }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/slicer-bar/slicer-bar.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<SlicerBarComponent>","defaultValue":"{\\n  title: \'Selection/SlicerBar\',\\n  component: SlicerBarComponent,\\n  excludeStories: /.*Data$/,\\n  tags: [\'autodocs\'],\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideOcapMock(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      //👇 Imports both components to allow component composition with Storybook\\n      declarations: [],\\n      imports: [NgmSelectionModule]\\n    }),\\n    //👇 Wraps our stories with a decorator\\n    componentWrapperDecorator((story) => `<div style=\\"margin: 3em\\">${story}</div>`)\\n  ],\\n  render: (args) => ({\\n    props: {\\n      ...args\\n    },\\n    template: `<ngm-slicer-bar ${argsToTemplate(args)}></ngm-slicer-bar>`\\n  })\\n}"}],"packages/angular/selection/slicers/slicers.stories.ts":[{"name":"actionsData","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/slicers/slicers.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  onPinTask: action(\'onPinTask\'),\\n  onArchiveTask: action(\'onArchiveTask\')\\n}"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/slicers/slicers.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    slicers: [\\n      {\\n        dimension: {\\n          dimension: \'A\',\\n        },\\n        members: [\\n          {\\n            key: \'1\',\\n            caption: \'A\',\\n          },\\n          {\\n            key: \'2\',\\n            caption: \'B\',\\n          }\\n        ]\\n      }\\n    ]\\n  }\\n}"},{"name":"Editable","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/slicers/slicers.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    editable: true,\\n    slicers: [\\n      {\\n        dimension: {\\n          dimension: \'A\',\\n        },\\n        members: [\\n          {\\n            key: \'1\',\\n            caption: \'A\',\\n          },\\n          {\\n            key: \'2\',\\n            caption: \'B\',\\n          }\\n        ]\\n      }\\n    ],\\n    dataSettings: {\\n      dataSource: MODEL_KEY,\\n      entitySet: CUBE_SALES_ORDER_NAME\\n    }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/slicers/slicers.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<SlicersComponent>","defaultValue":"{\\n  title: \'Selection/Slicers\',\\n  component: SlicersComponent,\\n  excludeStories: /.*Data$/,\\n  tags: [\'autodocs\'],\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideOcapMock(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      //👇 Imports both components to allow component composition with Storybook\\n      declarations: [],\\n      imports: [NgmSelectionModule]\\n    }),\\n    //👇 Wraps our stories with a decorator\\n    componentWrapperDecorator((story) => `<div style=\\"margin: 3em\\">${story}</div>`)\\n  ],\\n  render: (args) => ({\\n    props: {\\n      ...args\\n    },\\n    template: `<ngm-slicers ${argsToTemplate(args)}></ngm-slicers>`\\n  })\\n}"}],"packages/angular/selection/timer/datepicker/datepicker.stories.ts":[{"name":"actionsData","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  onPinTask: action(\'onPinTask\'),\\n  onArchiveTask: action(\'onArchiveTask\')\\n}"},{"name":"Day","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    granularity: TimeGranularity.Day\\n  }\\n}"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {}\\n}"},{"name":"DefaultValue","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    granularity: TimeGranularity.Week,\\n    defaultValue: \'2021-01-01\'\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmMemberDatepickerComponent>","defaultValue":"{\\n  title: \'Selection/Datepicker\',\\n  component: NgmMemberDatepickerComponent,\\n  excludeStories: /.*Data$/,\\n  tags: [\'autodocs\'],\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideOcapMock(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      //👇 Imports both components to allow component composition with Storybook\\n      declarations: [],\\n      imports: [NgmMemberDatepickerModule, NgmYearpickerComponent]\\n    }),\\n    //👇 Wraps our stories with a decorator\\n    componentWrapperDecorator((story) => `<div style=\\"margin: 3em\\">${story}</div>`)\\n  ],\\n  render: (args) => ({\\n    props: {\\n      ...args\\n    },\\n    template: `<ngm-member-datepicker ${argsToTemplate(args)}></ngm-member-datepicker>`\\n  })\\n}"},{"name":"Month","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    granularity: TimeGranularity.Month\\n  }\\n}"},{"name":"Quarter","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    granularity: TimeGranularity.Quarter\\n  }\\n}"},{"name":"Year","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    granularity: TimeGranularity.Year\\n  }\\n}"},{"name":"Year_to_Today","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    selectionType: FilterSelectionType.SingleRange,\\n    granularity: TimeGranularity.Month,\\n    defaultValue: \'YEAR_TO_TODAY\'\\n  }\\n}"},{"name":"YearPicker","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","deprecated":false,"deprecationMessage":"","type":"YearStory","defaultValue":"{\\n  args: {\\n    label: \'Year Picker\',\\n  },\\n  render: (args) => ({\\n    props: {\\n      ...args\\n    },\\n    template: `<ngm-yearpicker ${argsToTemplate(args)}></ngm-yearpicker>`\\n  })\\n}"}],"packages/angular/selection/timer/time-filter-editor/time-filter-editor.stories.ts":[{"name":"actionsData","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/time-filter-editor/time-filter-editor.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  onPinTask: action(\'onPinTask\'),\\n  onArchiveTask: action(\'onArchiveTask\')\\n}"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/time-filter-editor/time-filter-editor.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    entityType: null\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/time-filter-editor/time-filter-editor.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmTimeFilterEditorComponent>","defaultValue":"{\\n  title: \'Selection/TimeFilterEditor\',\\n  component: NgmTimeFilterEditorComponent,\\n  excludeStories: /.*Data$/,\\n  tags: [\'autodocs\'],\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideOcapMock(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      //👇 Imports both components to allow component composition with Storybook\\n      declarations: [],\\n      imports: []\\n    }),\\n    //👇 Wraps our stories with a decorator\\n    componentWrapperDecorator((story) => `<div style=\\"margin: 3em\\">${story}</div>`)\\n  ],\\n  render: (args) => ({\\n    props: {\\n      ...args\\n    },\\n    template: `<ngm-time-filter-editor ${argsToTemplate(args)}></ngm-time-filter-editor>`\\n  })\\n}"}],"packages/angular/selection/timer/today-filter/today-filter.stories.ts":[{"name":"actionsData","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/today-filter/today-filter.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  onPinTask: action(\'onPinTask\'),\\n  onArchiveTask: action(\'onArchiveTask\')\\n}"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/today-filter/today-filter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/selection/timer/today-filter/today-filter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmTodayFilterComponent>","defaultValue":"{\\n  title: \'Selection/TodayFilter\',\\n  component: NgmTodayFilterComponent,\\n  excludeStories: /.*Data$/,\\n  tags: [\'autodocs\'],\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideOcapMock(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      //👇 Imports both components to allow component composition with Storybook\\n      declarations: [],\\n      imports: []\\n    }),\\n    //👇 Wraps our stories with a decorator\\n    componentWrapperDecorator((story) => `<div style=\\"margin: 3em\\">${story}</div>`)\\n  ],\\n  render: (args) => ({\\n    props: {\\n      ...args\\n    },\\n    template: `<ngm-today-filter ${argsToTemplate(args)}></ngm-today-filter>`\\n  })\\n}"}],"packages/angular/analytical-card/analytical-card.component.stories.ts":[{"name":"Appearance","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Display Density Compact\',\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"ChartTypes","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Chart Types\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      },\\n      presentationVariant: {\\n        groupBy: [\\n          {\\n            dimension: \'[Department]\',\\n            level: \'[Department].[Department]\'\\n          }\\n        ]\\n      }\\n    },\\n    chartSettings: {\\n      chartTypes: [\\n        {\\n          type: \'Line\'\\n        }\\n      ]\\n    },\\n    options: {}\\n  }\\n}"},{"name":"DrillDimensions","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Drill Dimensions\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      },\\n      presentationVariant: {\\n        groupBy: [\\n          {\\n            dimension: \'[Department]\',\\n            level: \'[Department].[Department]\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Empty","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Empty Data\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'Empty\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Error","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Error\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales1\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"HideButtons","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Hide Buttons\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Loading","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Loading\',\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder10s\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Primary Analytical Card\',\\n    appearance: {\\n      // displayBehaviour: DisplayBehaviour.auto,\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"SetOptionError","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'SetOption Error\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          },\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"}],"packages/angular/controls/smart-filter/smart-filter.component.stories.ts":[{"name":"AppearanceOutline","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {\\n      selectionType: FilterSelectionType.Multiple\\n    },\\n    appearance: {\\n      appearance: \'outline\'\\n    }\\n  }\\n}"},{"name":"DensityCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {},\\n    appearance: {\\n    },\\n    displayDensity: DisplayDensity.compact\\n  }\\n}"},{"name":"Disabled","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    props: {\\n      dataSettings: {\\n        dataSource: \'Sales\',\\n        entitySet: \'SalesOrder3s\'\\n      },\\n      dimension: {\\n        dimension: \'Department\'\\n      },\\n      options: {},\\n      disabled: true,\\n    },\\n    model: {\\n      members: [\\n        {\\n          key: \'1\',\\n          caption: \'Department 1\'\\n        },\\n        {\\n          key: \'2\',\\n          caption: \'Department 2\'\\n        }\\n      ]\\n    }\\n  },\\n  render: (args) => ({\\n    props: {\\n      ...args.props,\\n      model: args.model\\n    },\\n    template: `<div class=\\"flex flex-col gap-2\\">\\n  <ngm-smart-filter ${argsToTemplate(args.props)}></ngm-smart-filter>\\n  <ngm-smart-filter ${argsToTemplate(args.props)} [ngModel]=\\"model\\"></ngm-smart-filter>\\n</div>\\n    \\n    `,\\n    styles: [\\n      `.ngm-smart-filter {\\n        width: 100px;\\n      }`\\n    ]\\n  })\\n}"},{"name":"Prefix","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n<ngm-smart-filter [dataSettings]=\\"dataSettings\\" [dimension]=\\"dimension\\" [options]=\\"options\\">\\n    <div ngmPrefix>\\n      <mat-icon>search</mat-icon>\\n    </div>\\n</ngm-smart-filter>\\n    `\\n  }),\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\',\\n      displayBehaviour: DisplayBehaviour.auto\\n    },\\n    options: {}\\n  }\\n}"},{"name":"render","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(args) => ({\\n  props: args,\\n  styles: [\\n    `.ngm-smart-filter {\\n      width: 100px;\\n    }`\\n  ]\\n})"},{"name":"SelectionTypeMultiple","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {\\n      multiple: true\\n      // selectionType: FilterSelectionType.Multiple\\n    },\\n    appearance: {\\n      \\n    },\\n    displayDensity: DisplayDensity.compact\\n  }\\n}"},{"name":"Suffix","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n<ngm-smart-filter [dataSettings]=\\"dataSettings\\" [dimension]=\\"dimension\\" [options]=\\"options\\">\\n    <div ngmSuffix>\\n      <mat-icon>search</mat-icon>\\n    </div>\\n</ngm-smart-filter>\\n    `\\n  }),\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Width","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {\\n      selectionType: FilterSelectionType.Multiple\\n    }\\n  }\\n}"},{"name":"WidthCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {\\n      selectionType: FilterSelectionType.Multiple\\n    },\\n    appearance: {\\n    },\\n    displayDensity: DisplayDensity.compact\\n  }\\n}"}],"packages/angular/parameter/parameter/parameter.component.stories.ts":[{"name":"AVAILABLE_MEMBERS","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    value: 1,\\n    label: \'Department A\'\\n  },\\n  {\\n    value: 2,\\n    label: \'Department B\'\\n  },\\n  {\\n    value: 3,\\n    label: \'Department C\'\\n  }\\n]"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmParameterComponent>","defaultValue":"{\\n  title: \'Parameter/ParameterComponent\',\\n  component: NgmParameterComponent,\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideOcapMock(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      imports: [NgmParameterComponent],\\n      providers: []\\n    })\\n  ]\\n}"},{"name":"ParameterInput","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentInput\',\\n      paramType: ParameterControlEnum.Input\\n    }\\n  }\\n}"},{"name":"ParameterInputNumber","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentInput\',\\n      paramType: ParameterControlEnum.Input,\\n      dataType: \'number\'\\n    }\\n  }\\n}"},{"name":"ParameterInputString","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentInput\',\\n      paramType: ParameterControlEnum.Input,\\n      dataType: \'string\'\\n    }\\n  }\\n}"},{"name":"ParameterSelect","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentSelect\',\\n      paramType: ParameterControlEnum.Select,\\n      availableMembers: AVAILABLE_MEMBERS\\n    }\\n  }\\n}"},{"name":"ParameterSelectDensity","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentSelect\',\\n      paramType: ParameterControlEnum.Select,\\n      availableMembers: AVAILABLE_MEMBERS\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    }\\n  }\\n}"},{"name":"ParameterSelectMultiple","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentSelect\',\\n      paramType: ParameterControlEnum.Select,\\n      availableMembers: AVAILABLE_MEMBERS\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    options: {\\n      selectionType: FilterSelectionType.Multiple\\n    }\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentSelector\',\\n      paramType: ParameterControlEnum.Dimensions,\\n      dimension: \'[Department]\',\\n      availableMembers: AVAILABLE_MEMBERS\\n    }\\n  }\\n}"},{"name":"PrimaryCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentSelector\',\\n      paramType: ParameterControlEnum.Dimensions,\\n      dimension: \'[Department]\'\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    }\\n  }\\n}"},{"name":"PrimaryMultiple","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentSelector\',\\n      paramType: ParameterControlEnum.Dimensions,\\n      dimension: \'[Department]\'\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    options: {\\n      selectionType: FilterSelectionType.Multiple\\n    }\\n  }\\n}"},{"name":"Slider","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'SliderParam\',\\n      paramType: ParameterControlEnum.Input,\\n      dataType: \'number\',\\n      value: 6\\n    },\\n    options: {\\n      slider: true,\\n      sliderMax: 10,\\n      sliderStep: 2,\\n      sliderInvert: true\\n    }\\n  }\\n}"},{"name":"SliderVertical","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'SliderParam\',\\n      paramType: ParameterControlEnum.Input,\\n      dataType: \'number\',\\n      value: 6\\n    },\\n    options: {\\n      slider: true,\\n      sliderMax: 10,\\n      sliderStep: 2,\\n      sliderVertical: true\\n    }\\n  }\\n}"}],"packages/angular/common/resizer/resizer.directive.stories.ts":[{"name":"Bottom","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/resizer/resizer.directive.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    position: \'bottom\'\\n  },\\n  render: (args: any) => ({\\n    template: `\\n    <mat-card ngmResizer [resizerHeight]=\\"200\\">\\nSimple card\\n  <div ngmResizerBar [resizerBarPosition]=\\"barPosition\\" cdkDrag></div>\\n</mat-card>`\\n  })\\n}"},{"name":"Left","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/resizer/resizer.directive.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    position: \'left\'\\n  },\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/resizer/resizer.directive.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    position: \'right\'\\n  },\\n}"},{"name":"Top","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/resizer/resizer.directive.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    position: \'top\'\\n  },\\n  render: (args: any) => ({\\n    template: `\\n    <mat-card ngmResizer [resizerHeight]=\\"200\\">\\nSimple card\\n  <div ngmResizerBar [resizerBarPosition]=\\"barPosition\\" cdkDrag></div>\\n</mat-card>`\\n  })\\n}"}],"packages/angular/entity/compare-member-select/member-select.component.stories.ts":[{"name":"Calendar","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/compare-member-select/member-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    label: \'Dimension\',\\n    dimension: {\\n      dimension: \'[ZCALMONTH]\'\\n    }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/compare-member-select/member-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"{\\n  title: \'Entity/CompareMemberSelect\',\\n  component: NgmCompareMemberSelectComponent,\\n  decorators: [\\n    applicationConfig({\\n      providers: [\\n        provideAnimations(),\\n        provideHttpClient(),\\n        provideTranslate(),\\n        provideLogger(),\\n        importProvidersFrom(MonacoEditorModule.forRoot())\\n      ]\\n    }),\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [MonacoEditorModule]\\n    })\\n  ]\\n} as Meta"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/compare-member-select/member-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    label: \'Dimension\',\\n    dimension: {\\n      dimension: \'[Department]\'\\n    }\\n  }\\n}"}],"packages/angular/entity/entity-schema/entity-schema.component.stories.ts":[{"name":"Capacity","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    capacities: [\\n      EntityCapacity.Dimension,\\n      EntityCapacity.Measure,\\n      EntityCapacity.Calculation,\\n      EntityCapacity.Indicator,\\n    ]\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmEntitySchemaComponent>","defaultValue":"{\\n  title: \'Entity/EntitySchema\',\\n  component: NgmEntitySchemaComponent,\\n  decorators: [\\n    applicationConfig({\\n      providers: [\\n        provideAnimations(),\\n        provideTranslate(),\\n        provideHttpClient(),\\n        provideOcapCore(),\\n        {\\n          provide: OCAP_AGENT_TOKEN,\\n          useClass: MockAgent,\\n          multi: true\\n        },\\n        {\\n          provide: OCAP_DATASOURCE_TOKEN,\\n          useValue: {\\n            type: \'SQL\',\\n            factory: async (): Promise<Type<DataSource>> => {\\n              const { SQLDataSource } = await import(\'@metad/ocap-sql\')\\n              return SQLDataSource\\n            }\\n          },\\n          multi: true\\n        },\\n        {\\n          provide: OCAP_MODEL_TOKEN,\\n          useValue: {\\n            name: \'Sales\',\\n            type: \'SQL\',\\n            agentType: AgentType.Browser,\\n            settings: {\\n              ignoreUnknownProperty: true\\n            },\\n            schema: {\\n              cubes: [CUBE_SALES_ORDER]\\n            }\\n          },\\n          multi: true\\n        }\\n      ]\\n    }),\\n    moduleMetadata({\\n      imports: [BrowserAnimationsModule, MatSidenavModule, DragDropModule, NgmEntitySchemaComponent, DragComponent],\\n      providers: [NgmDSCoreService]\\n    })\\n  ]\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n  }\\n}"},{"name":"SelectedHierarchy","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    selectedHierarchy: \'[Product]\'\\n  }\\n}"}],"packages/angular/common/tree-table/tree-table.component.stories.ts":[{"name":"CellTemplate","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n  },\\n  render: (args: Partial<TestCellTemplate>) => ({\\n    template: `<ngm-test-tree-table-cell-template></ngm-test-tree-table-cell-template>`\\n  })\\n}"},{"name":"DensityCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    data: TREE_NODE_DATA,\\n    columns: [\\n      {\\n        name: \'type\',\\n        caption: \'类型\'\\n      }\\n    ],\\n    displayDensity: DisplayDensity.compact\\n  }\\n}"},{"name":"Grid","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    data: TREE_NODE_DATA,\\n    columns: [\\n      {\\n        name: \'type\',\\n        caption: \'类型\'\\n      }\\n    ],\\n    displayDensity: DisplayDensity.compact,\\n    grid: true\\n  }\\n}"},{"name":"InitialLevel","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    data: TREE_NODE_DATA,\\n    columns: [\\n      {\\n        name: \'type\',\\n        caption: \'类型\'\\n      }\\n    ],\\n    initialLevel: Number.MAX_SAFE_INTEGER\\n  }\\n}"},{"name":"Pipe","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    data: TREE_NODE_DATA,\\n    columns: [\\n      {\\n        name: \'type\',\\n        caption: \'类型\',\\n        pipe: (value) => {\\n          return `Type is ` + value\\n        }\\n      }\\n    ],\\n    displayDensity: DisplayDensity.compact,\\n    striped: true\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    data: TREE_NODE_DATA,\\n    columns: [\\n      {\\n        name: \'type\',\\n        caption: \'类型\'\\n      }\\n    ]\\n  },\\n}"},{"name":"StickyHeaders","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    nameLabel: \'名称\',\\n    data: TREE_NODE_DATA,\\n    columns: [\\n      {\\n        name: \'type\',\\n        caption: \'类型\'\\n      }\\n    ],\\n    initialLevel: Number.MAX_SAFE_INTEGER,\\n    stickyHeaders: true\\n  }\\n}"},{"name":"Striped","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    data: TREE_NODE_DATA,\\n    columns: [\\n      {\\n        name: \'type\',\\n        caption: \'类型\'\\n      }\\n    ],\\n    displayDensity: DisplayDensity.compact,\\n    striped: true\\n  }\\n}"},{"name":"TREE_NODE_DATA","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"[\\n  {\\n    name: \'Fruit\',\\n    children: [\\n      { name: \'Apple\', value: 10, raw: { type: \'Hive\' } },\\n      { name: \'Banana\', value: 20 },\\n      { name: \'Fruit loops\', value: 30 }\\n    ]\\n  },\\n  {\\n    name: \'Vegetables\',\\n    children: [\\n      {\\n        name: \'Green\',\\n        children: [\\n          { name: \'Broccoli\', value: 10 },\\n          { name: \'Brussel sprouts\', value: 20 }\\n        ]\\n      },\\n      {\\n        name: \'Orange\',\\n        children: [\\n          { name: \'Pumpkins\', value: 30, raw: { type: \'PG\' } },\\n          { name: \'Carrots\', value: 40 }\\n        ]\\n      }\\n    ]\\n  }\\n] as any"}],"packages/angular/common/tabs/tabs.stories.ts":[{"name":"CloseButton","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tabs/tabs.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"((args: any) => ({\\n  props: args,\\n  template: `\\n<mat-tab-group class=\\"ngm-appearance-desktop\\" disableRipple>\\n  <mat-tab label=\\"First\\">\\n    <ng-template matTabLabel>First\\n      <button mat-icon-button disableRipple displayDensity=\\"cosy\\" class=\\"ngm-appearance-desktop ngm-tab-button-right\\"\\n          [matMenuTriggerFor]=\\"pointMenu\\"\\n          [matMenuTriggerData]=\\"{point: point}\\"\\n      >\\n          <mat-icon>more_vert</mat-icon>\\n      </button>\\n    </ng-template>\\n   Content 1 </mat-tab>\\n  <mat-tab label=\\"Second\\"> Content 2 </mat-tab>\\n  <mat-tab label=\\"Third\\"> Content 3 </mat-tab>\\n</mat-tab-group>\\n<mat-menu #pointMenu=\\"matMenu\\" xPosition=\\"before\\">\\n  <button mat-menu-item>Item 1</button>\\n  <button mat-menu-item>Item 2</button>\\n</mat-menu>\\n  `,\\n  styles: [``]\\n})).bind({})"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tabs/tabs.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n  },\\n}"}],"packages/angular/common/table/table/table.component.stories.ts":[{"name":"columns","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/table/table/table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[{ name: \'name\', caption: \'Name\' }, { name: \'caption\', caption: \'Caption\' }, { name: \'type\', caption: \'Type\' }]"},{"name":"data","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/table/table/table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    name: \'name1\',\\n    caption: \'caption1\',\\n    type: \'type1\'\\n  },\\n  {\\n    name: \'name2\',\\n    caption: \'caption2\',\\n    type: \'type2\'\\n  },\\n  {\\n    name: \'name3\',\\n    caption: \'caption3\',\\n    type: \'type3\'\\n  }\\n]"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/table/table/table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmTableComponent>","defaultValue":"{\\n  title: \'Common/Table\',\\n  component: NgmTableComponent,\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [OcapCoreModule]\\n    })\\n  ]\\n}"},{"name":"Paginator","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/table/table/table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    columns,\\n    data,\\n    paging: true\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/table/table/table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    columns,\\n    data\\n  }\\n}"}],"packages/angular/.storybook/main.ts":[{"name":"config","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/.storybook/main.ts","deprecated":false,"deprecationMessage":"","type":"StorybookConfig","defaultValue":"{\\n  stories: [\'../**/*.mdx\', \'../**/*.stories.@(js|jsx|ts|tsx|mdx)\'],\\n  addons: [\\n    //👇 Your documentation written in MDX along with your stories goes here\\n    \'@storybook/addon-docs\',\\n    \'@storybook/addon-essentials\',\\n    \'@storybook/addon-storysource\',\\n    \'@storybook/addon-themes\'\\n  ],\\n  framework: {\\n    name: \'@storybook/angular\',\\n    options: {}\\n  },\\n  docs: {\\n    autodocs: true\\n  }\\n}"}],"packages/angular/copilot/stories/chat.stories.ts":[{"name":"CustomEngine","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/copilot/stories/chat.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    copilotEngine: new StorybookCustomCopilotEngine()\\n  }\\n}"},{"name":"CustomNgmCopilotEngine","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/copilot/stories/chat.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n<div>\\n  <ngm-sb-copilot-user></ngm-sb-copilot-user>\\n  <ngm-copilot-chat ${argsToTemplate(\\n    args\\n  )} class=\\"h-[500px] w-[300px] shadow-lg rounded-lg m-4\\" style=\\"height: 500px;\\"></ngm-copilot-chat>\\n</div>`\\n  }),\\n  args: {\\n    welcomeTitle: \'Welcome to My AI Copilot\'\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/copilot/stories/chat.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    welcomeTitle: \'Welcome to My AI Copilot\'\\n  }\\n}"},{"name":"Size","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/copilot/stories/chat.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `<ngm-copilot-chat ${argsToTemplate(\\n      args\\n    )} class=\\"h-[500px] w-[300px] shadow-lg rounded-lg m-4\\" style=\\"height: 500px;\\"></ngm-copilot-chat>`\\n  }),\\n  args: {\\n    welcomeTitle: \'Welcome to My AI Copilot\'\\n  },\\n  parameters: {\\n    background: { default: \'dark\' },\\n    actions: { argTypesRegex: \'^conversations.*\' }\\n  }\\n}"}],"packages/angular/common/select/select/select.component.stories.ts":[{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    selectOptions: TREE_NODE_DATA,\\n    valueKey: \'key\'\\n  }\\n}"},{"name":"Density","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n<div class=\\"flex items-center gap-4 p-4\\">\\n  <ngm-select label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n  </ngm-select>\\n\\n  <ngm-select searchable label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n  </ngm-select>\\n\\n\\n  <ngm-select label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n    <button ngmSuffix mat-icon-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </ngm-select>\\n  <ngm-select searchable label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n    <button ngmSuffix mat-icon-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </ngm-select>\\n  </div>\\n<div displayDensity=\\"cosy\\" class=\\"flex items-center gap-4 p-4\\">\\n  <ngm-select label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n  </ngm-select>\\n\\n  <ngm-select searchable label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n  </ngm-select>\\n\\n\\n  <ngm-select label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n    <button ngmSuffix mat-icon-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </ngm-select>\\n  <ngm-select searchable label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n    <button ngmSuffix mat-icon-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </ngm-select>\\n</div>\\n\\n<div displayDensity=\\"compact\\" class=\\"flex items-center gap-4 p-4\\">\\n  <ngm-select label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n  </ngm-select>\\n\\n  <ngm-select searchable label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n  </ngm-select>\\n\\n  <ngm-select label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\" displayDensity=\\"compact\\">\\n    <button ngmSuffix mat-icon-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </ngm-select>\\n  <ngm-select searchable label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n    <button ngmSuffix mat-icon-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </ngm-select>\\n</div>\\n    `\\n  }),\\n  args: {\\n    selectOptions: TREE_NODE_DATA,\\n    valueKey: \'key\'\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmSelectComponent>","defaultValue":"{\\n  title: \'Common/Select\',\\n  component: NgmSelectComponent,\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [MatButtonModule, MatIconModule, OcapCoreModule, NgmSelectModule]\\n    })\\n  ]\\n}"},{"name":"Suffix","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n<ngm-select [selectOptions]=\\"selectOptions\\">\\n<div ngmSuffix>suffix</div>\\n</ngm-select>    \\n    `\\n  }),\\n  args: {\\n    selectOptions: TREE_NODE_DATA,\\n    valueKey: \'key\'\\n  }\\n}"},{"name":"SuffixSearchable","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n<ngm-select searchable [selectOptions]=\\"selectOptions\\" ${argsToTemplate(args)}>\\n  <div ngmSuffix>\\n    <mat-icon>search</mat-icon>\\n  </div>\\n</ngm-select>    \\n    `\\n  }),\\n  args: {\\n    selectOptions: TREE_NODE_DATA,\\n    valueKey: \'key\'\\n  }\\n}"},{"name":"TREE_NODE_DATA","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"[\\n  {\\n    key: null,\\n    caption: \'\',\\n    value: {\\n      name: null\\n    }\\n  },\\n  {\\n    key: \'Fruit\',\\n    caption: \'水果\'\\n  },\\n  { key: \'Apple\', caption: \'苹果\', value: { type: \'Hive\' } },\\n  { key: \'Banana\', caption: \'香蕉\' },\\n  { key: \'Fruit loops\', caption: \'果循环\' },\\n  {\\n    key: \'Vegetables\',\\n    caption: \'蔬菜\'\\n  },\\n  {\\n    key: \'Green\',\\n    caption: \'绿色\'\\n  },\\n  { key: \'Broccoli\', caption: \'西兰花\' },\\n  { key: \'Brussel sprouts\', caption: \'豆芽\' },\\n  {\\n    key: \'Orange\',\\n    caption: \'橙\'\\n  },\\n  { key: \'Pumpkins\', caption: \'南瓜\', raw: { type: \'PG\' } },\\n  { key: \'Carrots\', caption: \'胡萝卜\' }\\n] as any"},{"name":"WithIcon","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    valueKey: \'key\',\\n    selectOptions: [\\n      {\\n        key: \'Fruit\',\\n        caption: \'水果\',\\n        icon: \'apple\'\\n      }\\n    ]\\n  }\\n}"}],"packages/angular/common/input/input.component.stories.ts":[{"name":"Density","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {},\\n  render: (args) => ({\\n    props: args,\\n    template: `<div class=\\"flex flex-col gap-2\\">\\n<div class=\\"ngm-density__comfort\\">\\n  <ngm-input ${argsToTemplate(args)} label=\\"Comfort:\\"></ngm-input>\\n</div>\\n<div class=\\"ngm-density__cosy\\">\\n  <ngm-input ${argsToTemplate(args)} label=\\"Cosy:\\"></ngm-input>\\n</div>\\n<div class=\\"ngm-density__compact\\">\\n  <ngm-input ${argsToTemplate(args)} label=\\"Compact:\\"></ngm-input>\\n</div>\\n</div>`\\n  })\\n}"},{"name":"Disabled","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    disabled: true\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmInputComponent>","defaultValue":"{\\n  title: \'Common/Input\',\\n  component: NgmInputComponent,\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations()]\\n    }),\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [OcapCoreModule]\\n    })\\n  ]\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {}\\n}"}],"packages/angular/common/tag/tag.component.stories.ts":[{"name":"Density","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tag/tag.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    tags,\\n    color: \'red\'\\n  },\\n  render: (args: Partial<NgmTagsComponent>) => ({\\n    props: args,\\n    template: `<div class=\\"flex flex-col gap-2\\">\\n<div class=\\"ngm-density__comfort\\">\\n  <label>Comfort:</label>\\n  <ngm-tags ${argsToTemplate(args)}></ngm-tags>\\n</div>\\n<div class=\\"ngm-density__cosy\\">\\n  <label>Cosy:</label>\\n  <ngm-tags ${argsToTemplate(args)}></ngm-tags>\\n</div>\\n<div class=\\"ngm-density__compact\\">\\n  <label>Compact:</label>\\n  <ngm-tags ${argsToTemplate(args)}></ngm-tags>\\n</div>\\n</div>`\\n  })\\n}"},{"name":"Disabled","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tag/tag.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    tags,\\n    color: \'blue\',\\n    disabled: true\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tag/tag.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    color: \'primary\',\\n    tags\\n  }\\n}"},{"name":"Selectable","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tag/tag.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    color: \'green\',\\n    selectable: true,\\n    tags\\n  }\\n}"},{"name":"tags","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tag/tag.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    key: \'tag1\',\\n    caption: \'Tag 1\',\\n  },\\n  {\\n    key: \'tag2\',\\n    caption: \'Tag 2\',\\n  },\\n  {\\n    key: \'tag3\',\\n    caption: \'Tag 3\',\\n  }\\n]"}],"packages/angular/common/breadcrumb/breadcrumb.component.stories.ts":[{"name":"DensityCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/breadcrumb/breadcrumb.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `<ngm-breadcrumb-bar [steps]=\\"steps\\" displayDensity=\\"compact\\"></ngm-breadcrumb-bar>`,\\n  }),\\n  args: {\\n    steps: [\\n      {\\n        value: \'A\',\\n        label: \'Step A\',\\n        active: true\\n      },\\n      {\\n        value: \'B\',\\n        label: \'Step B\',\\n        active: false\\n      }\\n    ]\\n  }\\n}"},{"name":"DensityCosy","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/breadcrumb/breadcrumb.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `<ngm-breadcrumb-bar [steps]=\\"steps\\" displayDensity=\\"cosy\\"></ngm-breadcrumb-bar>`,\\n  }),\\n  args: {\\n    steps: [\\n      {\\n        value: \'A\',\\n        label: \'Step A\',\\n        active: true\\n      },\\n      {\\n        value: \'B\',\\n        label: \'Step B\',\\n        active: false\\n      }\\n    ]\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/breadcrumb/breadcrumb.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    steps: [\\n      {\\n        value: \'A\',\\n        label: \'Step A\',\\n        active: true\\n      },\\n      {\\n        value: \'B\',\\n        label: \'Step B\',\\n        active: false\\n      }\\n    ]\\n  }\\n}"},{"name":"Width","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/breadcrumb/breadcrumb.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `<ngm-breadcrumb-bar style=\\"width: 200px;\\" [steps]=\\"steps\\" displayDensity=\\"compact\\"></ngm-breadcrumb-bar>`,\\n  }),\\n  args: {\\n    steps: [\\n      {\\n        value: \'A\',\\n        label: \'Step A AAAAAAAAAAAA\',\\n        active: true\\n      },\\n      {\\n        value: \'B\',\\n        label: \'Step BBBBBBBBBBBBBB\',\\n        active: false\\n      }\\n    ]\\n  }\\n}"}],"packages/angular/common/search/search.component.stories.ts":[{"name":"DensityCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/search/search.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    displayDensity: DisplayDensity.compact\\n  },\\n  render: (args: Partial<NgmSearchComponent>) => ({\\n    args,\\n    template: `<div class=\\"ngm-density__compact\\">\\n    <ngm-search ${argsToTemplate(args)}></ngm-search>\\n</div>`\\n  })\\n}"},{"name":"Focus","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/search/search.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {},\\n  render: (args: Partial<NgmSearchComponent>) => ({\\n    args,\\n    template: `<ngm-search ${argsToTemplate(args)} cdkMonitorSubtreeFocus></ngm-search>`\\n  })\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/search/search.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {}\\n}"}],"packages/angular/common/display-behaviour/display-behaviour.component.stories.ts":[{"name":"DescriptionAndId","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/display-behaviour/display-behaviour.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: { \\n    option: {\\n      value: 1,\\n      label: \'A\'\\n    },\\n    displayBehaviour: DisplayBehaviour.descriptionAndId\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/display-behaviour/display-behaviour.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: { \\n    option: {\\n      value: 1,\\n      label: \'A\'\\n    }\\n  }\\n}"}],"packages/angular/entity/property-select/property-select.stories.ts":[{"name":"DimensionWithHierarchy","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/property-select/property-select.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    label: \'Property Select\',\\n    dataSettings: {\\n      dataSource: \'key_sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    entityType: ENTITY_TYPE,\\n    capacities: [\\n      PropertyCapacity.Dimension,\\n      PropertyCapacity.Measure,\\n      PropertyCapacity.Parameter\\n    ],\\n    inputValue: {\\n      dimension: \'[Customers]\',\\n      hierarchy: \'[Customers]\',\\n      level: \'[Customers].[Country]\'\\n    }\\n  }\\n}"},{"name":"ENTITY_TYPE","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/property-select/property-select.stories.ts","deprecated":false,"deprecationMessage":"","type":"EntityType","defaultValue":"{\\n  name: \'Sales\',\\n  visible: true,\\n  properties: {\\n    A: {\\n      name: \'A\',\\n      caption: \'Field A\',\\n      role: AggregationRole.dimension,\\n      hierarchies: [\\n        {\\n          name: \'[A]\',\\n          caption: \'H-A\',\\n          role: AggregationRole.hierarchy,\\n          levels: [\\n            {\\n              name: \'[A].[All]\',\\n              caption: \'[A] Level 00\',\\n              role: AggregationRole.level,\\n              levelNumber: 0\\n            },\\n            {\\n              name: \'[A].[Description]\',\\n              caption: \'[A] Level 01\',\\n              role: AggregationRole.level,\\n              levelNumber: 1,\\n              properties: [\\n                {\\n                  name: \'[TEXTSH]\',\\n                  caption: \'短文本\'\\n                },\\n                {\\n                  name: \'[TEXTMD]\',\\n                  caption: \'中文本\'\\n                },\\n                {\\n                  name: \'[TEXTLG]\',\\n                  caption: \'长文本\'\\n                }\\n              ]\\n            }\\n          ]\\n        }\\n      ]\\n    },\\n    B: {\\n      name: \'B\',\\n      caption: \'Field B\',\\n      role: AggregationRole.dimension\\n    },\\n    C: {\\n      name: \'C\',\\n      caption: \'Field C\',\\n      role: AggregationRole.measure\\n    },\\n    D: {\\n      name: \'D\',\\n      caption: \'Field D\',\\n      role: AggregationRole.measure,\\n      calculationType: CalculationType.Calculated,\\n      formula: \'C / 100\'\\n    } as CalculatedProperty\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/property-select/property-select.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmPropertySelectComponent>","defaultValue":"{\\n  title: \'Entity/PropertySelect\',\\n  component: NgmPropertySelectComponent,\\n  excludeStories: /.*Data$/,\\n  tags: [\'autodocs\'],\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideOcapMock(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      //👇 Imports both components to allow component composition with Storybook\\n      declarations: [],\\n      imports: [\\n        FormsModule,\\n        NgmPropertySelectComponent\\n      ]\\n    }),\\n    //👇 Wraps our stories with a decorator\\n    componentWrapperDecorator((story) => `<div style=\\"margin: 3em\\">${story}</div>`)\\n  ],\\n  render: (args) => ({\\n    props: {\\n      ...args,\\n    },\\n    template: `<ngm-property-select [(ngModel)]=\\"inputValue\\" ${argsToTemplate(args)}></ngm-property-select>`\\n  })\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/property-select/property-select.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    label: \'Property Select\',\\n    dataSettings: {\\n      dataSource: \'key_sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    entityType: ENTITY_TYPE,\\n    capacities: [\\n      PropertyCapacity.Dimension,\\n      PropertyCapacity.Measure,\\n      PropertyCapacity.Parameter\\n    ],\\n    inputValue: {\\n      dimension: \'A\',\\n      hierarchy: \'[A]\',\\n    }\\n  }\\n}"}],"packages/angular/core/directives/density.stories.ts":[{"name":"Menu","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/core/directives/density.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {},\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n<div class=\\"flex flex-col\\">\\n  <label>Comfortable</label>\\n  <button mat-icon-button displayDensity=\\"comfortable\\" class=\\"pac-model__nav-action\\"\\n    [matMenuTriggerFor]=\\"menu1\\"\\n    #mt=\\"matMenuTrigger\\"\\n    [class.active]=\\"mt.menuOpen\\"\\n    (click)=\\"$event.stopPropagation();$event.preventDefault()\\">\\n    <mat-icon>more_vert</mat-icon>\\n  </button>\\n\\n  <mat-menu #menu1=\\"matMenu\\" class=\\"ngm-density__comfortable\\">\\n    <button mat-menu-item>\\n        <mat-icon fontSet=\\"material-icons-outlined\\">stars</mat-icon>\\n        <span>{{ \'PAC.MODEL.SaveAsDefaultCube\' | translate: {Default: \\"Save as Default Cube\\"} }}</span>\\n    </button>\\n    <button mat-menu-item class=\\"ngm-appearance-danger\\">\\n        <mat-icon fontSet=\\"material-icons-round\\">delete_forever</mat-icon>\\n        <span>{{ \'PAC.ACTIONS.Delete\' | translate: {Default: \\"Delete\\"} }}</span>\\n    </button>\\n  </mat-menu>\\n\\n  <label>Cosy</label>\\n  <button mat-icon-button displayDensity=\\"cosy\\" class=\\"pac-model__nav-action\\"\\n    [matMenuTriggerFor]=\\"menu2\\"\\n    #mt=\\"matMenuTrigger\\"\\n    [class.active]=\\"mt.menuOpen\\"\\n    (click)=\\"$event.stopPropagation();$event.preventDefault()\\">\\n    <mat-icon>more_vert</mat-icon>\\n  </button>\\n\\n  <mat-menu #menu2=\\"matMenu\\" class=\\"ngm-density__cosy\\">\\n    <button mat-menu-item>\\n        <mat-icon fontSet=\\"material-icons-outlined\\">stars</mat-icon>\\n        <span>{{ \'PAC.MODEL.SaveAsDefaultCube\' | translate: {Default: \\"Save as Default Cube\\"} }}</span>\\n    </button>\\n    <button mat-menu-item class=\\"ngm-appearance-danger\\">\\n        <mat-icon fontSet=\\"material-icons-round\\">delete_forever</mat-icon>\\n        <span>{{ \'PAC.ACTIONS.Delete\' | translate: {Default: \\"Delete\\"} }}</span>\\n    </button>\\n  </mat-menu>\\n\\n  <label>Compact</label>\\n\\n  <button mat-icon-button displayDensity=\\"compact\\" class=\\"pac-model__nav-action\\"\\n    [matMenuTriggerFor]=\\"menu3\\"\\n    #mt=\\"matMenuTrigger\\"\\n    [class.active]=\\"mt.menuOpen\\"\\n    (click)=\\"$event.stopPropagation();$event.preventDefault()\\">\\n    <mat-icon>more_vert</mat-icon>\\n  </button>\\n\\n  <mat-menu #menu3=\\"matMenu\\" class=\\"ngm-density__compact\\">\\n    <button mat-menu-item>\\n        <mat-icon fontSet=\\"material-icons-outlined\\">stars</mat-icon>\\n        <span>{{ \'PAC.MODEL.SaveAsDefaultCube\' | translate: {Default: \\"Save as Default Cube\\"} }}</span>\\n    </button>\\n    <button mat-menu-item class=\\"ngm-appearance-danger\\">\\n        <mat-icon fontSet=\\"material-icons-round\\">delete_forever</mat-icon>\\n        <span>{{ \'PAC.ACTIONS.Delete\' | translate: {Default: \\"Delete\\"} }}</span>\\n    </button>\\n  </mat-menu>\\n</div>\\n    `\\n  })\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/core/directives/density.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {},\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n    <div>\\n      <mat-icon>share</mat-icon>\\n      <mat-icon displayDensity=\\"cosy\\">share</mat-icon>\\n      <mat-icon displayDensity=\\"compact\\">share</mat-icon>\\n    </div>\\n    \\n    <div>\\n      <button mat-icon-button>\\n        <mat-icon>share</mat-icon>\\n      </button>\\n      <button mat-icon-button displayDensity=\\"cosy\\">\\n        <mat-icon>share</mat-icon>\\n      </button>\\n      <button mat-icon-button displayDensity=\\"compact\\">\\n        <mat-icon>share</mat-icon>\\n      </button>\\n    </div>\\n    \\n    <div displayDensity=\\"comfort\\">\\n      <mat-checkbox>Check me!</mat-checkbox>\\n      <ngm-search></ngm-search>\\n      <mat-chip-grid #chipGrid aria-label=\\"Fruit selection\\">\\n        <mat-chip-row>fruit\\n          <button matChipRemove [attr.aria-label]=\\"\'remove \' + fruit\\">\\n            <mat-icon>cancel</mat-icon>\\n          </button>\\n        </mat-chip-row>\\n      </mat-chip-grid>\\n    </div>\\n    <div displayDensity=\\"cosy\\">\\n      <mat-checkbox>Check me!</mat-checkbox>\\n      <ngm-search></ngm-search>\\n      <mat-chip-grid #chipGrid aria-label=\\"Fruit selection\\">\\n        <mat-chip-row>fruit\\n          <button matChipRemove [attr.aria-label]=\\"\'remove \' + fruit\\">\\n            <mat-icon>cancel</mat-icon>\\n          </button>\\n        </mat-chip-row>\\n      </mat-chip-grid>\\n    </div>\\n    <div displayDensity=\\"compact\\">\\n      <mat-checkbox>Check me!</mat-checkbox>\\n      <ngm-search></ngm-search>\\n      <mat-chip-grid #chipGrid aria-label=\\"Fruit selection\\">\\n        <mat-chip-row>fruit\\n          <button matChipRemove [attr.aria-label]=\\"\'remove \' + fruit\\">\\n            <mat-icon>cancel</mat-icon>\\n          </button>\\n        </mat-chip-row>\\n      </mat-chip-grid>\\n    </div>\\n    \\n    <div class=\\"flex items-center gap-2\\">\\n      <mat-chip-grid displayDensity=\\"comfort\\">\\n        <mat-chip-row>fruit\\n          <button matChipRemove [attr.aria-label]=\\"\'remove \' + fruit\\">\\n            <mat-icon>cancel</mat-icon>\\n          </button>\\n        </mat-chip-row>\\n      </mat-chip-grid>\\n      <mat-chip-grid displayDensity=\\"cosy\\">\\n        <mat-chip-row>fruit\\n          <button matChipRemove [attr.aria-label]=\\"\'remove \' + fruit\\">\\n            <mat-icon>cancel</mat-icon>\\n          </button>\\n        </mat-chip-row>\\n      </mat-chip-grid>\\n      <mat-chip-grid displayDensity=\\"compact\\">\\n        <mat-chip-row>fruit\\n          <button matChipRemove [attr.aria-label]=\\"\'remove \' + fruit\\">\\n            <mat-icon>cancel</mat-icon>\\n          </button>\\n        </mat-chip-row>\\n      </mat-chip-grid>\\n    </div>\\n    \\n    <div class=\\"flex items-center gap-2\\">\\n      <mat-chip-set><mat-chip>fruit</mat-chip></mat-chip-set>\\n      <mat-chip-set displayDensity=\\"cosy\\"><mat-chip>fruit</mat-chip></mat-chip-set>\\n      <mat-chip-set displayDensity=\\"compact\\"><mat-chip>fruit</mat-chip></mat-chip-set>\\n    </div>\\n    `\\n  })\\n}"}],"packages/angular/.storybook/preview.ts":[{"name":"preview","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/.storybook/preview.ts","deprecated":false,"deprecationMessage":"","type":"Preview","defaultValue":"{\\n  parameters: {\\n    docs: {\\n      toc: true, // 👈 Enables the table of contents\\n    },\\n  },\\n  decorators: [\\n    withThemeByClassName({\\n      themes: {\\n        light: \'\',\\n        dark: \'dark\',\\n      },\\n      defaultTheme: \'light\',\\n    }),\\n  ]\\n}"}],"packages/angular/copilot/stories/not-enabled.stories.ts":[{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/copilot/stories/not-enabled.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Primary\',\\n    welcomeTitle: \'Welcome to My AI Copilot\',\\n    welcomeSubTitle: \'Your AI Copilot\'\\n  }\\n}"}],"packages/angular/core/directives/appearance.stories.ts":[{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/core/directives/appearance.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: ButtonGroupDirective) => ({\\n    template: `\\n    <mat-slide-toggle>Slide me!</mat-slide-toggle>\\n  \\n  <div >\\n  <div >\\n    <mat-icon>share</mat-icon>\\n    <mat-icon displayDensity=\\"cosy\\">share</mat-icon>\\n    <mat-icon displayDensity=\\"compact\\">share</mat-icon>\\n  </div>\\n  \\n  <div>\\n    <button mat-icon-button ngmAppearance=\\"danger\\">\\n      <mat-icon>share</mat-icon>\\n    </button>\\n    <button mat-icon-button ngmAppearance=\\"acrylic\\">\\n      <mat-icon>share</mat-icon>\\n    </button>\\n    <button mat-icon-button displayDensity=\\"cosy\\">\\n      <mat-icon>share</mat-icon>\\n    </button>\\n    <button mat-icon-button displayDensity=\\"compact\\">\\n      <mat-icon>share</mat-icon>\\n    </button>\\n  </div>\\n  \\n  <div>\\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" ngmAppearance=\\"color\\" color=\\"primary\\">\\n      <mat-button-toggle value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" ngmAppearance=\\"color\\" color=\\"accent\\">\\n      <mat-button-toggle value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" displayDensity=\\"compact\\"\\n      ngmAppearance=\\"color\\" color=\\"accent\\"\\n      [value]=\\"\'italic\'\\">\\n      <mat-button-toggle disableRipple value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle disableRipple value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle disableRipple value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" multiple=\\"true\\" displayDensity=\\"compact\\"\\n      ngmAppearance=\\"color\\" color=\\"accent\\">\\n      <mat-button-toggle disableRipple value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle disableRipple value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle disableRipple value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" vertical ngmAppearance=\\"color\\" color=\\"primary\\">\\n      <mat-button-toggle value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" vertical multiple=\\"true\\" displayDensity=\\"compact\\"\\n      ngmAppearance=\\"color\\" color=\\"accent\\">\\n      <mat-button-toggle disableRipple value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle disableRipple value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle disableRipple value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" ngmAppearance=\\"outline\\" color=\\"primary\\">\\n      <mat-button-toggle value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" ngmAppearance=\\"outline\\" color=\\"primary\\" displayDensity=\\"compact\\">\\n      <mat-button-toggle value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  </div>\\n  \\n  <div>\\n    <mat-chip-list aria-label=\\"Fish selection\\" >\\n      <mat-chip>One fish</mat-chip>\\n      <mat-chip>Two fish</mat-chip>\\n      <mat-chip color=\\"primary\\" selected>Primary fish</mat-chip>\\n      <mat-chip color=\\"accent\\" selected>Accent fish</mat-chip>\\n      <mat-chip color=\\"warn\\" selected>warn fish</mat-chip>\\n    </mat-chip-list>\\n  \\n    <mat-chip-list aria-label=\\"Fish selection\\" ngmAppearance=\\"outline\\">\\n      <mat-chip>One fish</mat-chip>\\n      <mat-chip>Two fish</mat-chip>\\n      <mat-chip color=\\"primary\\" selected>Primary fish</mat-chip>\\n      <mat-chip color=\\"accent\\" selected>Accent fish</mat-chip>\\n      <mat-chip color=\\"warn\\" selected>warn fish</mat-chip>\\n    </mat-chip-list>\\n  \\n    <mat-chip-list aria-label=\\"Fish selection\\" ngmAppearance=\\"dashed\\">\\n      <mat-chip>One fish</mat-chip>\\n      <mat-chip>Two fish</mat-chip>\\n      <mat-chip color=\\"primary\\" selected>Primary fish</mat-chip>\\n      <mat-chip color=\\"accent\\" selected>Accent fish</mat-chip>\\n      <mat-chip color=\\"warn\\" selected>warn fish</mat-chip>\\n    </mat-chip-list>\\n  \\n    <mat-chip-list aria-label=\\"Fish selection\\" ngmAppearance=\\"outline\\" displayDensity=\\"compact\\">\\n      <mat-chip>One fish</mat-chip>\\n      <mat-chip>Two fish</mat-chip>\\n      <mat-chip color=\\"primary\\" selected>Primary fish</mat-chip>\\n      <mat-chip color=\\"accent\\" selected>Accent fish</mat-chip>\\n      <mat-chip color=\\"warn\\" selected>warn fish</mat-chip>\\n    </mat-chip-list>\\n  </div>\\n  \\n  <div fxLayout=\\"row wrap\\" fxLayoutAlign=\\"space-between center\\" >\\n    <div ngmButtonGroup>\\n      <button mat-button>Click me!</button>\\n      <button mat-raised-button color=\\"primary\\">Click me!</button>\\n    </div>\\n  \\n    <div ngmButtonGroup>\\n      <button mat-flat-button>Click me!</button>\\n      <button mat-raised-button color=\\"primary\\">Click me!</button>\\n      <button mat-raised-button color=\\"accent\\">Click me!</button>\\n    </div>\\n  \\n    <div ngmButtonGroup displayDensity=\\"cosy\\">\\n      <button mat-flat-button displayDensity=\\"cosy\\">Click me!</button>\\n      <button mat-raised-button color=\\"primary\\" displayDensity=\\"cosy\\">Click me!</button>\\n      <button mat-raised-button color=\\"accent\\" displayDensity=\\"cosy\\">Click me!</button>\\n    </div>\\n  \\n    <div ngmButtonGroup displayDensity=\\"compact\\">\\n      <button mat-flat-button displayDensity=\\"compact\\">Click me!</button>\\n      <button mat-raised-button color=\\"primary\\" displayDensity=\\"compact\\">Click me!</button>\\n      <button mat-raised-button color=\\"accent\\" displayDensity=\\"compact\\">Click me!</button>\\n    </div>\\n  </div>\\n  \\n  <div fxLayout=\\"row wrap\\" fxLayoutAlign=\\"space-between center\\" >\\n    <button mat-button color=\\"accent\\" [loading]=\\"true\\">Accent</button>\\n  \\n    <button mat-flat-button [loading]=\\"true\\">Confortable</button>\\n    <button mat-flat-button displayDensity=\\"cosy\\" [loading]=\\"true\\">Cosy</button>\\n    <button mat-flat-button displayDensity=\\"compact\\" [loading]=\\"true\\">Compact</button>\\n  \\n    <button mat-raised-button color=\\"primary\\" [loading]=\\"true\\">Primary</button>\\n    <button mat-raised-button color=\\"accent\\" [loading]=\\"true\\">Accent</button>\\n  \\n    <button mat-stroked-button color=\\"accent\\" [loading]=\\"true\\">Accent</button>\\n  \\n    <button mat-icon-button [loading]=\\"true\\" color=\\"primary\\">\\n      <mat-icon>more_vert</mat-icon>\\n    </button>\\n    <button mat-fab [loading]=\\"true\\" color=\\"primary\\">\\n      <mat-icon>delete</mat-icon>\\n    </button>\\n    <button mat-mini-fab [loading]=\\"true\\" color=\\"primary\\">\\n      <mat-icon>menu</mat-icon>\\n    </button>\\n  </div>\\n  \\n  <div fxLayout=\\"row wrap\\" fxLayoutAlign=\\"space-between center\\" >\\n    <div ngmButtonGroup>\\n      <button mat-button>Click me!</button>\\n      <button mat-raised-button color=\\"accent\\" [loading]=\\"true\\">Click me!</button>\\n    </div>\\n  </div>\\n  </div>\\n    `,\\n    props: args\\n  }),\\n  args: {\\n    text: \'Click me!\',\\n    padding: 10,\\n    disabled: true\\n  }\\n}"}],"packages/angular/common/split-button/split-button.component.stories.ts":[{"name":"SplitButton","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/split-button/split-button.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n  },\\n}"}],"packages/angular/common/tree-select/tree-select.component.stories.ts":[{"name":"TREE_NODE_DATA","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"[\\n  {\\n    key: \'Fruit\',\\n    label: \'水果\',\\n    children: [\\n      { key: \'Apple\', label: \'苹果\', value: 10, raw: { type: \'Hive\' } },\\n      { key: \'Banana\', label: \'香蕉\', value: 20 },\\n      { key: \'Fruit loops\', label: \'果循环\', value: 30 },\\n      {\\n        key: \'Fruit2\',\\n        label: \'水果\'\\n      }\\n    ]\\n  },\\n  {\\n    key: \'Vegetables\',\\n    label: \'蔬菜\',\\n    children: [\\n      {\\n        key: \'Green\',\\n        label: \'绿色\',\\n        children: [\\n          { key: \'Broccoli\', label: \'西兰花\', value: 10 },\\n          { key: \'Brussel sprouts\', label: \'豆芽\', value: 20 }\\n        ]\\n      },\\n      {\\n        key: \'Orange\',\\n        label: \'橙\',\\n        children: [\\n          { key: \'Pumpkins\', label: \'南瓜\', value: 30, raw: { type: \'PG\' } },\\n          { key: \'Carrots\', label: \'胡萝卜\', value: 40 }\\n        ]\\n      }\\n    ]\\n  }\\n] as any"}],"packages/angular/common/select/mat/select.component.stories.ts":[{"name":"TREE_NODE_DATA","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/mat/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"[\\n  {\\n    value: \'Fruit\',\\n    label: \'水果\'\\n  },\\n  { value: \'Apple\', label: \'苹果\', raw: { type: \'Hive\' } },\\n  { value: \'Banana\', label: \'香蕉\' },\\n  { value: \'Fruit loops\', label: \'果循环\' },\\n  {\\n    value: \'Vegetables\',\\n    label: \'蔬菜\'\\n  },\\n  {\\n    value: \'Green\',\\n    label: \'绿色\'\\n  },\\n  { value: \'Broccoli\', label: \'西兰花\' },\\n  { value: \'Brussel sprouts\', label: \'豆芽\' },\\n  {\\n    value: \'Orange\',\\n    label: \'橙\'\\n  },\\n  { value: \'Pumpkins\', label: \'南瓜\', raw: { type: \'PG\' } },\\n  { value: \'Carrots\', label: \'胡萝卜\' }\\n] as any"}]},"groupedFunctions":{},"groupedEnumerations":{},"groupedTypeAliases":{"packages/angular/analytical-grid/analytical-grid.component.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<AnalyticalGridComponent<>>","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/common/input/input.component.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmInputComponent>","file":"packages/angular/common/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/common/resizer/resizer.directive.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ResizerBarDirective>","file":"packages/angular/common/resizer/resizer.directive.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/common/search/search.component.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmSearchComponent>","file":"packages/angular/common/search/search.component.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/common/split-button/split-button.component.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<SplitButtonComponent>","file":"packages/angular/common/split-button/split-button.component.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/common/tabs/tabs.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<MatTabGroup>","file":"packages/angular/common/tabs/tabs.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/common/tag/tag.component.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmTagsComponent>","file":"packages/angular/common/tag/tag.component.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/common/tree-table/tree-table.component.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<TreeTableComponent<>>","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/controls/member-tree/member-tree.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmMemberTreeComponent>","file":"packages/angular/controls/member-tree/member-tree.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/copilot/stories/chat.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmCopilotChatComponent>","file":"packages/angular/copilot/stories/chat.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/core/directives/density.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmSearchComponent>","file":"packages/angular/core/directives/density.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/entity/compare-member-select/member-select.component.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmCompareMemberSelectComponent>","file":"packages/angular/entity/compare-member-select/member-select.component.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/entity/entity-schema/entity-schema.component.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmEntitySchemaComponent>","file":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/entity/measure-select/measure-select.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmMeasureSelectComponent>","file":"packages/angular/entity/measure-select/measure-select.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/entity/property-select/property-select.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<>","file":"packages/angular/entity/property-select/property-select.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/parameter/parameter-create/parameter-create.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmParameterCreateComponent>","file":"packages/angular/parameter/parameter-create/parameter-create.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/parameter/parameter-select/parameter-select.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmParameterSelectComponent>","file":"packages/angular/parameter/parameter-select/parameter-select.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/selection/advanced-filter/advanced-filter.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmAdvancedFilterComponent>","file":"packages/angular/selection/advanced-filter/advanced-filter.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/selection/advanced-slicer/advanced-slicer.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmAdvancedSlicerComponent>","file":"packages/angular/selection/advanced-slicer/advanced-slicer.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/selection/slicer/slicer.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<SlicerComponent>","file":"packages/angular/selection/slicer/slicer.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/selection/slicer-bar/slicer-bar.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<SlicerBarComponent>","file":"packages/angular/selection/slicer-bar/slicer-bar.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/selection/slicers/slicers.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<SlicersComponent>","file":"packages/angular/selection/slicers/slicers.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/common/select/select/select.component.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmSelectComponent>","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/common/table/table/table.component.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmTableComponent>","file":"packages/angular/common/table/table/table.component.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/selection/timer/datepicker/datepicker.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmMemberDatepickerComponent>","file":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"YearStory","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmYearpickerComponent>","file":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/selection/timer/time-filter-editor/time-filter-editor.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmTimeFilterEditorComponent>","file":"packages/angular/selection/timer/time-filter-editor/time-filter-editor.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/selection/timer/today-filter/today-filter.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmTodayFilterComponent>","file":"packages/angular/selection/timer/today-filter/today-filter.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}]}},"routes":[],"coverage":{"count":0,"status":"low","files":[{"filePath":"packages/angular/.storybook/main.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"config","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/.storybook/preview.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"preview","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-card/analytical-card.component.stories.ts","type":"class","linktype":"classe","name":"CustomLoader","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"packages/angular/analytical-card/analytical-card.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Appearance","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-card/analytical-card.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ChartTypes","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-card/analytical-card.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DrillDimensions","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-card/analytical-card.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Empty","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-card/analytical-card.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Error","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-card/analytical-card.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"HideButtons","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-card/analytical-card.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Loading","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-card/analytical-card.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-card/analytical-card.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SetOptionError","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"component","linktype":"component","name":"GridsComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"A1Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"A2Sticky","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"A3StickyGrid","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DensityCompact","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DisplayHierarchy","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Error","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Loading","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"MultipleMeasures","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Paging","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"PagingCompact","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"PagingError","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"render","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ShowToolbar","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Sortable","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SwitchTemplate","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/breadcrumb/breadcrumb.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DensityCompact","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/breadcrumb/breadcrumb.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DensityCosy","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/breadcrumb/breadcrumb.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/breadcrumb/breadcrumb.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Width","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/display-behaviour/display-behaviour.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DescriptionAndId","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/display-behaviour/display-behaviour.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/input/input.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Density","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/input/input.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Disabled","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/input/input.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/input/input.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/resizer/resizer.directive.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Bottom","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/resizer/resizer.directive.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Left","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/resizer/resizer.directive.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/resizer/resizer.directive.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Top","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/search/search.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DensityCompact","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/search/search.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Focus","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/search/search.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/select/mat/select.component.stories.ts","type":"component","linktype":"component","name":"TestSelectComponent","coveragePercent":0,"coverageCount":"0/17","status":"low"},{"filePath":"packages/angular/common/select/mat/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"TREE_NODE_DATA","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/select/select/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/select/select/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Density","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/select/select/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/select/select/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Suffix","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/select/select/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SuffixSearchable","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/select/select/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"TREE_NODE_DATA","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/select/select/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"WithIcon","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/split-button/split-button.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SplitButton","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/table/table/table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"columns","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/table/table/table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"data","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/table/table/table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/table/table/table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Paginator","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/table/table/table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tabs/tabs.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"CloseButton","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tabs/tabs.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tag/tag.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Density","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tag/tag.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Disabled","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tag/tag.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tag/tag.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Selectable","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tag/tag.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"tags","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"component","linktype":"component","name":"TestTreeSelectComponent","coveragePercent":0,"coverageCount":"0/19","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"TREE_NODE_DATA","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-table/tree-table.component.stories.ts","type":"component","linktype":"component","name":"TestCellTemplate","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"packages/angular/common/tree-table/tree-table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"CellTemplate","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-table/tree-table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DensityCompact","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-table/tree-table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Grid","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-table/tree-table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"InitialLevel","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-table/tree-table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Pipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-table/tree-table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-table/tree-table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"StickyHeaders","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-table/tree-table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Striped","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-table/tree-table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"TREE_NODE_DATA","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/member-tree/member-tree.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"actionsData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/member-tree/member-tree.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Appearance","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/member-tree/member-tree.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"AutoActiveFirst","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/member-tree/member-tree.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/member-tree/member-tree.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SourceFrom","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"AppearanceOutline","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DensityCompact","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Disabled","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Prefix","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"render","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SelectionTypeMultiple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Suffix","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Width","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"WidthCompact","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/tree-select/tree-select.component.stories.ts","type":"component","linktype":"component","name":"TestMemberTreeSelectComponent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"packages/angular/copilot/stories/chat.stories.ts","type":"component","linktype":"component","name":"NgmSBCopilotUserComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"packages/angular/copilot/stories/chat.stories.ts","type":"class","linktype":"classe","name":"StorybookCustomCopilotEngine","coveragePercent":0,"coverageCount":"0/25","status":"low"},{"filePath":"packages/angular/copilot/stories/chat.stories.ts","type":"injectable","linktype":"injectable","name":"StorybookCopilotEngine","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/copilot/stories/chat.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"CustomEngine","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/copilot/stories/chat.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"CustomNgmCopilotEngine","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/copilot/stories/chat.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/copilot/stories/chat.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Size","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/copilot/stories/not-enabled.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/core/directives/appearance.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/core/directives/density.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Menu","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/core/directives/density.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/entity/compare-member-select/member-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Calendar","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/entity/compare-member-select/member-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/entity/compare-member-select/member-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","type":"component","linktype":"component","name":"DragComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Capacity","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SelectedHierarchy","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/entity/measure-select/measure-select.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"actionsData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/entity/measure-select/measure-select.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/entity/measure-select/measure-select.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/entity/property-select/property-select.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DimensionWithHierarchy","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/entity/property-select/property-select.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ENTITY_TYPE","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/entity/property-select/property-select.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/entity/property-select/property-select.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter-create/parameter-create.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"actionsData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter-create/parameter-create.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter-create/parameter-create.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter-select/parameter-select.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"actionsData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter-select/parameter-select.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter-select/parameter-select.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter/parameter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"AVAILABLE_MEMBERS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter/parameter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter/parameter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ParameterInput","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter/parameter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ParameterInputNumber","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter/parameter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ParameterInputString","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter/parameter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ParameterSelect","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter/parameter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ParameterSelectDensity","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter/parameter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ParameterSelectMultiple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter/parameter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter/parameter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"PrimaryCompact","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter/parameter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"PrimaryMultiple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter/parameter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Slider","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter/parameter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SliderVertical","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/advanced-filter/advanced-filter.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"actionsData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/advanced-filter/advanced-filter.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/advanced-filter/advanced-filter.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/advanced-slicer/advanced-slicer.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"actionsData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/advanced-slicer/advanced-slicer.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/advanced-slicer/advanced-slicer.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/slicer-bar/slicer-bar.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"actionsData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/slicer-bar/slicer-bar.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/slicer-bar/slicer-bar.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Editable","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/slicer-bar/slicer-bar.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/slicer/slicer.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"actionsData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/slicer/slicer.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/slicer/slicer.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Editable","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/slicer/slicer.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/slicers/slicers.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"actionsData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/slicers/slicers.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/slicers/slicers.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Editable","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/slicers/slicers.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"actionsData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Day","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DefaultValue","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Month","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Quarter","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Year","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Year_to_Today","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/timer/datepicker/datepicker.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"YearPicker","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/timer/time-filter-editor/time-filter-editor.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"actionsData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/timer/time-filter-editor/time-filter-editor.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/timer/time-filter-editor/time-filter-editor.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/timer/today-filter/today-filter.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"actionsData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/timer/today-filter/today-filter.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/selection/timer/today-filter/today-filter.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"}]}}');(0,angular.P)(documentation_namespaceObject);const _storybook_preview={parameters:{docs:{toc:!0}},decorators:[(0,dist.f_)({themes:{light:"",dark:"dark"},defaultTheme:"light"})]}},"./storybook-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),external_STORYBOOK_MODULE_CHANNELS_=__webpack_require__("@storybook/channels"),asyncToGenerator=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js");const pipeline=x=>x(),importers=[function(){var _ref=(0,asyncToGenerator.Z)((function*(path){if(!/^\.[\\/](?:packages\/angular(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.mdx)$/.exec(path))return;const pathRemainder=path.substring(19);return __webpack_require__("./packages/angular lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/packages\\/angular(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$")("./"+pathRemainder)}));return function(_x){return _ref.apply(this,arguments)}}(),function(){var _ref2=(0,asyncToGenerator.Z)((function*(path){if(!/^\.[\\/](?:packages\/angular(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.stories\.(js|jsx|ts|tsx|mdx))$/.exec(path))return;const pathRemainder=path.substring(19);return __webpack_require__("./packages/angular lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/packages\\/angular(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx%7Cmdx))$")("./"+pathRemainder)}));return function(_x2){return _ref2.apply(this,arguments)}}()];function _importFn(){return(_importFn=(0,asyncToGenerator.Z)((function*(path){for(let i=0;i<importers.length;i++){const moduleExports=yield pipeline((()=>importers[i](path)));if(moduleExports)return moduleExports}}))).apply(this,arguments)}const channel=(0,external_STORYBOOK_MODULE_CHANNELS_.createBrowserChannel)({page:"preview"});external_STORYBOOK_MODULE_PREVIEW_API_.addons.setChannel(channel),"DEVELOPMENT"===external_STORYBOOK_MODULE_GLOBAL_.global.CONFIG_TYPE&&(window.__STORYBOOK_SERVER_CHANNEL__=channel);const preview=new external_STORYBOOK_MODULE_PREVIEW_API_.PreviewWeb((function importFn(_x3){return _importFn.apply(this,arguments)}),(()=>(0,external_STORYBOOK_MODULE_PREVIEW_API_.composeConfigs)([__webpack_require__("./node_modules/@storybook/angular/dist/client/preview-prod.js"),__webpack_require__("./node_modules/@storybook/angular/dist/client/docs/config.js"),__webpack_require__("./node_modules/@storybook/angular/dist/client/config.js"),__webpack_require__("./node_modules/@storybook/addon-docs/dist/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/actions/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/backgrounds/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/viewport/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/measure/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/outline/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/highlight/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-themes/dist/preview.mjs"),__webpack_require__("./packages/angular/.storybook/preview.ts")])));window.__STORYBOOK_PREVIEW__=preview,window.__STORYBOOK_STORY_STORE__=preview.storyStore,window.__STORYBOOK_ADDONS_CHANNEL__=channel},"./node_modules/memoizerific sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/memoizerific sync recursive",module.exports=webpackEmptyContext},"./packages/angular lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/packages\\/angular(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./src/tutorial/intro.mdx":["./packages/angular/src/tutorial/intro.mdx",9250,7681]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}));var ids=map[req],id=ids[0];return Promise.all(ids.slice(1).map(__webpack_require__.e)).then((()=>__webpack_require__(id)))}webpackAsyncContext.keys=()=>Object.keys(map),webpackAsyncContext.id="./packages/angular lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/packages\\/angular(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$",module.exports=webpackAsyncContext},"./packages/angular lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/packages\\/angular(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx%7Cmdx))$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./analytical-card/analytical-card.component.stories":["./packages/angular/analytical-card/analytical-card.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,9159,1456,6111,8845,5133,8067,7010,4683],"./analytical-card/analytical-card.component.stories.ts":["./packages/angular/analytical-card/analytical-card.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,9159,1456,6111,8845,5133,8067,7010,4683],"./analytical-grid/analytical-grid.component.stories":["./packages/angular/analytical-grid/analytical-grid.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,9159,1456,5133,8067,7010,7237],"./analytical-grid/analytical-grid.component.stories.ts":["./packages/angular/analytical-grid/analytical-grid.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,9159,1456,5133,8067,7010,7237],"./common/breadcrumb/breadcrumb.component.stories":["./packages/angular/common/breadcrumb/breadcrumb.component.stories.ts",3875,2504,6021,5180,9833,5133,3698],"./common/breadcrumb/breadcrumb.component.stories.ts":["./packages/angular/common/breadcrumb/breadcrumb.component.stories.ts",3875,2504,6021,5180,9833,5133,3698],"./common/display-behaviour/display-behaviour.component.stories":["./packages/angular/common/display-behaviour/display-behaviour.component.stories.ts",3875,2504,6021,5180,1470,188,5133,1060],"./common/display-behaviour/display-behaviour.component.stories.ts":["./packages/angular/common/display-behaviour/display-behaviour.component.stories.ts",3875,2504,6021,5180,1470,188,5133,1060],"./common/input/input.component.stories":["./packages/angular/common/input/input.component.stories.ts",3875,2504,6021,9157,5449,4802,2519,1824,6282,7349,8115,5133,5327],"./common/input/input.component.stories.ts":["./packages/angular/common/input/input.component.stories.ts",3875,2504,6021,9157,5449,4802,2519,1824,6282,7349,8115,5133,5327],"./common/resizer/resizer.directive.stories":["./packages/angular/common/resizer/resizer.directive.stories.ts",3875,2504,9157,5449,8213,8680,9159,8895],"./common/resizer/resizer.directive.stories.ts":["./packages/angular/common/resizer/resizer.directive.stories.ts",3875,2504,9157,5449,8213,8680,9159,8895],"./common/search/search.component.stories":["./packages/angular/common/search/search.component.stories.ts",3875,2504,4802,2519,6282,7349,417],"./common/search/search.component.stories.ts":["./packages/angular/common/search/search.component.stories.ts",3875,2504,4802,2519,6282,7349,417],"./common/select/mat/select.component.stories":["./packages/angular/common/select/mat/select.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,7349,1470,8115,188,5997,5484,5133,9315],"./common/select/mat/select.component.stories.ts":["./packages/angular/common/select/mat/select.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,7349,1470,8115,188,5997,5484,5133,9315],"./common/select/select/select.component.stories":["./packages/angular/common/select/select/select.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,5484,5133,110],"./common/select/select/select.component.stories.ts":["./packages/angular/common/select/select/select.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,5484,5133,110],"./common/split-button/split-button.component.stories":["./packages/angular/common/split-button/split-button.component.stories.ts",3875,2504,6021,5180,9833,5133,2174],"./common/split-button/split-button.component.stories.ts":["./packages/angular/common/split-button/split-button.component.stories.ts",3875,2504,6021,5180,9833,5133,2174],"./common/splitter/splitter.stories":["./packages/angular/common/splitter/splitter.stories.ts",3875,9157,5449,8213,8127],"./common/splitter/splitter.stories.ts":["./packages/angular/common/splitter/splitter.stories.ts",3875,9157,5449,8213,8127],"./common/table/table/table.component.stories":["./packages/angular/common/table/table/table.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,5997,9450,8213,9247,9257,5133,5191],"./common/table/table/table.component.stories.ts":["./packages/angular/common/table/table/table.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,5997,9450,8213,9247,9257,5133,5191],"./common/tabs/tabs.stories":["./packages/angular/common/tabs/tabs.stories.ts",3875,2504,6021,9157,5180,9833,5449,1824,7927,3058,5133,5652,9554],"./common/tabs/tabs.stories.ts":["./packages/angular/common/tabs/tabs.stories.ts",3875,2504,6021,9157,5180,9833,5449,1824,7927,3058,5133,5652,9554],"./common/tag/tag.component.stories":["./packages/angular/common/tag/tag.component.stories.ts",9157,4802,6282,5990,7873],"./common/tag/tag.component.stories.ts":["./packages/angular/common/tag/tag.component.stories.ts",9157,4802,6282,5990,7873],"./common/tree-select/tree-select.component.stories":["./packages/angular/common/tree-select/tree-select.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,5149,5484,6607,5133,7363],"./common/tree-select/tree-select.component.stories.ts":["./packages/angular/common/tree-select/tree-select.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,5149,5484,6607,5133,7363],"./common/tree-table/tree-table.component.stories":["./packages/angular/common/tree-table/tree-table.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,9247,6607,2360,5133,5862],"./common/tree-table/tree-table.component.stories.ts":["./packages/angular/common/tree-table/tree-table.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,9247,6607,2360,5133,5862],"./controls/member-list/member-list.component.stories":["./packages/angular/controls/member-list/member-list.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,5133,8067,7010,1443,6533],"./controls/member-list/member-list.component.stories.ts":["./packages/angular/controls/member-list/member-list.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,5133,8067,7010,1443,6533],"./controls/member-table/member-table.component.stories":["./packages/angular/controls/member-table/member-table.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,5133,8067,7010,1443,6643],"./controls/member-table/member-table.component.stories.ts":["./packages/angular/controls/member-table/member-table.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,5133,8067,7010,1443,6643],"./controls/member-tree/member-tree.stories":["./packages/angular/controls/member-tree/member-tree.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,5133,8067,7010,1443,2288],"./controls/member-tree/member-tree.stories.ts":["./packages/angular/controls/member-tree/member-tree.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,5133,8067,7010,1443,2288],"./controls/smart-filter/smart-filter.component.stories":["./packages/angular/controls/smart-filter/smart-filter.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,5133,8067,7010,1443,5465],"./controls/smart-filter/smart-filter.component.stories.ts":["./packages/angular/controls/smart-filter/smart-filter.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,5133,8067,7010,1443,5465],"./controls/smart-select/smart-select.component.stories":["./packages/angular/controls/smart-select/smart-select.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,9450,5484,3343,5133,7784],"./controls/smart-select/smart-select.component.stories.ts":["./packages/angular/controls/smart-select/smart-select.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,9450,5484,3343,5133,7784],"./controls/tree-select/tree-select.component.stories":["./packages/angular/controls/tree-select/tree-select.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,5133,8067,7010,1443,3815],"./controls/tree-select/tree-select.component.stories.ts":["./packages/angular/controls/tree-select/tree-select.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,5133,8067,7010,1443,3815],"./controls/value-help/value-help.component.stories":["./packages/angular/controls/value-help/value-help.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,5133,8067,7010,1443,6137],"./controls/value-help/value-help.component.stories.ts":["./packages/angular/controls/value-help/value-help.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,5133,8067,7010,1443,6137],"./copilot/stories/chat.stories":["./packages/angular/copilot/stories/chat.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,9257,7927,5091,8380,4433,2360,8141,9083,5133,8067,8148,31],"./copilot/stories/chat.stories.ts":["./packages/angular/copilot/stories/chat.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,9257,7927,5091,8380,4433,2360,8141,9083,5133,8067,8148,31],"./copilot/stories/not-enabled.stories":["./packages/angular/copilot/stories/not-enabled.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,9257,7927,5091,8380,4433,2360,8141,9083,5133,8067,8148,2968],"./copilot/stories/not-enabled.stories.ts":["./packages/angular/copilot/stories/not-enabled.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,9257,7927,5091,8380,4433,2360,8141,9083,5133,8067,8148,2968],"./core/directives/appearance.stories":["./packages/angular/core/directives/appearance.stories.ts",3875,2504,6021,9157,5180,9833,4802,2519,5149,1449,6111,5133,2573],"./core/directives/appearance.stories.ts":["./packages/angular/core/directives/appearance.stories.ts",3875,2504,6021,9157,5180,9833,4802,2519,5149,1449,6111,5133,2573],"./core/directives/density.stories":["./packages/angular/core/directives/density.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,5997,5149,7927,5133,5652,2453],"./core/directives/density.stories.ts":["./packages/angular/core/directives/density.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,5997,5149,7927,5133,5652,2453],"./entity/compare-member-select/member-select.component.stories":["./packages/angular/entity/compare-member-select/member-select.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,9257,5091,6607,8380,3766,4622,1449,8141,5133,8067,7010,3276],"./entity/compare-member-select/member-select.component.stories.ts":["./packages/angular/entity/compare-member-select/member-select.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,9257,5091,6607,8380,3766,4622,1449,8141,5133,8067,7010,3276],"./entity/entity-schema/entity-schema.component.stories":["./packages/angular/entity/entity-schema/entity-schema.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,5091,6607,8680,5133,8067,7010,4347],"./entity/entity-schema/entity-schema.component.stories.ts":["./packages/angular/entity/entity-schema/entity-schema.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,5091,6607,8680,5133,8067,7010,4347],"./entity/measure-select/measure-select.stories":["./packages/angular/entity/measure-select/measure-select.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,5091,6607,3766,9321,5133,8067,7010,9365],"./entity/measure-select/measure-select.stories.ts":["./packages/angular/entity/measure-select/measure-select.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,5091,6607,3766,9321,5133,8067,7010,9365],"./entity/property-select/property-select.stories":["./packages/angular/entity/property-select/property-select.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,1291,5133,8067,7010,1443,7394,1977],"./entity/property-select/property-select.stories.ts":["./packages/angular/entity/property-select/property-select.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,1291,5133,8067,7010,1443,7394,1977],"./parameter/parameter-create/parameter-create.stories":["./packages/angular/parameter/parameter-create/parameter-create.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,1291,5133,8067,7010,1443,3958,3748],"./parameter/parameter-create/parameter-create.stories.ts":["./packages/angular/parameter/parameter-create/parameter-create.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,1291,5133,8067,7010,1443,3958,3748],"./parameter/parameter-select/parameter-select.stories":["./packages/angular/parameter/parameter-select/parameter-select.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,1291,5133,8067,7010,1443,3958,7431],"./parameter/parameter-select/parameter-select.stories.ts":["./packages/angular/parameter/parameter-select/parameter-select.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,1291,5133,8067,7010,1443,3958,7431],"./parameter/parameter/parameter.component.stories":["./packages/angular/parameter/parameter/parameter.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,5133,8067,7010,1443,6931],"./parameter/parameter/parameter.component.stories.ts":["./packages/angular/parameter/parameter/parameter.component.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,5133,8067,7010,1443,6931],"./selection/advanced-filter/advanced-filter.stories":["./packages/angular/selection/advanced-filter/advanced-filter.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,1291,4433,8680,3058,8664,4460,5133,8067,7010,1443,7394,4026,910],"./selection/advanced-filter/advanced-filter.stories.ts":["./packages/angular/selection/advanced-filter/advanced-filter.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,1291,4433,8680,3058,8664,4460,5133,8067,7010,1443,7394,4026,910],"./selection/advanced-slicer/advanced-slicer.stories":["./packages/angular/selection/advanced-slicer/advanced-slicer.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,1291,4433,8680,3058,8664,4460,5133,8067,7010,1443,7394,4026,8556],"./selection/advanced-slicer/advanced-slicer.stories.ts":["./packages/angular/selection/advanced-slicer/advanced-slicer.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,1291,4433,8680,3058,8664,4460,5133,8067,7010,1443,7394,4026,8556],"./selection/slicer-bar/slicer-bar.stories":["./packages/angular/selection/slicer-bar/slicer-bar.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,1291,4433,8680,3058,8664,4460,5133,8067,7010,1443,7394,4026,8840,2901],"./selection/slicer-bar/slicer-bar.stories.ts":["./packages/angular/selection/slicer-bar/slicer-bar.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,1291,4433,8680,3058,8664,4460,5133,8067,7010,1443,7394,4026,8840,2901],"./selection/slicer/slicer.stories":["./packages/angular/selection/slicer/slicer.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,1291,4433,8680,3058,8664,4460,5133,8067,7010,1443,7394,4026,8840,7849],"./selection/slicer/slicer.stories.ts":["./packages/angular/selection/slicer/slicer.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,1291,4433,8680,3058,8664,4460,5133,8067,7010,1443,7394,4026,8840,7849],"./selection/slicers/slicers.stories":["./packages/angular/selection/slicers/slicers.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,1291,4433,8680,3058,8664,4460,5133,8067,7010,1443,7394,4026,8840,514],"./selection/slicers/slicers.stories.ts":["./packages/angular/selection/slicers/slicers.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,5997,9450,8213,5149,9247,5484,3343,9257,7927,5091,6607,8380,3766,4622,1449,1291,4433,8680,3058,8664,4460,5133,8067,7010,1443,7394,4026,8840,514],"./selection/timer/datepicker/datepicker.stories":["./packages/angular/selection/timer/datepicker/datepicker.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,3343,7927,4622,4646,5133,5652,3738,5271],"./selection/timer/datepicker/datepicker.stories.ts":["./packages/angular/selection/timer/datepicker/datepicker.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,3343,7927,4622,4646,5133,5652,3738,5271],"./selection/timer/time-filter-editor/time-filter-editor.stories":["./packages/angular/selection/timer/time-filter-editor/time-filter-editor.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,9450,8213,3343,3766,8664,5133,3161],"./selection/timer/time-filter-editor/time-filter-editor.stories.ts":["./packages/angular/selection/timer/time-filter-editor/time-filter-editor.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,9450,8213,3343,3766,8664,5133,3161],"./selection/timer/today-filter/today-filter.stories":["./packages/angular/selection/timer/today-filter/today-filter.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,3343,7927,4622,4646,5133,5652,3738,3170],"./selection/timer/today-filter/today-filter.stories.ts":["./packages/angular/selection/timer/today-filter/today-filter.stories.ts",3875,2504,6021,9157,5180,9833,5449,4802,2519,1824,6282,7349,1470,8115,188,3343,7927,4622,4646,5133,5652,3738,3170]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}));var ids=map[req],id=ids[0];return Promise.all(ids.slice(1).map(__webpack_require__.e)).then((()=>__webpack_require__(id)))}webpackAsyncContext.keys=()=>Object.keys(map),webpackAsyncContext.id="./packages/angular lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/packages\\/angular(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx%7Cmdx))$",module.exports=webpackAsyncContext},"@storybook/channels":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CHANNELS__},"@storybook/client-logger":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CLIENT_LOGGER__},"@storybook/core-events/preview-errors":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS__},"@storybook/core-events":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CORE_EVENTS__},"@storybook/global":module=>{"use strict";module.exports=__STORYBOOK_MODULE_GLOBAL__},"@storybook/preview-api":module=>{"use strict";module.exports=__STORYBOOK_MODULE_PREVIEW_API__}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[7979],(()=>(__webpack_exec__("./storybook-config-entry.js"),__webpack_exec__("./node_modules/@angular/compiler/fesm2022/compiler.mjs"),__webpack_exec__("./packages/angular/.storybook/peview.scss?ngGlobalStyle"),__webpack_exec__("./packages/angular/_index.scss?ngGlobalStyle"))));__webpack_require__.O()}]);