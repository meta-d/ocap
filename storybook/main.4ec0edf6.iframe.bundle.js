(self.webpackChunkocap=self.webpackChunkocap||[]).push([[179],{"./packages/angular/.storybook/peview.scss?ngGlobalStyle":()=>{},"./packages/angular/_index.scss?ngGlobalStyle":()=>{},"./packages/angular/core/style/prebuilt/indigo-pink.scss?ngGlobalStyle":()=>{},"./packages/angular/.storybook/preview.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>_storybook_preview});var angular=__webpack_require__("./node_modules/@storybook/addon-docs/angular/index.js");const documentation_namespaceObject=JSON.parse('{"pipes":[],"interfaces":[],"injectables":[],"guards":[],"interceptors":[],"classes":[{"name":"CustomLoader","id":"class-CustomLoader-6431ae88e2931145f4d657a8b639fdb409a204832d163d00d9a5eea329248f0fc2ae7380248b990c579656702e38a39d154561854b175934a65b383351b717ad","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { CommonModule } from \'@angular/common\'\\nimport { importProvidersFrom } from \'@angular/core\'\\nimport { provideAnimations } from \'@angular/platform-browser/animations\'\\nimport {\\n  DisplayDensity,\\n  NgmDSCoreService,\\n  NgmMissingTranslationHandler,\\n  OCAP_AGENT_TOKEN,\\n  OCAP_DATASOURCE_TOKEN,\\n  OCAP_MODEL_TOKEN,\\n  OcapCoreModule\\n} from \'@metad/ocap-angular/core\'\\nimport { AgentType, C_MEASURES, DataSource, Schema, Type } from \'@metad/ocap-core\'\\nimport { MissingTranslationHandler, TranslateLoader, TranslateModule } from \'@ngx-translate/core\'\\nimport { Meta, applicationConfig, moduleMetadata } from \'@storybook/angular\'\\nimport { NgxEchartsModule } from \'ngx-echarts\'\\nimport { Observable, of } from \'rxjs\'\\nimport { ZhHans } from \'../i18n\'\\nimport { CUBE_SALES_ORDER, MockAgent } from \'../mock/agent-mock.service\'\\nimport { AnalyticalCardComponent } from \'./analytical-card.component\'\\nimport { AnalyticalCardModule } from \'./analytical-card.module\'\\n\\nclass CustomLoader implements TranslateLoader {\\n  getTranslation(lang: string): Observable<any> {\\n    return of(ZhHans)\\n  }\\n}\\n\\nexport default {\\n  title: \'AnalyticalCardComponent\',\\n  component: AnalyticalCardComponent,\\n  decorators: [\\n    applicationConfig({\\n      providers: [\\n        provideAnimations(),\\n        importProvidersFrom(\\n          TranslateModule.forRoot({\\n            missingTranslationHandler: {\\n              provide: MissingTranslationHandler,\\n              useClass: NgmMissingTranslationHandler\\n            },\\n            loader: { provide: TranslateLoader, useClass: CustomLoader },\\n            defaultLanguage: \'zh-Hans\'\\n          })\\n        ),\\n        importProvidersFrom(OcapCoreModule),\\n        importProvidersFrom(\\n          NgxEchartsModule.forRoot({\\n            echarts: () => import(\'echarts\')\\n          })\\n        )\\n      ]\\n    }),\\n    moduleMetadata({\\n      imports: [CommonModule, AnalyticalCardModule],\\n      providers: [\\n        NgmDSCoreService,\\n        {\\n          provide: OCAP_AGENT_TOKEN,\\n          useClass: MockAgent,\\n          multi: true\\n        },\\n        {\\n          provide: OCAP_DATASOURCE_TOKEN,\\n          useValue: {\\n            type: \'SQL\',\\n            factory: async (): Promise<Type<DataSource>> => {\\n              const { SQLDataSource } = await import(\'@metad/ocap-sql\')\\n              return SQLDataSource\\n            }\\n          },\\n          multi: true\\n        },\\n        {\\n          provide: OCAP_MODEL_TOKEN,\\n          useValue: {\\n            name: \'Sales\',\\n            type: \'SQL\',\\n            agentType: AgentType.Browser,\\n            settings: {\\n              ignoreUnknownProperty: true\\n            },\\n            schema: {\\n              cubes: [\\n                CUBE_SALES_ORDER,\\n                {\\n                  ...CUBE_SALES_ORDER,\\n                  name: \'SalesOrder10s\'\\n                },\\n                {\\n                  ...CUBE_SALES_ORDER,\\n                  name: \'Empty\'\\n                }\\n              ]\\n            } as Schema\\n          },\\n          multi: true\\n        }\\n      ]\\n    })\\n  ]\\n} as Meta<AnalyticalCardComponent>\\n\\nexport const Primary = {\\n  args: {\\n    title: \'Primary Analytical Card\',\\n    appearance: {\\n      // displayBehaviour: DisplayBehaviour.auto,\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}\\n\\nexport const Appearance = {\\n  args: {\\n    title: \'Display Density Compact\',\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}\\n\\nexport const Loading = {\\n  args: {\\n    title: \'Loading\',\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder10s\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}\\n\\nexport const HideButtons = {\\n  args: {\\n    title: \'Hide Buttons\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}\\n\\nexport const Empty = {\\n  args: {\\n    title: \'Empty Data\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'Empty\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}\\n\\nexport const Error = {\\n  args: {\\n    title: \'Error\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales1\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}\\n\\nexport const SetOptionError = {\\n  args: {\\n    title: \'SetOption Error\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          },\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}\\n\\nexport const DrillDimensions = {\\n  args: {\\n    title: \'Drill Dimensions\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      },\\n      presentationVariant: {\\n        groupBy: [\\n          {\\n            dimension: \'[Department]\',\\n            level: \'[Department].[Department]\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}\\n\\n\\nexport const ChartTypes = {\\n  args: {\\n    title: \'Chart Types\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      },\\n      presentationVariant: {\\n        groupBy: [\\n          {\\n            dimension: \'[Department]\',\\n            level: \'[Department].[Department]\'\\n          }\\n        ]\\n      }\\n    },\\n    chartSettings: {\\n      chartTypes: [\\n        {\\n          type: \'Line\'\\n        }\\n      ]\\n    },\\n    options: {}\\n  }\\n}\\n","properties":[],"methods":[{"name":"getTranslation","args":[{"name":"lang","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"lang","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[],"implements":["TranslateLoader"]},{"name":"CustomLoader","id":"class-CustomLoader-1811f949ffbb318607e95247499443f6bd5622c0adfa6c48bc8f94e1ee23f6e2ee25a3c1ca2b18905c526a0f9d08f40cef38ef0ec27acdb0ee9778257279582c-1","file":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { DragDropModule } from \'@angular/cdk/drag-drop\'\\nimport { Component, Input, importProvidersFrom } from \'@angular/core\'\\nimport { CommonModule } from \'@angular/common\'\\nimport { MatSidenavModule } from \'@angular/material/sidenav\'\\nimport { BrowserAnimationsModule, provideAnimations } from \'@angular/platform-browser/animations\'\\nimport {\\n  NgmMissingTranslationHandler,\\n  OcapCoreModule,\\n  OCAP_AGENT_TOKEN,\\n  OCAP_DATASOURCE_TOKEN,\\n  OCAP_MODEL_TOKEN,\\n  NgmDSCoreService\\n} from \'@metad/ocap-angular/core\'\\nimport { CUBE_SALES_ORDER, MockAgent } from \'../../mock/agent-mock.service\'\\nimport { AgentType, DataSettings, DataSource, Type } from \'@metad/ocap-core\'\\nimport { MissingTranslationHandler, TranslateLoader, TranslateModule } from \'@ngx-translate/core\'\\nimport { applicationConfig, Meta, moduleMetadata, Story } from \'@storybook/angular\'\\nimport { Observable, of } from \'rxjs\'\\nimport { ZhHans } from \'@metad/ocap-angular/i18n\'\\nimport { NgmEntitySchemaComponent } from \'./entity-schema.component\'\\n\\nclass CustomLoader implements TranslateLoader {\\n  getTranslation(lang: string): Observable<any> {\\n    return of(ZhHans)\\n  }\\n}\\n\\n@Component({\\n  standalone: true,\\n  imports: [\\n    CommonModule,\\n    MatSidenavModule,\\n    DragDropModule,\\n    NgmEntitySchemaComponent,\\n  ],\\n  selector: \'ngm-story-component-drag\',\\n  template: `<mat-drawer-container class=\\"example-container\\" autosize cdkDropListGroup>\\n  <mat-drawer mode=\\"side\\" opened cdkDropList >\\n    <ngm-entity-schema [dataSettings]=\\"dataSettings\\"></ngm-entity-schema>\\n    <ngm-entity-schema [dataSettings]=\\"{\\n      dataSource: dataSettings.dataSource,\\n      entitySet: \'sales_fact\'\\n    }\\"></ngm-entity-schema>\\n  </mat-drawer>\\n  <mat-drawer-content cdkDropList [cdkDropListData]=\\"drops\\" (cdkDropListDropped)=\\"drop($event)\\">\\n    <ul>\\n      <li *ngFor=\\"let item of drops\\">\\n        {{item.entity}}/{{item.name || item.raw.memberKey}}/{{item.type}}/{{item.dataType}}/{{item.dbType}}\\n      </li>\\n    </ul>\\n  </mat-drawer-content>\\n</mat-drawer-container>`,\\n  styles: [`.mat-drawer-container {height: 500px;}`]\\n})\\nclass DragComponent {\\n  @Input() dataSettings: DataSettings\\n\\n  drops = []\\n  \\n  drop (event) {\\n    this.drops.push(event.item.data)\\n  }\\n}\\n\\nexport default {\\n  title: \'NgmEntitySchemaComponent\',\\n  decorators: [\\n    applicationConfig({\\n      providers: [\\n        provideAnimations(),\\n        importProvidersFrom(\\n          TranslateModule.forRoot({\\n            missingTranslationHandler: {\\n              provide: MissingTranslationHandler,\\n              useClass: NgmMissingTranslationHandler\\n            },\\n            loader: { provide: TranslateLoader, useClass: CustomLoader },\\n            defaultLanguage: \'zh-Hans\'\\n          })\\n        ),\\n        importProvidersFrom(OcapCoreModule),\\n        {\\n          provide: OCAP_AGENT_TOKEN,\\n          useClass: MockAgent,\\n          multi: true\\n        },\\n        {\\n          provide: OCAP_DATASOURCE_TOKEN,\\n          useValue: {\\n            type: \'SQL\',\\n            factory: async (): Promise<Type<DataSource>> => {\\n              const { SQLDataSource } = await import(\'@metad/ocap-sql\')\\n              return SQLDataSource\\n            }\\n          },\\n          multi: true\\n        },\\n        {\\n          provide: OCAP_MODEL_TOKEN,\\n          useValue: {\\n            name: \'Sales\',\\n            type: \'SQL\',\\n            agentType: AgentType.Browser,\\n            settings: {\\n              ignoreUnknownProperty: true\\n            },\\n            schema: {\\n              cubes: [\\n                CUBE_SALES_ORDER\\n              ]\\n            }\\n          },\\n          multi: true\\n        }\\n      ]\\n    }),\\n    moduleMetadata({\\n      imports: [\\n        BrowserAnimationsModule,\\n        MatSidenavModule,\\n        DragDropModule,\\n        NgmEntitySchemaComponent,\\n        DragComponent\\n      ],\\n      providers: [\\n        NgmDSCoreService\\n      ]\\n    })\\n  ]\\n} as Meta<NgmEntitySchemaComponent>\\n\\nconst Template: Story<NgmEntitySchemaComponent> = (args: NgmEntitySchemaComponent) => ({\\n  props: args\\n})\\n\\nexport const Primary = {\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    }\\n  }\\n}\\n\\nexport const SelectedHierarchy = Template.bind({})\\nSelectedHierarchy.args = {\\n  dataSettings: {\\n    dataSource: \'Sales\',\\n    entitySet: \'SalesOrder\'\\n  },\\n  selectedHierarchy: \'[Product]\'\\n}\\n\\n// const DragTemplate = (args: DragComponent) => ({\\n//   props: args,\\n//   template: `<ngm-story-component-drag [dataSettings]=\\"dataSettings\\"></ngm-story-component-drag>`,\\n// })\\n\\n// export const DragPrimary = DragTemplate.bind({})\\n// DragPrimary.args = {\\n//   dataSettings: {\\n//     dataSource: \'Sales\',\\n//     entitySet: \'SalesOrder\'\\n//   }\\n// }\\n","properties":[],"methods":[{"name":"getTranslation","args":[{"name":"lang","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"lang","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[],"implements":["TranslateLoader"],"isDuplicate":true,"duplicateId":1,"duplicateName":"CustomLoader-1"},{"name":"StorybookCopilotEngine","id":"class-StorybookCopilotEngine-4bb23339bf9baf5484efd2bdeae008a2680a9e69d15da2f3ddda723fc6f9b3d9937d903e8eadf3783d3cb950b9673a7c39c44a81c52ace5a16814b7e5ffebd82","file":"packages/angular/copilot/stories/chat.stories.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { CommonModule } from \'@angular/common\'\\nimport { provideHttpClient } from \'@angular/common/http\'\\nimport { importProvidersFrom } from \'@angular/core\'\\nimport { provideAnimations } from \'@angular/platform-browser/animations\'\\nimport { AIOptions, CopilotChatMessage, CopilotChatResponseChoice, CopilotEngine } from \'@metad/copilot\'\\nimport { OcapCoreModule } from \'@metad/ocap-angular/core\'\\nimport { Meta, StoryObj, applicationConfig, argsToTemplate, moduleMetadata } from \'@storybook/angular\'\\nimport { MarkdownModule } from \'ngx-markdown\'\\nimport { Observable, of } from \'rxjs\'\\nimport { provideTranslate, zhHansLanguage } from \'../../mock/\'\\nimport { NgmCopilotChatComponent } from \'../chat/chat.component\'\\nimport { NgmCopilotService } from \'../services\'\\n\\nexport default {\\n  title: \'Copilot/Chat\',\\n  component: NgmCopilotChatComponent,\\n  decorators: [\\n    applicationConfig({\\n      providers: [\\n        provideAnimations(),\\n        provideHttpClient(),\\n        provideTranslate(zhHansLanguage),\\n        importProvidersFrom(OcapCoreModule),\\n        importProvidersFrom(MarkdownModule.forRoot())\\n      ]\\n    }),\\n    moduleMetadata({\\n      imports: [CommonModule, NgmCopilotChatComponent],\\n      providers: [\\n        NgmCopilotService,\\n        {\\n          provide: NgmCopilotService.CopilotConfigFactoryToken,\\n          useValue: () =>\\n            Promise.resolve({\\n              enabled: true,\\n              apiKey: \'sk-xxxxxxxxxxxxxxx\'\\n            })\\n        }\\n      ]\\n    })\\n  ]\\n} as Meta<NgmCopilotChatComponent>\\n\\ntype Story = StoryObj<NgmCopilotChatComponent>\\n\\nexport const Primary: Story = {\\n  args: {\\n    welcomeTitle: \'Welcome to My AI Copilot\'\\n  }\\n}\\n\\nexport const Size: Story = {\\n  render: (args) => ({\\n    props: args,\\n    template: `<ngm-copilot-chat ${argsToTemplate(\\n      args\\n    )} class=\\"h-[500px] w-[300px] shadow-lg rounded-lg m-4\\" style=\\"height: 500px;\\"></ngm-copilot-chat>`\\n  }),\\n  args: {\\n    welcomeTitle: \'Welcome to My AI Copilot\'\\n  },\\n  parameters: {\\n    background: { default: \'dark\' },\\n    actions: { argTypesRegex: \'^conversations.*\' }\\n  }\\n}\\n\\nclass StorybookCopilotEngine implements CopilotEngine {\\n  name?: string = \'Storybook custom engine\'\\n  aiOptions: AIOptions = {\\n    model: \'\',\\n    messages: []\\n  }\\n  systemPrompt?: string\\n  prompts: string[] = [\'/d {name} {age}\']\\n  conversations: CopilotChatMessage[] = []\\n  placeholder?: string\\n\\n  process(\\n    data: { prompt: string; messages?: CopilotChatMessage[] },\\n    options?: { action?: string }\\n  ): Observable<string | CopilotChatMessage[]> {\\n    if (data.prompt === \'/d {name} {age}\') {\\n      const name = options?.action || \'John\'\\n      const age = options?.action || \'18\'\\n      return of(`My name is ${name}, I am ${age} years old.`)\\n    }\\n\\n    return of(\'Non\')\\n  }\\n  preprocess?(prompt: string, options?: any) {\\n    //\\n  }\\n  postprocess?(prompt: string, choices: CopilotChatResponseChoice[]): Observable<string | CopilotChatMessage[]> {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n  dropCopilot?(event: never) {\\n    throw new Error(\'Method not implemented.\')\\n  }\\n}\\n\\nexport const CustomEngine: Story = {\\n  args: {\\n    copilotEngine: new StorybookCopilotEngine()\\n  }\\n}\\n","properties":[{"name":"aiOptions","defaultValue":"{\\n    model: \'\',\\n    messages: []\\n  }","deprecated":false,"deprecationMessage":"","type":"AIOptions","optional":false,"description":"","line":71},{"name":"conversations","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"CopilotChatMessage[]","optional":false,"description":"","line":77},{"name":"name","defaultValue":"\'Storybook custom engine\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":70},{"name":"placeholder","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":78},{"name":"prompts","defaultValue":"[\'/d {name} {age}\']","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":76},{"name":"systemPrompt","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":75}],"methods":[{"name":"dropCopilot","args":[{"name":"event","type":"never","deprecated":false,"deprecationMessage":""}],"optional":true,"returnType":"void","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"never","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"postprocess","args":[{"name":"prompt","type":"string","deprecated":false,"deprecationMessage":""},{"name":"choices","type":"CopilotChatResponseChoice[]","deprecated":false,"deprecationMessage":""}],"optional":true,"returnType":"Observable<string | []>","typeParameters":[],"line":95,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"prompt","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"choices","type":"CopilotChatResponseChoice[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"preprocess","args":[{"name":"prompt","type":"string","deprecated":false,"deprecationMessage":""},{"name":"options","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":true,"returnType":"void","typeParameters":[],"line":92,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"prompt","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"options","type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"process","args":[{"name":"data","type":"literal type","deprecated":false,"deprecationMessage":""},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"Observable<string | []>","typeParameters":[],"line":80,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"data","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"options","type":"literal type","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[],"implements":["CopilotEngine"]}],"directives":[],"components":[{"name":"DragComponent","id":"component-DragComponent-1811f949ffbb318607e95247499443f6bd5622c0adfa6c48bc8f94e1ee23f6e2ee25a3c1ca2b18905c526a0f9d08f40cef38ef0ec27acdb0ee9778257279582c","file":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ngm-story-component-drag","styleUrls":[],"styles":[".mat-drawer-container {height: 500px;}"],"template":"<mat-drawer-container class=\\"example-container\\" autosize cdkDropListGroup>  <mat-drawer mode=\\"side\\" opened cdkDropList >\\n    <ngm-entity-schema [dataSettings]=\\"dataSettings\\"></ngm-entity-schema>\\n    <ngm-entity-schema [dataSettings]=\\"{\\n      dataSource: dataSettings.dataSource,\\n      entitySet: \'sales_fact\'\\n    }\\"></ngm-entity-schema>\\n  </mat-drawer>\\n  <mat-drawer-content cdkDropList [cdkDropListData]=\\"drops\\" (cdkDropListDropped)=\\"drop($event)\\">\\n    <ul>\\n      <li *ngFor=\\"let item of drops\\">\\n        {{item.entity}}/{{item.name || item.raw.memberKey}}/{{item.type}}/{{item.dataType}}/{{item.dbType}}\\n      </li>\\n    </ul>\\n  </mat-drawer-content>\\n</mat-drawer-container>","templateUrl":[],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"dataSettings","deprecated":false,"deprecationMessage":"","line":56,"type":"DataSettings","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"drops","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":58}],"methodsClass":[{"name":"drop","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":60,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"MatSidenavModule","type":"module"},{"name":"DragDropModule","type":"module"},{"name":"NgmEntitySchemaComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { DragDropModule } from \'@angular/cdk/drag-drop\'\\nimport { Component, Input, importProvidersFrom } from \'@angular/core\'\\nimport { CommonModule } from \'@angular/common\'\\nimport { MatSidenavModule } from \'@angular/material/sidenav\'\\nimport { BrowserAnimationsModule, provideAnimations } from \'@angular/platform-browser/animations\'\\nimport {\\n  NgmMissingTranslationHandler,\\n  OcapCoreModule,\\n  OCAP_AGENT_TOKEN,\\n  OCAP_DATASOURCE_TOKEN,\\n  OCAP_MODEL_TOKEN,\\n  NgmDSCoreService\\n} from \'@metad/ocap-angular/core\'\\nimport { CUBE_SALES_ORDER, MockAgent } from \'../../mock/agent-mock.service\'\\nimport { AgentType, DataSettings, DataSource, Type } from \'@metad/ocap-core\'\\nimport { MissingTranslationHandler, TranslateLoader, TranslateModule } from \'@ngx-translate/core\'\\nimport { applicationConfig, Meta, moduleMetadata, Story } from \'@storybook/angular\'\\nimport { Observable, of } from \'rxjs\'\\nimport { ZhHans } from \'@metad/ocap-angular/i18n\'\\nimport { NgmEntitySchemaComponent } from \'./entity-schema.component\'\\n\\nclass CustomLoader implements TranslateLoader {\\n  getTranslation(lang: string): Observable<any> {\\n    return of(ZhHans)\\n  }\\n}\\n\\n@Component({\\n  standalone: true,\\n  imports: [\\n    CommonModule,\\n    MatSidenavModule,\\n    DragDropModule,\\n    NgmEntitySchemaComponent,\\n  ],\\n  selector: \'ngm-story-component-drag\',\\n  template: `<mat-drawer-container class=\\"example-container\\" autosize cdkDropListGroup>\\n  <mat-drawer mode=\\"side\\" opened cdkDropList >\\n    <ngm-entity-schema [dataSettings]=\\"dataSettings\\"></ngm-entity-schema>\\n    <ngm-entity-schema [dataSettings]=\\"{\\n      dataSource: dataSettings.dataSource,\\n      entitySet: \'sales_fact\'\\n    }\\"></ngm-entity-schema>\\n  </mat-drawer>\\n  <mat-drawer-content cdkDropList [cdkDropListData]=\\"drops\\" (cdkDropListDropped)=\\"drop($event)\\">\\n    <ul>\\n      <li *ngFor=\\"let item of drops\\">\\n        {{item.entity}}/{{item.name || item.raw.memberKey}}/{{item.type}}/{{item.dataType}}/{{item.dbType}}\\n      </li>\\n    </ul>\\n  </mat-drawer-content>\\n</mat-drawer-container>`,\\n  styles: [`.mat-drawer-container {height: 500px;}`]\\n})\\nclass DragComponent {\\n  @Input() dataSettings: DataSettings\\n\\n  drops = []\\n  \\n  drop (event) {\\n    this.drops.push(event.item.data)\\n  }\\n}\\n\\nexport default {\\n  title: \'NgmEntitySchemaComponent\',\\n  decorators: [\\n    applicationConfig({\\n      providers: [\\n        provideAnimations(),\\n        importProvidersFrom(\\n          TranslateModule.forRoot({\\n            missingTranslationHandler: {\\n              provide: MissingTranslationHandler,\\n              useClass: NgmMissingTranslationHandler\\n            },\\n            loader: { provide: TranslateLoader, useClass: CustomLoader },\\n            defaultLanguage: \'zh-Hans\'\\n          })\\n        ),\\n        importProvidersFrom(OcapCoreModule),\\n        {\\n          provide: OCAP_AGENT_TOKEN,\\n          useClass: MockAgent,\\n          multi: true\\n        },\\n        {\\n          provide: OCAP_DATASOURCE_TOKEN,\\n          useValue: {\\n            type: \'SQL\',\\n            factory: async (): Promise<Type<DataSource>> => {\\n              const { SQLDataSource } = await import(\'@metad/ocap-sql\')\\n              return SQLDataSource\\n            }\\n          },\\n          multi: true\\n        },\\n        {\\n          provide: OCAP_MODEL_TOKEN,\\n          useValue: {\\n            name: \'Sales\',\\n            type: \'SQL\',\\n            agentType: AgentType.Browser,\\n            settings: {\\n              ignoreUnknownProperty: true\\n            },\\n            schema: {\\n              cubes: [\\n                CUBE_SALES_ORDER\\n              ]\\n            }\\n          },\\n          multi: true\\n        }\\n      ]\\n    }),\\n    moduleMetadata({\\n      imports: [\\n        BrowserAnimationsModule,\\n        MatSidenavModule,\\n        DragDropModule,\\n        NgmEntitySchemaComponent,\\n        DragComponent\\n      ],\\n      providers: [\\n        NgmDSCoreService\\n      ]\\n    })\\n  ]\\n} as Meta<NgmEntitySchemaComponent>\\n\\nconst Template: Story<NgmEntitySchemaComponent> = (args: NgmEntitySchemaComponent) => ({\\n  props: args\\n})\\n\\nexport const Primary = {\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    }\\n  }\\n}\\n\\nexport const SelectedHierarchy = Template.bind({})\\nSelectedHierarchy.args = {\\n  dataSettings: {\\n    dataSource: \'Sales\',\\n    entitySet: \'SalesOrder\'\\n  },\\n  selectedHierarchy: \'[Product]\'\\n}\\n\\n// const DragTemplate = (args: DragComponent) => ({\\n//   props: args,\\n//   template: `<ngm-story-component-drag [dataSettings]=\\"dataSettings\\"></ngm-story-component-drag>`,\\n// })\\n\\n// export const DragPrimary = DragTemplate.bind({})\\n// DragPrimary.args = {\\n//   dataSettings: {\\n//     dataSource: \'Sales\',\\n//     entitySet: \'SalesOrder\'\\n//   }\\n// }\\n","assetsDirs":[],"styleUrlsData":"","stylesData":".mat-drawer-container {height: 500px;}\\n","extends":[]},{"name":"GridsComponent","id":"component-GridsComponent-885d7e3c6af251b06d8b6e103ec697e4e38c5430689590736b35097ce507f0f697382618bd5dbe809442c67c20fef0419e4436a3b3a916b3e234b5c58a3c2621","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ngm-story-component-switch-grid","styleUrls":[],"styles":[],"template":"<button mat-button (click)=\\"switch()\\">Switch</button>    <ngm-analytical-grid\\n      style=\\"width: 400px; height: 400px;\\"\\n      [dataSettings]=\\"grid.dataSettings\\"\\n      [options]=\\"grid.options\\"\\n    ></ngm-analytical-grid>","templateUrl":[],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"a","defaultValue":"{\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    }\\n  }","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":33},{"name":"b","defaultValue":"{\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Department]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    }\\n  }","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":52},{"name":"grid","defaultValue":"this.a","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":71}],"methodsClass":[{"name":"switch","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":72,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"MatButtonModule","type":"module"},{"name":"AnalyticalGridModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \'@angular/common\'\\nimport { provideHttpClient } from \'@angular/common/http\'\\nimport { Component, importProvidersFrom } from \'@angular/core\'\\nimport { MatButtonModule } from \'@angular/material/button\'\\nimport { provideAnimations } from \'@angular/platform-browser/animations\'\\nimport {\\n  DisplayDensity,\\n  NgmDSCoreService,\\n  OCAP_AGENT_TOKEN,\\n  OCAP_DATASOURCE_TOKEN,\\n  OCAP_MODEL_TOKEN,\\n  OcapCoreModule\\n} from \'@metad/ocap-angular/core\'\\nimport { AgentType, C_MEASURES, DataSource, Type } from \'@metad/ocap-core\'\\nimport { Meta, StoryObj, applicationConfig, moduleMetadata } from \'@storybook/angular\'\\nimport { provideTranslate } from \'../mock\'\\nimport { CUBE_SALES_ORDER, MockAgent } from \'../mock/agent-mock.service\'\\nimport { AnalyticalGridComponent } from \'./analytical-grid.component\'\\nimport { AnalyticalGridModule } from \'./analytical-grid.module\'\\n\\n@Component({\\n  standalone: true,\\n  imports: [CommonModule, MatButtonModule, AnalyticalGridModule],\\n  selector: \'ngm-story-component-switch-grid\',\\n  template: `<button mat-button (click)=\\"switch()\\">Switch</button>\\n    <ngm-analytical-grid\\n      style=\\"width: 400px; height: 400px;\\"\\n      [dataSettings]=\\"grid.dataSettings\\"\\n      [options]=\\"grid.options\\"\\n    ></ngm-analytical-grid> `\\n})\\nclass GridsComponent {\\n  a = {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    }\\n  }\\n  b = {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Department]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    }\\n  }\\n  grid = this.a\\n  switch() {\\n    if (this.grid === this.a) {\\n      this.grid = this.b\\n    } else {\\n      this.grid = this.a\\n    }\\n  }\\n}\\n\\nexport default {\\n  title: \'AnalyticalGridComponent\',\\n  component: AnalyticalGridComponent,\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideHttpClient(), provideTranslate(), importProvidersFrom(OcapCoreModule)]\\n    }),\\n    moduleMetadata({\\n      imports: [AnalyticalGridModule, GridsComponent],\\n      providers: [\\n        NgmDSCoreService,\\n        {\\n          provide: OCAP_AGENT_TOKEN,\\n          useClass: MockAgent,\\n          multi: true\\n        },\\n        {\\n          provide: OCAP_DATASOURCE_TOKEN,\\n          useValue: {\\n            type: \'SQL\',\\n            factory: async (): Promise<Type<DataSource>> => {\\n              const { SQLDataSource } = await import(\'@metad/ocap-sql\')\\n              return SQLDataSource\\n            }\\n          },\\n          multi: true\\n        },\\n        {\\n          provide: OCAP_MODEL_TOKEN,\\n          useValue: {\\n            name: \'Sales\',\\n            type: \'SQL\',\\n            agentType: AgentType.Browser,\\n            settings: {\\n              ignoreUnknownProperty: true\\n            },\\n            schema: {\\n              cubes: [\\n                CUBE_SALES_ORDER,\\n                {\\n                  ...CUBE_SALES_ORDER,\\n                  name: \'SalesOrder10s\'\\n                }\\n              ]\\n            }\\n          },\\n          multi: true\\n        }\\n      ]\\n    })\\n  ]\\n} as Meta<AnalyticalGridComponent<any>>\\n\\ntype Story = StoryObj<AnalyticalGridComponent<unknown>>\\nconst render = (args) => ({\\n  props: args,\\n  styles: [`.ngm-analytical-grid {height: 400px;}`]\\n})\\n\\nexport const A1Primary: Story = {\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}\\n\\nexport const A2Sticky = {\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      sticky: true\\n    }\\n  }\\n}\\n\\nexport const A3StickyGrid = {\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      sticky: true,\\n      grid: true\\n    }\\n  }\\n}\\n\\nexport const Loading = {\\n  render,\\n  args: {\\n    title: \'Loading Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder10s\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}\\n\\nexport const DensityCompact = {\\n  render,\\n  args: {\\n    title: \'Analytical Grid compact\',\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}\\n\\nexport const DisplayHierarchy = {\\n  render,\\n  args: {\\n    title: \'Analytical Grid Hierarchy\',\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\',\\n            displayHierarchy: true\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}\\n\\nexport const ShowToolbar = {\\n  render,\\n  args: {\\n    title: \'Analytical Grid Show Toolbar\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      showToolbar: true\\n    }\\n  }\\n}\\n\\nexport const Error = {\\n  render,\\n  args: {\\n    title: \'Analytical Grid Error\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales1\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      showToolbar: true\\n    }\\n  }\\n}\\n\\nexport const Paging = {\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      paging: true,\\n      pageSize: 3\\n    }\\n  }\\n}\\n\\nexport const PagingCompact = {\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      paging: true,\\n      pageSize: 3\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    }\\n  }\\n}\\n\\nexport const PagingError = {\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales1\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      paging: true,\\n      pageSize: 3,\\n      showToolbar: true\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    }\\n  }\\n}\\n\\nexport const Sortable = {\\n  render,\\n  args: {\\n    title: \'Sortable\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          },\\n          {\\n            dimension: \'[Department]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      sortable: true\\n    }\\n  }\\n}\\n\\nexport const MultipleMeasures = {\\n  render,\\n  args: {\\n    title: \'Multiple Measures Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: \'[Department]\'\\n          },\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          },\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Cost\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}\\n\\nexport const SwitchTemplate = {\\n  render: (args) => ({\\n    props: args,\\n    template: `<ngm-story-component-switch-grid></ngm-story-component-switch-grid>`\\n  }),\\n  args: {}\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[]},{"name":"TestCellTemplate","id":"component-TestCellTemplate-0ad1a7f587f08bcb059db8b5d08fb2ed0de9e4052bf5222ca64b0bd5cf72dddbf528d0b7359384818d1823149f2ebb3a6bde015f8565e7ec99243963f620cbb8","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ngm-test-tree-table-cell-template","styleUrls":[],"styles":[],"template":"<ng-template #cell let-data=\\"name\\">\\n  <button mat-button>\\n    {{data}}\\n  </button>\\n</ng-template>\\n<ng-template #name let-data=\\"name\\">\\n  <a href=\\"{{data}}\\">{{data}}</a>\\n</ng-template>\\n\\n<ngm-tree-table [columns]=\\"columns\\" [data]=\\"data\\" [nameCellTemplate]=\\"name\\"></ngm-tree-table>\\n","templateUrl":[],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"cell","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":58,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'cell\'"}],"modifierKind":[170]},{"name":"columns","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":61},{"name":"data","defaultValue":"TREE_NODE_DATA","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":60}],"methodsClass":[{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { AfterViewInit, Component, TemplateRef, ViewChild } from \'@angular/core\'\\nimport { RouterModule } from \'@angular/router\'\\nimport { MatButtonModule } from \'@angular/material/button\'\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\'\\nimport { DisplayDensity, OcapCoreModule } from \'@metad/ocap-angular/core\'\\nimport { Meta, moduleMetadata, Story } from \'@storybook/angular\'\\nimport { TreeTableComponent } from \'./tree-table.component\'\\nimport { TreeTableModule } from \'./tree-table.module\'\\n\\n\\nconst TREE_NODE_DATA = [\\n  {\\n    name: \'Fruit\',\\n    children: [\\n      { name: \'Apple\', value: 10, raw: { type: \'Hive\' } },\\n      { name: \'Banana\', value: 20 },\\n      { name: \'Fruit loops\', value: 30 }\\n    ]\\n  },\\n  {\\n    name: \'Vegetables\',\\n    children: [\\n      {\\n        name: \'Green\',\\n        children: [\\n          { name: \'Broccoli\', value: 10 },\\n          { name: \'Brussel sprouts\', value: 20 }\\n        ]\\n      },\\n      {\\n        name: \'Orange\',\\n        children: [\\n          { name: \'Pumpkins\', value: 30, raw: { type: \'PG\' } },\\n          { name: \'Carrots\', value: 40 }\\n        ]\\n      }\\n    ]\\n  }\\n] as any\\n\\n@Component({\\n  selector: \'ngm-test-tree-table-cell-template\',\\n  template: `\\n<ng-template #cell let-data=\\"name\\">\\n  <button mat-button>\\n    {{data}}\\n  </button>\\n</ng-template>\\n<ng-template #name let-data=\\"name\\">\\n  <a href=\\"{{data}}\\">{{data}}</a>\\n</ng-template>\\n\\n<ngm-tree-table [columns]=\\"columns\\" [data]=\\"data\\" [nameCellTemplate]=\\"name\\"></ngm-tree-table>  \\n  `\\n})\\nclass TestCellTemplate implements AfterViewInit {\\n\\n  @ViewChild(\'cell\') cell: TemplateRef<any>\\n\\n  data = TREE_NODE_DATA\\n  columns\\n\\n  ngOnInit() {\\n    //\\n  }\\n\\n  ngAfterViewInit(): void {\\n    this.columns = [\\n      {\\n        name: \'type\',\\n        caption: \'类型\',\\n        cellTemplate: this.cell\\n      }\\n    ]\\n  }\\n\\n}\\n\\nexport default {\\n  title: \'TreeTableComponent\',\\n  component: TreeTableComponent,\\n  decorators: [\\n    moduleMetadata({\\n      imports: [BrowserAnimationsModule, MatButtonModule, RouterModule, TreeTableModule, OcapCoreModule],\\n      declarations: [ TestCellTemplate ]\\n    })\\n  ]\\n} as Meta<TreeTableComponent<unknown>>\\n\\n\\nconst Template: Story<TreeTableComponent<unknown>> = (args: TreeTableComponent<unknown>) => ({\\n  props: args,\\n  styles: [``]\\n})\\n\\nexport const Primary = Template.bind({})\\nPrimary.args = {\\n  data: TREE_NODE_DATA,\\n  columns: [\\n    {\\n      name: \'type\',\\n      caption: \'类型\'\\n    }\\n  ]\\n}\\n\\nexport const DensityCompact = Template.bind({})\\nDensityCompact.args = {\\n  data: TREE_NODE_DATA,\\n  columns: [\\n    {\\n      name: \'type\',\\n      caption: \'类型\'\\n    }\\n  ],\\n  displayDensity: DisplayDensity.compact\\n}\\n\\nexport const Striped = Template.bind({})\\nStriped.args = {\\n  data: TREE_NODE_DATA,\\n  columns: [\\n    {\\n      name: \'type\',\\n      caption: \'类型\'\\n    }\\n  ],\\n  displayDensity: DisplayDensity.compact,\\n  striped: true\\n}\\n\\nexport const Grid = Template.bind({})\\nGrid.args = {\\n  data: TREE_NODE_DATA,\\n  columns: [\\n    {\\n      name: \'type\',\\n      caption: \'类型\'\\n    }\\n  ],\\n  displayDensity: DisplayDensity.compact,\\n  grid: true\\n}\\n\\nexport const Pipe = Template.bind({})\\nPipe.args = {\\n  data: TREE_NODE_DATA,\\n  columns: [\\n    {\\n      name: \'type\',\\n      caption: \'类型\',\\n      pipe: (value) => {\\n        return `Type is ` + value\\n      }\\n    }\\n  ],\\n  displayDensity: DisplayDensity.compact,\\n  striped: true\\n}\\n\\nexport const InitialLevel = Template.bind({})\\nInitialLevel.args = {\\n  data: TREE_NODE_DATA,\\n  columns: [\\n    {\\n      name: \'type\',\\n      caption: \'类型\'\\n    }\\n  ],\\n  initialLevel: Number.MAX_SAFE_INTEGER\\n}\\n\\nexport const StickyHeaders = Template.bind({})\\nStickyHeaders.args = {\\n  nameLabel: \'名称\',\\n  data: TREE_NODE_DATA,\\n  columns: [\\n    {\\n      name: \'type\',\\n      caption: \'类型\'\\n    }\\n  ],\\n  initialLevel: Number.MAX_SAFE_INTEGER,\\n  stickyHeaders: true\\n}\\n\\nconst TemplateTemplate: Story<TestCellTemplate> = (args: TestCellTemplate) => ({\\n  props: args,\\n  template: `<ngm-test-tree-table-cell-template></ngm-test-tree-table-cell-template>`\\n})\\n\\nexport const CellTemplate = TemplateTemplate.bind({})\\nCellTemplate.args = {\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"implements":["AfterViewInit"]},{"name":"TestMemberTreeSelectComponent","id":"component-TestMemberTreeSelectComponent-eedbb92dc2207c4a20a7940ee8be1cd22a6252c75d35596eb8c324d329cfd1811c74c1d3032a7fdd29317081c07f7d31239db79dfe1d3e8075be4c60f68d505b","file":"packages/angular/controls/tree-select/tree-select.component.stories.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"test-member-tree-select","styleUrls":[],"styles":[],"template":"<ngm-member-tree-select    [dataSettings]=\\"dataSettings\\"\\n    [dimension]=\\"dimension\\"\\n    [appearance]=\\"appearance\\"\\n    [options]=\\"options\\"\\n    [data]=\\"data\\"\\n    [ngModel]=\\"model\\"\\n    (ngModelChange)=\\"onModelChange($event)\\">\\n  </ngm-member-tree-select>","templateUrl":[],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"appearance","deprecated":false,"deprecationMessage":"","line":39,"type":"NgmAppearance","decorators":[]},{"name":"data","deprecated":false,"deprecationMessage":"","line":41,"type":"any","decorators":[]},{"name":"dataSettings","deprecated":false,"deprecationMessage":"","line":37,"type":"DataSettings","decorators":[]},{"name":"dimension","deprecated":false,"deprecationMessage":"","line":38,"type":"Dimension","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","line":36,"type":"string","decorators":[]},{"name":"model","defaultValue":"{\\n    members: [\\n      { value: \'Fruit\' }\\n    ]\\n  }","deprecated":false,"deprecationMessage":"","line":42,"type":"{ members: {}; }","decorators":[]},{"name":"options","deprecated":false,"deprecationMessage":"","line":40,"type":"MemberTreeSelectOptions","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"onModelChange","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\'\\nimport { FormsModule } from \'@angular/forms\'\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\'\\nimport { TREE_NODE_DATA } from \'@metad/ocap-angular/common/tree-select/tree-select.component.stories\'\\nimport {\\n  DisplayDensity,\\n  NgmAppearance,\\n  NgmMissingTranslationHandler,\\n  OcapCoreModule,\\n  OCAP_AGENT_TOKEN,\\n  OCAP_DATASOURCE_TOKEN,\\n  OCAP_MODEL_TOKEN,\\n  NgmDSCoreService\\n} from \'@metad/ocap-angular/core\'\\nimport { AgentType, DataSettings, DataSource, Dimension, DisplayBehaviour, Type } from \'@metad/ocap-core\'\\nimport { MissingTranslationHandler, TranslateModule } from \'@ngx-translate/core\'\\nimport { Meta, moduleMetadata, Story } from \'@storybook/angular\'\\nimport { CUBE_SALES_ORDER, MockAgent } from \'../../mock/agent-mock.service\'\\nimport { ControlsModule } from \'../controls.module\'\\nimport { MemberTreeSelectOptions, NgmMemberTreeSelectComponent } from \'./tree-select.component\'\\n\\n@Component({\\n  selector: \'test-member-tree-select\',\\n  template: `<ngm-member-tree-select\\n    [dataSettings]=\\"dataSettings\\"\\n    [dimension]=\\"dimension\\"\\n    [appearance]=\\"appearance\\"\\n    [options]=\\"options\\"\\n    [data]=\\"data\\"\\n    [ngModel]=\\"model\\"\\n    (ngModelChange)=\\"onModelChange($event)\\">\\n  </ngm-member-tree-select>`\\n})\\nclass TestMemberTreeSelectComponent<T> {\\n  \\n  @Input() label: string\\n  @Input() dataSettings: DataSettings\\n  @Input() dimension: Dimension\\n  @Input() appearance: NgmAppearance\\n  @Input() options: MemberTreeSelectOptions\\n  @Input() data\\n  @Input() model = {\\n    members: [\\n      { value: \'Fruit\' }\\n    ]\\n  }\\n\\n  onModelChange(event) {\\n    console.warn(event)\\n  }\\n}\\n\\nexport default {\\n  title: \'NgmMemberTreeSelectComponent\',\\n  component: NgmMemberTreeSelectComponent,\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [TestMemberTreeSelectComponent],\\n      imports: [\\n        BrowserAnimationsModule,\\n        FormsModule,\\n        ControlsModule,\\n        OcapCoreModule,\\n        TranslateModule.forRoot({\\n          missingTranslationHandler: {\\n            provide: MissingTranslationHandler,\\n            useClass: NgmMissingTranslationHandler\\n          }\\n        })\\n      ],\\n      providers: [\\n        NgmDSCoreService,\\n        {\\n          provide: OCAP_AGENT_TOKEN,\\n          useClass: MockAgent,\\n          multi: true\\n        },\\n        {\\n          provide: OCAP_DATASOURCE_TOKEN,\\n          useValue: {\\n            type: \'SQL\',\\n            factory: async (): Promise<Type<DataSource>> => {\\n              const { SQLDataSource } = await import(\'@metad/ocap-sql\')\\n              return SQLDataSource\\n            }\\n          },\\n          multi: true\\n        },\\n        {\\n          provide: OCAP_MODEL_TOKEN,\\n          useValue: {\\n            name: \'Sales\',\\n            type: \'SQL\',\\n            agentType: AgentType.Browser,\\n            settings: {\\n              ignoreUnknownProperty: true\\n            },\\n            schema: {\\n              cubes: [\\n                CUBE_SALES_ORDER\\n              ]\\n            }\\n          },\\n          multi: true\\n        }\\n      ]\\n    })\\n  ]\\n} as Meta<NgmMemberTreeSelectComponent>\\n\\n\\nconst Template: Story<NgmMemberTreeSelectComponent> = (args: NgmMemberTreeSelectComponent) => ({\\n  props: args,\\n  template: `<test-member-tree-select [label]=\\"label\\"\\n    [dataSettings]=\\"dataSettings\\"  \\n    [dimension]=\\"dimension\\"\\n    [appearance]=\\"appearance\\"\\n    [data]=\\"data\\"\\n    [options]=\\"options\\"\\n  ></test-member-tree-select>`\\n})\\n\\nexport const Primary = Template.bind({})\\nPrimary.args = {\\n  dimension: {\\n    dimension: \'product\'\\n  },\\n  appearance: {\\n    displayDensity: DisplayDensity.compact\\n  },\\n  data: TREE_NODE_DATA\\n}\\n\\nexport const FromDataSource = Template.bind({})\\nFromDataSource.args = {\\n  dataSettings: {\\n    dataSource: \'Sales\',\\n    entitySet: \'SalesOrder\'\\n  },\\n  dimension: {\\n    dimension: \'[Product]\',\\n    displayBehaviour: DisplayBehaviour.auto\\n  },\\n  appearance: {\\n    displayDensity: DisplayDensity.compact,\\n  },\\n}\\n\\nexport const DefaultMembers = Template.bind({})\\nDefaultMembers.args = {\\n  dataSettings: {\\n    dataSource: \'Sales\',\\n    entitySet: \'SalesOrder\'\\n  },\\n  dimension: {\\n    dimension: \'[Product]\',\\n    displayBehaviour: DisplayBehaviour.auto\\n  },\\n  appearance: {\\n    displayDensity: DisplayDensity.compact,\\n  },\\n  options: {\\n    defaultMembers: [\\n      { value: \'[Fantastic]\' }\\n    ]\\n  }\\n}\\n\\nconst TemplateWidth: Story<NgmMemberTreeSelectComponent> = (args: NgmMemberTreeSelectComponent) => ({\\n  props: args,\\n  styles: [\\n    `.ngm-member-tree-select {\\n      width: 100px;\\n    }`\\n  ]\\n})\\n\\nexport const Width = TemplateWidth.bind({})\\nWidth.args = {\\n  dataSettings: {\\n    dataSource: \'Sales\',\\n    entitySet: \'SalesOrder3s\'\\n  },\\n  dimension: {\\n    dimension: \'product\'\\n  },\\n  appearance: {\\n    displayDensity: DisplayDensity.compact\\n  },\\n  options: {\\n    searchable: true,\\n    virtualScroll: true,\\n    multiple: true\\n  },\\n  data: [\\n    ...TREE_NODE_DATA,\\n    {\\n      key: \'FruitLong\',\\n      label: \'水果水果水果水果水果水果水果水果水果水果水果水果水果水果\',\\n    }\\n  ]\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[]},{"name":"TestSelectComponent","id":"component-TestSelectComponent-2bce3c8e986f5f044baceb923d049ebed7b93858f45b12b41105935a33bf8faf301bc41f86f4d1147dd3d2175c1f6fe081fd72319b6aee6d6264ba87460774ff","file":"packages/angular/common/select/mat/select.component.stories.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"test-select","styleUrls":[],"styles":[],"template":"<ngm-mat-select    [label]=\\"label\\"\\n    [placeholder]=\\"\'Please Select \' + label\\"\\n    [selectOptions]=\\"selectOptions\\"\\n    [multiple]=\\"multiple\\"\\n    [virtualScroll]=\\"virtualScroll\\"\\n    [displayBehaviour]=\\"displayBehaviour\\"\\n    [displayDensity]=\\"displayDensity\\"\\n    [validators]=\\"validators\\"\\n    [formControl]=\\"formControl\\"\\n    (ngModelChange)=\\"onModelChange($event)\\"\\n  >\\n  </ngm-mat-select>\\n","templateUrl":[],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"color","deprecated":false,"deprecationMessage":"","line":38,"type":"string","decorators":[]},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":35,"type":"boolean","decorators":[]},{"name":"displayBehaviour","deprecated":false,"deprecationMessage":"","line":39,"type":"DisplayBehaviour | string","decorators":[]},{"name":"displayDensity","deprecated":false,"deprecationMessage":"","line":40,"type":"DisplayDensity | string","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","line":31,"type":"string","decorators":[]},{"name":"model","defaultValue":"null","deprecated":false,"deprecationMessage":"","line":41,"type":"any","decorators":[]},{"name":"multiple","deprecated":false,"deprecationMessage":"","line":34,"type":"boolean","decorators":[]},{"name":"placeholder","deprecated":false,"deprecationMessage":"","line":32,"type":"string","decorators":[]},{"name":"selectOptions","deprecated":false,"deprecationMessage":"","line":33,"type":"TreeNodeInterface<T>","decorators":[]},{"name":"treeViewer","deprecated":false,"deprecationMessage":"","line":37,"type":"boolean","decorators":[]},{"name":"validators","deprecated":false,"deprecationMessage":"","line":42,"type":"ValidatorFn | ValidatorFn[] | null","decorators":[]},{"name":"virtualScroll","deprecated":false,"deprecationMessage":"","line":36,"type":"boolean","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"formControl","defaultValue":"new FormControl()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":44}],"methodsClass":[{"name":"ngOnChanges","args":[{"type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":53,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":46,"deprecated":false,"deprecationMessage":""},{"name":"onModelChange","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":57,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \'@angular/common\'\\nimport { Component, Input, OnChanges, SimpleChanges } from \'@angular/core\'\\nimport { AbstractControl, FormControl, FormsModule, ReactiveFormsModule, ValidationErrors, ValidatorFn } from \'@angular/forms\'\\nimport { MatFormFieldModule } from \'@angular/material/form-field\'\\nimport { MatInputModule } from \'@angular/material/input\'\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\'\\nimport { DisplayDensity, OcapCoreModule } from \'@metad/ocap-angular/core\'\\nimport { DisplayBehaviour, TreeNodeInterface } from \'@metad/ocap-core\'\\nimport { Meta, moduleMetadata, Story } from \'@storybook/angular\'\\nimport { NgmMatSelectComponent } from \'./select.component\'\\n\\n@Component({\\n  selector: \'test-select\',\\n  template: `<ngm-mat-select\\n    [label]=\\"label\\"\\n    [placeholder]=\\"\'Please Select \' + label\\"\\n    [selectOptions]=\\"selectOptions\\"\\n    [multiple]=\\"multiple\\"\\n    [virtualScroll]=\\"virtualScroll\\"\\n    [displayBehaviour]=\\"displayBehaviour\\"\\n    [displayDensity]=\\"displayDensity\\"\\n    [validators]=\\"validators\\"\\n    [formControl]=\\"formControl\\"\\n    (ngModelChange)=\\"onModelChange($event)\\"\\n  >\\n  </ngm-mat-select>\\n`\\n})\\nclass TestSelectComponent<T> implements OnChanges {\\n\\n  @Input() label: string\\n  @Input() placeholder: string\\n  @Input() selectOptions: TreeNodeInterface<T>\\n  @Input() multiple: boolean\\n  @Input() disabled: boolean\\n  @Input() virtualScroll: boolean\\n  @Input() treeViewer: boolean\\n  @Input() color: string\\n  @Input() displayBehaviour: DisplayBehaviour | string\\n  @Input() displayDensity: DisplayDensity | string\\n  @Input() model = null\\n  @Input() validators: ValidatorFn | ValidatorFn[] | null\\n\\n  formControl = new FormControl()\\n\\n  ngOnInit() {\\n    if (this.disabled) {\\n      this.formControl.disable()\\n    }\\n    this.formControl.setValue(this.model)\\n  }\\n\\n  ngOnChanges({validators}: SimpleChanges): void {\\n    //\\n  }\\n\\n  onModelChange(event) {\\n    console.warn(event)\\n  }\\n}\\n\\nexport default {\\n  title: \'NgmMatSelectComponent\',\\n  component: NgmMatSelectComponent,\\n  decorators: [\\n    moduleMetadata({\\n      imports: [CommonModule, BrowserAnimationsModule, FormsModule, ReactiveFormsModule, OcapCoreModule,\\n        MatFormFieldModule,\\n        MatInputModule\\n      ],\\n      declarations: [TestSelectComponent]\\n    })\\n  ]\\n} as Meta<NgmMatSelectComponent>\\n\\nconst TREE_NODE_DATA = [\\n  {\\n    value: \'Fruit\',\\n    label: \'水果\'\\n  },\\n  { value: \'Apple\', label: \'苹果\', raw: { type: \'Hive\' } },\\n  { value: \'Banana\', label: \'香蕉\' },\\n  { value: \'Fruit loops\', label: \'果循环\' },\\n  {\\n    value: \'Vegetables\',\\n    label: \'蔬菜\'\\n  },\\n  {\\n    value: \'Green\',\\n    label: \'绿色\'\\n  },\\n  { value: \'Broccoli\', label: \'西兰花\' },\\n  { value: \'Brussel sprouts\', label: \'豆芽\' },\\n  {\\n    value: \'Orange\',\\n    label: \'橙\'\\n  },\\n  { value: \'Pumpkins\', label: \'南瓜\', raw: { type: \'PG\' } },\\n  { value: \'Carrots\', label: \'胡萝卜\' }\\n] as any\\n\\nconst Template: Story<any> = (args: any) => ({\\n  props: args,\\n  template: `<test-select [label]=\\"label\\" [selectOptions]=\\"selectOptions\\" [model]=\\"model\\" [multiple]=\\"multiple\\" [virtualScroll]=\\"virtualScroll\\"\\n  [displayBehaviour]=\\"displayBehaviour\\" [displayDensity]=\\"displayDensity\\"\\n  [disabled]=\\"disabled\\"\\n  ></test-select>`,\\n  styles: [``]\\n})\\n\\nexport const Select = Template.bind({})\\nSelect.args = {\\n  label: \'水果\',\\n  selectOptions: TREE_NODE_DATA,\\n  model: \'Apple\'\\n}\\n\\nexport const SelectMultiple = Template.bind({})\\nSelectMultiple.args = {\\n  label: \'水果\',\\n  selectOptions: TREE_NODE_DATA,\\n  multiple: true,\\n  model: [\'Apple\', \'Pumpkins\']\\n}\\n\\nexport const SelectVirtualScroll = Template.bind({})\\nSelectVirtualScroll.args = {\\n  label: \'水果\',\\n  selectOptions: TREE_NODE_DATA,\\n  multiple: true,\\n  virtualScroll: true,\\n  model: [\'Apple\', \'Pumpkins\']\\n}\\n\\nexport const SelectDisplayBehaviour = Template.bind({})\\nSelectDisplayBehaviour.args = {\\n  label: \'水果\',\\n  selectOptions: TREE_NODE_DATA,\\n  model: \'Apple\',\\n  displayBehaviour: DisplayBehaviour.descriptionAndId\\n}\\n\\nexport const SelectCosy = Template.bind({})\\nSelectCosy.args = {\\n  label: \'水果\',\\n  selectOptions: TREE_NODE_DATA,\\n  model: \'Apple\',\\n  displayDensity: DisplayDensity.cosy\\n}\\n\\nexport const SelectCompact = Template.bind({})\\nSelectCompact.args = {\\n  label: \'水果\',\\n  selectOptions: TREE_NODE_DATA,\\n  model: \'Apple\',\\n  displayDensity: DisplayDensity.compact\\n}\\n\\nexport const SelectNoSelectOptions = Template.bind({})\\nSelectNoSelectOptions.args = {\\n  label: \'水果\',\\n  model: \'Apple\'\\n}\\n\\nexport const SelectDisabled = Template.bind({})\\nSelectDisabled.args = {\\n  label: \'水果\',\\n  model: \'Apple\',\\n  selectOptions: TREE_NODE_DATA,\\n  disabled: true\\n}\\n\\nconst TemplateError: Story<any> = (args: any) => ({\\n  props: args,\\n  template: `<test-select [label]=\\"label\\"\\n    [selectOptions]=\\"selectOptions\\"\\n    [model]=\\"model\\"\\n    [multiple]=\\"multiple\\"\\n    [virtualScroll]=\\"virtualScroll\\"\\n    [displayBehaviour]=\\"displayBehaviour\\"\\n    [displayDensity]=\\"displayDensity\\"\\n    [disabled]=\\"disabled\\"\\n    [validators]=\\"validators\\"\\n  ></test-select>`,\\n  styles: [``]\\n})\\n\\nexport const SelectValidators = TemplateError.bind({})\\nSelectValidators.args = {\\n  label: \'水果\',\\n  model: \'Apple\',\\n  selectOptions: TREE_NODE_DATA,\\n  validators:  [(control: AbstractControl): ValidationErrors | null => {\\n    return control.value.value === \\"Apple\\" ? {forbiddenName: \'不喜欢这个水果\'} : null\\n  }]\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"implements":["OnChanges"]},{"name":"TestTreeSelectComponent","id":"component-TestTreeSelectComponent-7b0f6bae25b4ce6d24ff58cac1dc3b3ee2228ac7dabfc12481183598dde5548326cf676f5b3b41546140fa64f7e11f395d172bfcc6f0f60c071c4d129cdc5001","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"test-tree-select","styleUrls":[],"styles":[],"template":"<ngm-tree-select    [label]=\\"label\\"\\n    [initialLevel]=\\"initialLevel\\"\\n    [treeNodes]=\\"treeNodes\\"\\n    [placeholder]=\\"\'Please Select \' + label\\"\\n    [multiple]=\\"multiple\\"\\n    [disabled]=\\"disabled\\"\\n    [autocomplete]=\\"autocomplete\\"\\n    [maxTagCount]=\\"maxTagCount\\"\\n    [virtualScroll]=\\"virtualScroll\\"\\n    [panelWidth]=\\"panelWidth\\"\\n    [displayBehaviour]=\\"displayBehaviour\\"\\n    [displayDensity]=\\"displayDensity\\"\\n    [treeViewer]=\\"treeViewer\\"\\n    [searchable]=\\"searchable\\"\\n    [color]=\\"color\\"\\n    [validators]=\\"validators\\"\\n    [ngModel]=\\"model\\"\\n    (ngModelChange)=\\"onModelChange($event)\\">\\n  </ngm-tree-select>","templateUrl":[],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"autocomplete","deprecated":false,"deprecationMessage":"","line":43,"type":"boolean","decorators":[]},{"name":"color","deprecated":false,"deprecationMessage":"","line":48,"type":"string","decorators":[]},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":40,"type":"boolean","decorators":[]},{"name":"displayBehaviour","deprecated":false,"deprecationMessage":"","line":49,"type":"DisplayBehaviour | string","decorators":[]},{"name":"displayDensity","deprecated":false,"deprecationMessage":"","line":50,"type":"DisplayDensity | string","decorators":[]},{"name":"initialLevel","deprecated":false,"deprecationMessage":"","line":41,"type":"number","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","line":36,"type":"string","decorators":[]},{"name":"maxTagCount","deprecated":false,"deprecationMessage":"","line":42,"type":"number","decorators":[]},{"name":"model","defaultValue":"null","deprecated":false,"deprecationMessage":"","line":51,"type":"any","decorators":[]},{"name":"multiple","deprecated":false,"deprecationMessage":"","line":39,"type":"boolean","decorators":[]},{"name":"panelWidth","deprecated":false,"deprecationMessage":"","line":45,"type":"string | number","decorators":[]},{"name":"placeholder","deprecated":false,"deprecationMessage":"","line":37,"type":"string","decorators":[]},{"name":"searchable","deprecated":false,"deprecationMessage":"","line":47,"type":"boolean","decorators":[]},{"name":"treeNodes","deprecated":false,"deprecationMessage":"","line":38,"type":"TreeNodeInterface<T>","decorators":[]},{"name":"treeViewer","deprecated":false,"deprecationMessage":"","line":46,"type":"boolean","decorators":[]},{"name":"validators","deprecated":false,"deprecationMessage":"","line":52,"type":"ValidatorFn | ValidatorFn[] | null","decorators":[]},{"name":"virtualScroll","deprecated":false,"deprecationMessage":"","line":44,"type":"boolean","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"onModelChange","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \'@angular/common\'\\nimport { Component, Input } from \'@angular/core\'\\nimport { AbstractControl, FormsModule, ReactiveFormsModule, ValidationErrors, ValidatorFn } from \'@angular/forms\'\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\'\\nimport { DisplayDensity, NgmMissingTranslationHandler, OcapCoreModule } from \'@metad/ocap-angular/core\'\\nimport { DisplayBehaviour, TreeNodeInterface } from \'@metad/ocap-core\'\\nimport { MissingTranslationHandler, TranslateModule } from \'@ngx-translate/core\'\\nimport { Meta, moduleMetadata, Story } from \'@storybook/angular\'\\nimport { NgmTreeSelectComponent } from \'./tree-select.component\'\\n\\n@Component({\\n  selector: \'test-tree-select\',\\n  template: `<ngm-tree-select\\n    [label]=\\"label\\"\\n    [initialLevel]=\\"initialLevel\\"\\n    [treeNodes]=\\"treeNodes\\"\\n    [placeholder]=\\"\'Please Select \' + label\\"\\n    [multiple]=\\"multiple\\"\\n    [disabled]=\\"disabled\\"\\n    [autocomplete]=\\"autocomplete\\"\\n    [maxTagCount]=\\"maxTagCount\\"\\n    [virtualScroll]=\\"virtualScroll\\"\\n    [panelWidth]=\\"panelWidth\\"\\n    [displayBehaviour]=\\"displayBehaviour\\"\\n    [displayDensity]=\\"displayDensity\\"\\n    [treeViewer]=\\"treeViewer\\"\\n    [searchable]=\\"searchable\\"\\n    [color]=\\"color\\"\\n    [validators]=\\"validators\\"\\n    [ngModel]=\\"model\\"\\n    (ngModelChange)=\\"onModelChange($event)\\">\\n  </ngm-tree-select>`\\n})\\nclass TestTreeSelectComponent<T> {\\n  \\n  @Input() label: string\\n  @Input() placeholder: string\\n  @Input() treeNodes: TreeNodeInterface<T>\\n  @Input() multiple: boolean\\n  @Input() disabled: boolean\\n  @Input() initialLevel: number\\n  @Input() maxTagCount: number\\n  @Input() autocomplete: boolean\\n  @Input() virtualScroll: boolean\\n  @Input() panelWidth: string | number\\n  @Input() treeViewer: boolean\\n  @Input() searchable: boolean\\n  @Input() color: string\\n  @Input() displayBehaviour: DisplayBehaviour | string\\n  @Input() displayDensity: DisplayDensity | string\\n  @Input() model = null\\n  @Input() validators: ValidatorFn | ValidatorFn[] | null\\n\\n  onModelChange(event) {\\n    console.warn(event)\\n  }\\n}\\n\\nexport default {\\n  title: \'NgmTreeSelectComponent\',\\n  decorators: [\\n    moduleMetadata({\\n      imports: [\\n        CommonModule,\\n        BrowserAnimationsModule,\\n        FormsModule,\\n        ReactiveFormsModule,\\n        TranslateModule.forRoot({\\n          missingTranslationHandler: {\\n            provide: MissingTranslationHandler,\\n            useClass: NgmMissingTranslationHandler\\n          }\\n        }),\\n        NgmTreeSelectComponent,\\n        OcapCoreModule\\n      ],\\n      declarations: [TestTreeSelectComponent]\\n    })\\n  ]\\n} as Meta<NgmTreeSelectComponent<unknown>>\\n\\nexport const TREE_NODE_DATA = [\\n  {\\n    key: \'Fruit\',\\n    label: \'水果\',\\n    children: [\\n      { key: \'Apple\', label: \'苹果\', value: 10, raw: { type: \'Hive\' } },\\n      { key: \'Banana\', label: \'香蕉\', value: 20 },\\n      { key: \'Fruit loops\', label: \'果循环\', value: 30 },\\n      {\\n        key: \'Fruit2\',\\n        label: \'水果\'\\n      }\\n    ]\\n  },\\n  {\\n    key: \'Vegetables\',\\n    label: \'蔬菜\',\\n    children: [\\n      {\\n        key: \'Green\',\\n        label: \'绿色\',\\n        children: [\\n          { key: \'Broccoli\', label: \'西兰花\', value: 10 },\\n          { key: \'Brussel sprouts\', label: \'豆芽\', value: 20 }\\n        ]\\n      },\\n      {\\n        key: \'Orange\',\\n        label: \'橙\',\\n        children: [\\n          { key: \'Pumpkins\', label: \'南瓜\', value: 30, raw: { type: \'PG\' } },\\n          { key: \'Carrots\', label: \'胡萝卜\', value: 40 }\\n        ]\\n      }\\n    ]\\n  }\\n] as any\\n\\nconst Template: Story<any> = (args: any) => ({\\n  props: args,\\n  template: `<test-tree-select [label]=\\"label\\" [treeNodes]=\\"treeNodes\\" [model]=\\"model\\" [multiple]=\\"multiple\\"\\n    [maxTagCount]=\\"maxTagCount\\"\\n    [autocomplete]=\\"autocomplete\\" [virtualScroll]=\\"virtualScroll\\" [panelWidth]=\\"panelWidth\\"\\n    [displayBehaviour]=\\"displayBehaviour\\" [displayDensity]=\\"displayDensity\\" [treeViewer]=\\"treeViewer\\"\\n    [searchable]=\\"searchable\\"\\n    [color]=\\"color\\"\\n    [initialLevel]=\\"initialLevel\\"\\n    [validators]=\\"validators\\"\\n    [disabled]=\\"disabled\\"\\n    >\\n  </test-tree-select>`,\\n  styles: [``]\\n})\\n\\nexport const ATreeSelectVirtualScroll = Template.bind({})\\nATreeSelectVirtualScroll.args = {\\n  placeholder: \'水果选择器\',\\n  treeNodes: TREE_NODE_DATA,\\n  model: \'Apple\',\\n  searchable: true,\\n  virtualScroll: true\\n}\\n\\nexport const ATreeSelect = Template.bind({})\\nATreeSelect.args = {\\n  treeNodes: TREE_NODE_DATA,\\n  model: \'Apple\',\\n  searchable: true,\\n  label: \'水果选择器\',\\n  initialLevel: 3\\n}\\n\\nexport const TreeSelectWithNoSelectOptions = Template.bind({})\\nTreeSelectWithNoSelectOptions.args = {\\n  model: \'Apple\',\\n  searchable: true,\\n  label: \'水果选择器\',\\n  initialLevel: 2\\n}\\n\\nexport const ATreeSelectMultipleSearchable = Template.bind({})\\nATreeSelectMultipleSearchable.args = {\\n  label: \'水果选择器\',\\n  treeNodes: TREE_NODE_DATA,\\n  model: [\'Apple\'],\\n  searchable: true,\\n  multiple: true,\\n}\\n\\nexport const ATreeSelectMultiple = Template.bind({})\\nATreeSelectMultiple.args = {\\n  label: \'水果选择器\',\\n  treeNodes: TREE_NODE_DATA,\\n  multiple: true,\\n  model: [\'Fruit\', \'Apple\']\\n}\\n\\nexport const CAutocomplete = Template.bind({})\\nCAutocomplete.args = {\\n  label: \'AutoComplete\',\\n  treeNodes: TREE_NODE_DATA,\\n  autocomplete: true,\\n  model: \'Apple\'\\n}\\n\\nexport const DAutocompleteMultiple = Template.bind({})\\nDAutocompleteMultiple.args = {\\n  label: \'水果选择器\',\\n  treeNodes: TREE_NODE_DATA,\\n  multiple: true,\\n  autocomplete: true,\\n  model: [\'Fruit\', \'Apple\']\\n}\\n\\nexport const DAutocompleteMaxTag = Template.bind({})\\nDAutocompleteMaxTag.args = {\\n  label: \'水果选择器\',\\n  treeNodes: TREE_NODE_DATA,\\n  multiple: true,\\n  autocomplete: true,\\n  maxTagCount: 2,\\n  model: [\'Fruit\', \'Apple\']\\n}\\n\\nexport const EAutocompleteVirtualScroll = Template.bind({})\\nEAutocompleteVirtualScroll.args = {\\n  label: \'AutoComplete\',\\n  treeNodes: TREE_NODE_DATA,\\n  autocomplete: true,\\n  virtualScroll: true,\\n  model: \'Apple\'\\n}\\n\\nexport const EAutocompleteVirtualScrollWidth = Template.bind({})\\nEAutocompleteVirtualScrollWidth.args = {\\n  label: \'AutoComplete\',\\n  treeNodes: TREE_NODE_DATA,\\n  autocomplete: true,\\n  virtualScroll: true,\\n  panelWidth: \'500px\',\\n  model: \'Apple\'\\n}\\n\\nexport const FAutocompleteMultipleVirtualScroll = Template.bind({})\\nFAutocompleteMultipleVirtualScroll.args = {\\n  treeNodes: TREE_NODE_DATA,\\n  multiple: true,\\n  autocomplete: true,\\n  virtualScroll: true,\\n  model: [\'Fruit\', \'Apple\']\\n}\\n\\nexport const GTreeSelectDisplayBehaviour = Template.bind({})\\nGTreeSelectDisplayBehaviour.args = {\\n  treeNodes: TREE_NODE_DATA,\\n  displayBehaviour: DisplayBehaviour.descriptionAndId,\\n  model: \'Apple\'\\n}\\n\\nexport const HTreeSelectMultipleBehaviour = Template.bind({})\\nHTreeSelectMultipleBehaviour.args = {\\n  treeNodes: TREE_NODE_DATA,\\n  multiple: true,\\n  displayBehaviour: DisplayBehaviour.descriptionAndId,\\n  model: [\'Fruit\', \'Apple\']\\n}\\n\\nexport const IAutocompleteDisplayBehaviour = Template.bind({})\\nIAutocompleteDisplayBehaviour.args = {\\n  label: \'Autocomplete & DisplayBehaviour\',\\n  treeNodes: TREE_NODE_DATA,\\n  autocomplete: true,\\n  displayBehaviour: DisplayBehaviour.descriptionAndId,\\n  model: \'Apple\'\\n}\\n\\nexport const JAutocompleteMultipleBehaviour = Template.bind({})\\nJAutocompleteMultipleBehaviour.args = {\\n  treeNodes: TREE_NODE_DATA,\\n  autocomplete: true,\\n  multiple: true,\\n  displayBehaviour: DisplayBehaviour.descriptionAndId,\\n  model: [\'Fruit\', \'Apple\']\\n}\\n\\nexport const ATreeSelectDensityCosy = Template.bind({})\\nATreeSelectDensityCosy.args = {\\n  label: \'TreeSelect Density\',\\n  treeNodes: TREE_NODE_DATA,\\n  displayDensity: DisplayDensity.cosy,\\n  model: \'Apple\'\\n}\\n\\nexport const CAutocompleteDensityCosy = Template.bind({})\\nCAutocompleteDensityCosy.args = {\\n  label: \'AutoComplete Density\',\\n  treeNodes: TREE_NODE_DATA,\\n  autocomplete: true,\\n  displayDensity: DisplayDensity.cosy,\\n  model: \'Apple\'\\n}\\n\\nexport const ATreeSelectDensityCompact = Template.bind({})\\nATreeSelectDensityCompact.args = {\\n  label: \'TreeSelect Density\',\\n  treeNodes: TREE_NODE_DATA,\\n  searchable: true,\\n  displayDensity: DisplayDensity.compact,\\n  model: \'Apple\'\\n}\\n\\nexport const CAutocompleteDensityCompact = Template.bind({})\\nCAutocompleteDensityCompact.args = {\\n  label: \'AutoComplete Density\',\\n  treeNodes: TREE_NODE_DATA,\\n  autocomplete: true,\\n  displayDensity: DisplayDensity.compact,\\n  model: \'Apple\'\\n}\\n\\nexport const BTreeSelectMultipleDensityCompact = Template.bind({})\\nBTreeSelectMultipleDensityCompact.args = {\\n  treeNodes: TREE_NODE_DATA,\\n  multiple: true,\\n  displayDensity: DisplayDensity.compact,\\n  model: [\'Fruit\', \'Apple\']\\n}\\n\\nexport const KTreeViewer = Template.bind({})\\nKTreeViewer.args = {\\n  treeNodes: TREE_NODE_DATA,\\n  treeViewer: true,\\n  model: \'Fruit\'\\n}\\n\\nexport const KTreeViewerCompact = Template.bind({})\\nKTreeViewerCompact.args = {\\n  treeNodes: TREE_NODE_DATA,\\n  multiple: true,\\n  displayDensity: DisplayDensity.compact,\\n  treeViewer: true,\\n  model: [\'Fruit\', \'Apple\']\\n}\\n\\nexport const KTreeViewerColorAccent = Template.bind({})\\nKTreeViewerColorAccent.args = {\\n  treeNodes: TREE_NODE_DATA,\\n  multiple: true,\\n  treeViewer: true,\\n  color: \'accent\',\\n  model: [\'Fruit\', \'Apple\']\\n}\\n\\nexport const KTreeViewerColorPrimary = Template.bind({})\\nKTreeViewerColorPrimary.args = {\\n  treeNodes: TREE_NODE_DATA,\\n  multiple: true,\\n  treeViewer: true,\\n  color: \'primary\',\\n  model: [\'Fruit\', \'Apple\']\\n}\\n\\nexport const KTreeViewerSearchable = Template.bind({})\\nKTreeViewerSearchable.args = {\\n  treeNodes: TREE_NODE_DATA,\\n  multiple: true,\\n  treeViewer: true,\\n  searchable: true,\\n  model: [\'Fruit\', \'Apple\']\\n}\\n\\nconst TemplateWidth: Story<any> = (args: any) => ({\\n  props: args,\\n  styles: [`.ngm-tree-select {width: 100px;}`]\\n})\\n\\nexport const LWidth = TemplateWidth.bind({})\\nLWidth.args = {\\n  treeNodes: [\\n    ...TREE_NODE_DATA,\\n    {\\n      key: \'Fruit GT\',\\n      label: \'水果水果水果水果水果水果水果水果水果水果水果水果水果水果水果水果水果水果水果水果\',\\n    }\\n  ],\\n  multiple: true,\\n  searchable: true,\\n  model: [\'Fruit\', \'Apple\']\\n}\\n\\nexport const LWidthNGT = TemplateWidth.bind({})\\nLWidthNGT.args = {\\n  treeNodes: TREE_NODE_DATA,\\n  multiple: true,\\n  searchable: true,\\n  model: [\'Fruit\', \'Apple\']\\n}\\n\\nexport const LAutocompleteWidth = TemplateWidth.bind({})\\nLAutocompleteWidth.args = {\\n  treeNodes: [\\n    ...TREE_NODE_DATA,\\n    {\\n      key: \'Fruit GT\',\\n      label: \'水果水果水果水果水果水果水果水果水果水果水果水果水果水果水果水果水果水果水果水果\',\\n    }\\n  ],\\n  autocomplete: true,\\n  searchable: true,\\n  multiple: true,\\n  panelWidth: \'auto\',\\n  model: [\'Fruit\', \'Apple\']\\n}\\n\\nexport const Disabled = Template.bind({})\\nDisabled.args = {\\n  treeNodes: TREE_NODE_DATA,\\n  model: \'Apple\',\\n  searchable: true,\\n  label: \'水果选择器\',\\n  initialLevel: 3,\\n  disabled: true\\n}\\n\\nexport const DisabledTreeView = Template.bind({})\\nDisabledTreeView.args = {\\n  treeNodes: TREE_NODE_DATA,\\n  multiple: true,\\n  treeViewer: true,\\n  searchable: true,\\n  model: [\'Fruit\', \'Apple\'],\\n  disabled: true\\n}\\n\\nexport const TreeSelectInitialLevel = Template.bind({})\\nTreeSelectInitialLevel.args = {\\n  treeNodes: TREE_NODE_DATA,\\n  model: \'Apple\',\\n  searchable: true,\\n  label: \'水果选择器\',\\n  initialLevel: 3\\n}\\n\\nexport const TreeSelectValidators = Template.bind({})\\nTreeSelectValidators.args = {\\n  label: \'水果选择器\',\\n  treeNodes: TREE_NODE_DATA,\\n  searchable: true,\\n  model: [\'Fruit\', \'Apple\'],\\n  validators:  [(control: AbstractControl): ValidationErrors | null => {\\n    console.log(control.value)\\n    return Array.isArray(control.value) ? control.value.find((item) => item.key === \'Apple\')\\n      ? {forbiddenName: \'不喜欢这个水果\'} : null : \\n      control.value?.key === \'Apple\' ? {forbiddenName: \'不喜欢这个水果\'} : null\\n  }]\\n}\\n\\nexport const TreeSelectMultipleValidators = Template.bind({})\\nTreeSelectMultipleValidators.args = {\\n  label: \'水果选择器\',\\n  treeNodes: TREE_NODE_DATA,\\n  multiple: true,\\n  searchable: true,\\n  model: [\'Fruit\', \'Apple\'],\\n  validators:  [(control: AbstractControl): ValidationErrors | null => {\\n    console.log(control.value)\\n    return Array.isArray(control.value) ? control.value.find((item) => item.key === \'Apple\')\\n      ? {forbiddenName: \'不喜欢这个水果\'} : null : \\n      control.value?.key === \'Apple\' ? {forbiddenName: \'不喜欢这个水果\'} : null\\n\\n  }]\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[]}],"modules":[],"miscellaneous":{"variables":[{"name":"A1Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"A2Sticky","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      sticky: true\\n    }\\n  }\\n}"},{"name":"A3StickyGrid","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      sticky: true,\\n      grid: true\\n    }\\n  }\\n}"},{"name":"Appearance","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Display Density Compact\',\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Appearance","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-list/member-list.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Appearance","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-tree/member-tree.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"AppearanceOutline","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {\\n      selectionType: FilterSelectionType.Multiple\\n    },\\n    appearance: {\\n      appearance: \'outline\'\\n    }\\n  }\\n}"},{"name":"ATreeSelect","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"ATreeSelectDensityCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"ATreeSelectDensityCosy","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"ATreeSelectMultiple","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"ATreeSelectMultipleSearchable","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"ATreeSelectVirtualScroll","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"AutoActiveFirst","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-select/smart-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"AVAILABLE_MEMBERS","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    value: 1,\\n    label: \'Department A\'\\n  },\\n  {\\n    value: 2,\\n    label: \'Department B\'\\n  },\\n  {\\n    value: 3,\\n    label: \'Department C\'\\n  }\\n]"},{"name":"Bottom","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/resizer/resizer.directive.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"CardTemplate.bind({})"},{"name":"BTreeSelectMultipleDensityCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"CardTemplate","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/resizer/resizer.directive.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<any>","defaultValue":"(args: any) => ({\\n  props: args,\\n  template: `\\n<mat-card ngmResizer [resizerHeight]=\\"200\\">\\nSimple card\\n  <div ngmResizerBar [resizerBarPosition]=\\"barPosition\\" cdkDrag></div>\\n</mat-card>\\n  `,\\n  styles: [`.mat-card {margin: 5rem;}`]\\n})"},{"name":"CAutocomplete","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"CAutocompleteDensityCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"CAutocompleteDensityCosy","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"CellTemplate","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"TemplateTemplate.bind({})"},{"name":"ChartTypes","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Chart Types\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      },\\n      presentationVariant: {\\n        groupBy: [\\n          {\\n            dimension: \'[Department]\',\\n            level: \'[Department].[Department]\'\\n          }\\n        ]\\n      }\\n    },\\n    chartSettings: {\\n      chartTypes: [\\n        {\\n          type: \'Line\'\\n        }\\n      ]\\n    },\\n    options: {}\\n  }\\n}"},{"name":"CloseButton","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tabs/tabs.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"((args: any) => ({\\n  props: args,\\n  template: `\\n<mat-tab-group class=\\"ngm-appearance-desktop\\" disableRipple>\\n  <mat-tab label=\\"First\\">\\n    <ng-template matTabLabel>First\\n      <button mat-icon-button disableRipple displayDensity=\\"cosy\\" class=\\"ngm-appearance-desktop ngm-tab-button-right\\"\\n          [matMenuTriggerFor]=\\"pointMenu\\"\\n          [matMenuTriggerData]=\\"{point: point}\\"\\n      >\\n          <mat-icon>more_vert</mat-icon>\\n      </button>\\n    </ng-template>\\n   Content 1 </mat-tab>\\n  <mat-tab label=\\"Second\\"> Content 2 </mat-tab>\\n  <mat-tab label=\\"Third\\"> Content 3 </mat-tab>\\n</mat-tab-group>\\n<mat-menu #pointMenu=\\"matMenu\\" xPosition=\\"before\\">\\n  <button mat-menu-item>Item 1</button>\\n  <button mat-menu-item>Item 2</button>\\n</mat-menu>\\n  `,\\n  styles: [``]\\n})).bind({})"},{"name":"config","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/.storybook/main.ts","deprecated":false,"deprecationMessage":"","type":"StorybookConfig","defaultValue":"{\\n  stories: [\'../**/*.mdx\', \'../**/*.stories.@(js|jsx|ts|tsx|mdx)\'],\\n  addons: [\\n    //👇 Your documentation written in MDX along with your stories goes here\\n    \'@storybook/addon-docs\',\\n    \'@storybook/addon-essentials\',\\n    \'@storybook/addon-storysource\',\\n  ],\\n  framework: {\\n    name: \'@storybook/angular\',\\n    options: {}\\n  },\\n  docs: {\\n    autodocs: true\\n  }\\n}"},{"name":"CustomEngine","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/copilot/stories/chat.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    copilotEngine: new StorybookCopilotEngine()\\n  }\\n}"},{"name":"DAutocompleteMaxTag","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"DAutocompleteMultiple","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    selectOptions: TREE_NODE_DATA\\n  }\\n}"},{"name":"DefaultMembers","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Density","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n<div class=\\"flex items-center gap-4 p-4\\">\\n  <ngm-select label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n  </ngm-select>\\n\\n  <ngm-select searchable label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n  </ngm-select>\\n\\n\\n  <ngm-select label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n    <button ngmSuffix mat-icon-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </ngm-select>\\n  <ngm-select searchable label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n    <button ngmSuffix mat-icon-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </ngm-select>\\n  </div>\\n<div displayDensity=\\"cosy\\" class=\\"flex items-center gap-4 p-4\\">\\n  <ngm-select label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n  </ngm-select>\\n\\n  <ngm-select searchable label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n  </ngm-select>\\n\\n\\n  <ngm-select label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n    <button ngmSuffix mat-icon-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </ngm-select>\\n  <ngm-select searchable label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n    <button ngmSuffix mat-icon-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </ngm-select>\\n</div>\\n\\n<div displayDensity=\\"compact\\" class=\\"flex items-center gap-4 p-4\\">\\n  <ngm-select label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n  </ngm-select>\\n\\n  <ngm-select searchable label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n  </ngm-select>\\n\\n  <ngm-select label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\" displayDensity=\\"compact\\">\\n    <button ngmSuffix mat-icon-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </ngm-select>\\n  <ngm-select searchable label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n    <button ngmSuffix mat-icon-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </ngm-select>\\n</div>\\n    `\\n  }),\\n  args: {\\n    selectOptions: TREE_NODE_DATA\\n  }\\n}"},{"name":"DensityCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Analytical Grid compact\',\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"DensityCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/breadcrumb/breadcrumb.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `<ngm-breadcrumb-bar [steps]=\\"steps\\" displayDensity=\\"compact\\"></ngm-breadcrumb-bar>`,\\n  }),\\n  args: {\\n    steps: [\\n      {\\n        value: \'A\',\\n        label: \'Step A\',\\n        active: true\\n      },\\n      {\\n        value: \'B\',\\n        label: \'Step B\',\\n        active: false\\n      }\\n    ]\\n  }\\n}"},{"name":"DensityCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"DensityCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {},\\n    displayDensity: DisplayDensity.compact\\n  }\\n}"},{"name":"DensityCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-select/smart-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"DensityCosy","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/breadcrumb/breadcrumb.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `<ngm-breadcrumb-bar [steps]=\\"steps\\" displayDensity=\\"cosy\\"></ngm-breadcrumb-bar>`,\\n  }),\\n  args: {\\n    steps: [\\n      {\\n        value: \'A\',\\n        label: \'Step A\',\\n        active: true\\n      },\\n      {\\n        value: \'B\',\\n        label: \'Step B\',\\n        active: false\\n      }\\n    ]\\n  }\\n}"},{"name":"DensityCosy","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `<div displayDensity=\\"cosy\\">\\n        <ngm-input [label]=\\"label\\"></ngm-input>\\n</div>\\n`\\n  }),\\n  args: {}\\n}"},{"name":"DensityCosy","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-select/smart-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"DescriptionAndId","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/display-behaviour/display-behaviour.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: { \\n    option: {\\n      value: 1,\\n      label: \'A\'\\n    },\\n    displayBehaviour: DisplayBehaviour.descriptionAndId\\n  }\\n}"},{"name":"Disabled","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Disabled","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {},\\n    disabled: true\\n  }\\n}"},{"name":"DisabledTreeView","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"DisplayHierarchy","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Analytical Grid Hierarchy\',\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\',\\n            displayHierarchy: true\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"DrillDimensions","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Drill Dimensions\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      },\\n      presentationVariant: {\\n        groupBy: [\\n          {\\n            dimension: \'[Department]\',\\n            level: \'[Department].[Department]\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"EAutocompleteVirtualScroll","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"EAutocompleteVirtualScrollWidth","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Empty","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Empty Data\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'Empty\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Error","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Error\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales1\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Error","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Analytical Grid Error\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales1\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      showToolbar: true\\n    }\\n  }\\n}"},{"name":"FAutocompleteMultipleVirtualScroll","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"FromDataSource","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Grid","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"GTreeSelectDisplayBehaviour","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"HideButtons","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Hide Buttons\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Horizontal","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/splitter/splitter.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"HTreeSelectMultipleBehaviour","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"IAutocompleteDisplayBehaviour","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"InitialLevel","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"JAutocompleteMultipleBehaviour","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"KTreeViewer","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"KTreeViewerColorAccent","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"KTreeViewerColorPrimary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"KTreeViewerCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"KTreeViewerSearchable","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"LAutocompleteWidth","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"TemplateWidth.bind({})"},{"name":"Left","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/resizer/resizer.directive.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Loading","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Loading\',\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder10s\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Loading","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Loading Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder10s\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"LWidth","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"TemplateWidth.bind({})"},{"name":"LWidthNGT","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"TemplateWidth.bind({})"},{"name":"MemberSourceFromDimension","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/value-help/value-help.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmInputComponent>","defaultValue":"{\\n  component: NgmInputComponent,\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations()]\\n    }),\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [OcapCoreModule]\\n    })\\n  ]\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmSelectComponent>","defaultValue":"{\\n  component: NgmSelectComponent,\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [MatButtonModule, MatIconModule, OcapCoreModule, NgmSelectModule]\\n    })\\n  ]\\n}"},{"name":"Multiple","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-select/smart-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"MultipleMeasures","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Multiple Measures Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: \'[Department]\'\\n          },\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          },\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Cost\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"MultiplePanes","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/splitter/splitter.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"MultiplePanesTemplate.bind({})"},{"name":"MultiplePanesTemplate","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/splitter/splitter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<SplitterComponent>","defaultValue":"(args: SplitterComponent) => ({\\n  template: `<ngm-splitter [type]=\\"type\\" style=\'height: 400px;\' [style.width]=\'\\"100%\\"\'>\\n  <ngm-splitter-pane minSize=\\"50px\\">\\n      <p>\\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris in lacus eget turpis congue fermentum. Aliquam sollicitudin massa vel ullamcorper bibendum. Donec sit amet augue in justo fermentum facilisis vel quis quam. Vivamus eget iaculis nisi, vitae dignissim leo. Donec eget consectetur lacus. In viverra vehicula libero, quis dictum odio varius in. Phasellus aliquam elit et lectus ornare placerat. Aliquam vitae sapien facilisis, auctor enim quis, consectetur dui. Cras elementum velit eros, ut efficitur ante pellentesque in. Proin vulputate lacus dui, vitae imperdiet dui pharetra ac. Nunc sagittis, sapien et posuere varius, mauris justo tincidunt odio, in interdum lorem libero sed enim. Nulla placerat scelerisque felis vitae accumsan.\\n      </p>\\n  </ngm-splitter-pane>\\n  <ngm-splitter-pane size=\\"100px\\" minSize=\\"50px\\">\\n      <p>\\n          Duis auctor, diam id vehicula consequat, lacus tellus molestie magna, sed varius nisi quam eget nisl. Donec dignissim mi et elementum laoreet. Nam dignissim quis justo eu fermentum. Proin vestibulum, neque quis elementum tincidunt, nibh mi gravida purus, eget volutpat ipsum magna in orci. Donec id mauris vitae lectus molestie blandit. Praesent non quam interdum, efficitur lacus nec, gravida mauris. Ut ac ante maximus, ultrices turpis a, aliquam magna. Praesent blandit ante ut nulla malesuada lobortis. Praesent a lobortis justo. Morbi congue, dui sed ornare faucibus, turpis felis vulputate arcu, lobortis posuere sem leo eget risus. Duis risus augue, dignissim ac tincidunt a, ullamcorper rutrum nisl. Ut ut ipsum vel purus viverra dapibus.\\n      </p>\\n  </ngm-splitter-pane>\\n  <ngm-splitter-pane size=\\"100px\\" minSize=\\"50px\\">\\n    <p>\\n        Duis auctor, diam id vehicula consequat, lacus tellus molestie magna, sed varius nisi quam eget nisl. Donec dignissim mi et elementum laoreet. Nam dignissim quis justo eu fermentum. Proin vestibulum, neque quis elementum tincidunt, nibh mi gravida purus, eget volutpat ipsum magna in orci. Donec id mauris vitae lectus molestie blandit. Praesent non quam interdum, efficitur lacus nec, gravida mauris. Ut ac ante maximus, ultrices turpis a, aliquam magna. Praesent blandit ante ut nulla malesuada lobortis. Praesent a lobortis justo. Morbi congue, dui sed ornare faucibus, turpis felis vulputate arcu, lobortis posuere sem leo eget risus. Duis risus augue, dignissim ac tincidunt a, ullamcorper rutrum nisl. Ut ut ipsum vel purus viverra dapibus.\\n    </p>\\n  </ngm-splitter-pane>\\n</ngm-splitter>`,\\n  props: {\\n    ...args,\\n  },\\n  styles: [`.ngm-splitter-pane {overflow: auto;}`]\\n})"},{"name":"NestedPanes","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/splitter/splitter.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"NestedPanesTemplate.bind({})"},{"name":"NestedPanesTemplate","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/splitter/splitter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<SplitterComponent>","defaultValue":"(args: SplitterComponent) => ({\\n  template: `<ngm-splitter [type]=\\"type\\" style=\'height: 400px;\' [style.width]=\'\\"100%\\"\'>\\n  <ngm-splitter-pane>\\n      <p>\\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris in lacus eget turpis congue fermentum. Aliquam sollicitudin massa vel ullamcorper bibendum. Donec sit amet augue in justo fermentum facilisis vel quis quam. Vivamus eget iaculis nisi, vitae dignissim leo. Donec eget consectetur lacus. In viverra vehicula libero, quis dictum odio varius in. Phasellus aliquam elit et lectus ornare placerat. Aliquam vitae sapien facilisis, auctor enim quis, consectetur dui. Cras elementum velit eros, ut efficitur ante pellentesque in. Proin vulputate lacus dui, vitae imperdiet dui pharetra ac. Nunc sagittis, sapien et posuere varius, mauris justo tincidunt odio, in interdum lorem libero sed enim. Nulla placerat scelerisque felis vitae accumsan.\\n      </p>\\n  </ngm-splitter-pane>\\n  <ngm-splitter-pane>\\n    <ngm-splitter [type]=\\"type\\" style=\'height: 100%;\' [style.width]=\'\\"100%\\"\'>\\n      <ngm-splitter-pane>\\n          <p>\\n              Duis auctor, diam id vehicula consequat, lacus tellus molestie magna, sed varius nisi quam eget nisl. Donec dignissim mi et elementum laoreet. Nam dignissim quis justo eu fermentum. Proin vestibulum, neque quis elementum tincidunt, nibh mi gravida purus, eget volutpat ipsum magna in orci. Donec id mauris vitae lectus molestie blandit. Praesent non quam interdum, efficitur lacus nec, gravida mauris. Ut ac ante maximus, ultrices turpis a, aliquam magna. Praesent blandit ante ut nulla malesuada lobortis. Praesent a lobortis justo. Morbi congue, dui sed ornare faucibus, turpis felis vulputate arcu, lobortis posuere sem leo eget risus. Duis risus augue, dignissim ac tincidunt a, ullamcorper rutrum nisl. Ut ut ipsum vel purus viverra dapibus.\\n          </p>\\n      </ngm-splitter-pane>\\n      <ngm-splitter-pane>\\n        <p>\\n            Duis auctor, diam id vehicula consequat, lacus tellus molestie magna, sed varius nisi quam eget nisl. Donec dignissim mi et elementum laoreet. Nam dignissim quis justo eu fermentum. Proin vestibulum, neque quis elementum tincidunt, nibh mi gravida purus, eget volutpat ipsum magna in orci. Donec id mauris vitae lectus molestie blandit. Praesent non quam interdum, efficitur lacus nec, gravida mauris. Ut ac ante maximus, ultrices turpis a, aliquam magna. Praesent blandit ante ut nulla malesuada lobortis. Praesent a lobortis justo. Morbi congue, dui sed ornare faucibus, turpis felis vulputate arcu, lobortis posuere sem leo eget risus. Duis risus augue, dignissim ac tincidunt a, ullamcorper rutrum nisl. Ut ut ipsum vel purus viverra dapibus.\\n        </p>\\n      </ngm-splitter-pane>\\n    </ngm-splitter>\\n  </ngm-splitter-pane>\\n</ngm-splitter>`,\\n  props: {\\n    ...args,\\n  },\\n  styles: [`.ngm-splitter-pane {overflow: auto;}`]\\n})"},{"name":"Paging","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      paging: true,\\n      pageSize: 3\\n    }\\n  }\\n}"},{"name":"PagingCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      paging: true,\\n      pageSize: 3\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    }\\n  }\\n}"},{"name":"PagingError","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales1\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      paging: true,\\n      pageSize: 3,\\n      showToolbar: true\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    }\\n  }\\n}"},{"name":"ParameterInput","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentInput\',\\n      paramType: ParameterControlEnum.Input\\n    }\\n  }\\n}"},{"name":"ParameterInputNumber","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentInput\',\\n      paramType: ParameterControlEnum.Input,\\n      dataType: \'number\'\\n    }\\n  }\\n}"},{"name":"ParameterInputString","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentInput\',\\n      paramType: ParameterControlEnum.Input,\\n      dataType: \'string\'\\n    }\\n  }\\n}"},{"name":"ParameterSelect","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentSelect\',\\n      paramType: ParameterControlEnum.Select,\\n      availableMembers: AVAILABLE_MEMBERS\\n    }\\n  }\\n}"},{"name":"ParameterSelectDensity","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentSelect\',\\n      paramType: ParameterControlEnum.Select,\\n      availableMembers: AVAILABLE_MEMBERS\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    }\\n  }\\n}"},{"name":"ParameterSelectMultiple","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentSelect\',\\n      paramType: ParameterControlEnum.Select,\\n      availableMembers: AVAILABLE_MEMBERS\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    options: {\\n      selectionType: FilterSelectionType.Multiple\\n    }\\n  }\\n}"},{"name":"Pipe","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Prefix","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n<ngm-smart-filter [dataSettings]=\\"dataSettings\\" [dimension]=\\"dimension\\" [options]=\\"options\\">\\n    <div ngmPrefix>\\n      <mat-icon>search</mat-icon>\\n    </div>\\n</ngm-smart-filter>\\n    `\\n  }),\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {},\\n  }\\n}"},{"name":"preview","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/.storybook/preview.ts","deprecated":false,"deprecationMessage":"","type":"Preview","defaultValue":"{\\n  parameters: {\\n    docs: {\\n      toc: true, // 👈 Enables the table of contents\\n    },\\n  },\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Primary Analytical Card\',\\n    appearance: {\\n      // displayBehaviour: DisplayBehaviour.auto,\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/breadcrumb/breadcrumb.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    steps: [\\n      {\\n        value: \'A\',\\n        label: \'Step A\',\\n        active: true\\n      },\\n      {\\n        value: \'B\',\\n        label: \'Step B\',\\n        active: false\\n      }\\n    ]\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/display-behaviour/display-behaviour.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: { \\n    option: {\\n      value: 1,\\n      label: \'A\'\\n    }\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {}\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/resizer/resizer.directive.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tabs/tabs.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-list/member-list.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-table/member-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-tree/member-tree.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\',\\n      displayBehaviour: DisplayBehaviour.auto\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-select/smart-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/value-help/value-help.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/copilot/stories/chat.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    welcomeTitle: \'Welcome to My AI Copilot\'\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/copilot/stories/not-enabled.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Primary\',\\n    welcomeTitle: \'Welcome to My AI Copilot\',\\n    welcomeSubTitle: \'Your AI Copilot\'\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/core/directives/appearance.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: ButtonGroupDirective) => ({\\n    template: `\\n    <mat-slide-toggle>Slide me!</mat-slide-toggle>\\n  \\n  <div >\\n  <div >\\n    <mat-icon>share</mat-icon>\\n    <mat-icon displayDensity=\\"cosy\\">share</mat-icon>\\n    <mat-icon displayDensity=\\"compact\\">share</mat-icon>\\n  </div>\\n  \\n  <div>\\n    <button mat-icon-button ngmAppearance=\\"danger\\">\\n      <mat-icon>share</mat-icon>\\n    </button>\\n    <button mat-icon-button ngmAppearance=\\"acrylic\\">\\n      <mat-icon>share</mat-icon>\\n    </button>\\n    <button mat-icon-button displayDensity=\\"cosy\\">\\n      <mat-icon>share</mat-icon>\\n    </button>\\n    <button mat-icon-button displayDensity=\\"compact\\">\\n      <mat-icon>share</mat-icon>\\n    </button>\\n  </div>\\n  \\n  <div>\\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" ngmAppearance=\\"color\\" color=\\"primary\\">\\n      <mat-button-toggle value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" ngmAppearance=\\"color\\" color=\\"accent\\">\\n      <mat-button-toggle value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" displayDensity=\\"compact\\"\\n      ngmAppearance=\\"color\\" color=\\"accent\\"\\n      [value]=\\"\'italic\'\\">\\n      <mat-button-toggle disableRipple value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle disableRipple value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle disableRipple value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" multiple=\\"true\\" displayDensity=\\"compact\\"\\n      ngmAppearance=\\"color\\" color=\\"accent\\">\\n      <mat-button-toggle disableRipple value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle disableRipple value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle disableRipple value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" vertical ngmAppearance=\\"color\\" color=\\"primary\\">\\n      <mat-button-toggle value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" vertical multiple=\\"true\\" displayDensity=\\"compact\\"\\n      ngmAppearance=\\"color\\" color=\\"accent\\">\\n      <mat-button-toggle disableRipple value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle disableRipple value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle disableRipple value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" ngmAppearance=\\"outline\\" color=\\"primary\\">\\n      <mat-button-toggle value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" ngmAppearance=\\"outline\\" color=\\"primary\\" displayDensity=\\"compact\\">\\n      <mat-button-toggle value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  </div>\\n  \\n  <div>\\n    <mat-chip-list aria-label=\\"Fish selection\\" >\\n      <mat-chip>One fish</mat-chip>\\n      <mat-chip>Two fish</mat-chip>\\n      <mat-chip color=\\"primary\\" selected>Primary fish</mat-chip>\\n      <mat-chip color=\\"accent\\" selected>Accent fish</mat-chip>\\n      <mat-chip color=\\"warn\\" selected>warn fish</mat-chip>\\n    </mat-chip-list>\\n  \\n    <mat-chip-list aria-label=\\"Fish selection\\" ngmAppearance=\\"outline\\">\\n      <mat-chip>One fish</mat-chip>\\n      <mat-chip>Two fish</mat-chip>\\n      <mat-chip color=\\"primary\\" selected>Primary fish</mat-chip>\\n      <mat-chip color=\\"accent\\" selected>Accent fish</mat-chip>\\n      <mat-chip color=\\"warn\\" selected>warn fish</mat-chip>\\n    </mat-chip-list>\\n  \\n    <mat-chip-list aria-label=\\"Fish selection\\" ngmAppearance=\\"dashed\\">\\n      <mat-chip>One fish</mat-chip>\\n      <mat-chip>Two fish</mat-chip>\\n      <mat-chip color=\\"primary\\" selected>Primary fish</mat-chip>\\n      <mat-chip color=\\"accent\\" selected>Accent fish</mat-chip>\\n      <mat-chip color=\\"warn\\" selected>warn fish</mat-chip>\\n    </mat-chip-list>\\n  \\n    <mat-chip-list aria-label=\\"Fish selection\\" ngmAppearance=\\"outline\\" displayDensity=\\"compact\\">\\n      <mat-chip>One fish</mat-chip>\\n      <mat-chip>Two fish</mat-chip>\\n      <mat-chip color=\\"primary\\" selected>Primary fish</mat-chip>\\n      <mat-chip color=\\"accent\\" selected>Accent fish</mat-chip>\\n      <mat-chip color=\\"warn\\" selected>warn fish</mat-chip>\\n    </mat-chip-list>\\n  </div>\\n  \\n  <div fxLayout=\\"row wrap\\" fxLayoutAlign=\\"space-between center\\" >\\n    <div ngmButtonGroup>\\n      <button mat-button>Click me!</button>\\n      <button mat-raised-button color=\\"primary\\">Click me!</button>\\n    </div>\\n  \\n    <div ngmButtonGroup>\\n      <button mat-flat-button>Click me!</button>\\n      <button mat-raised-button color=\\"primary\\">Click me!</button>\\n      <button mat-raised-button color=\\"accent\\">Click me!</button>\\n    </div>\\n  \\n    <div ngmButtonGroup displayDensity=\\"cosy\\">\\n      <button mat-flat-button displayDensity=\\"cosy\\">Click me!</button>\\n      <button mat-raised-button color=\\"primary\\" displayDensity=\\"cosy\\">Click me!</button>\\n      <button mat-raised-button color=\\"accent\\" displayDensity=\\"cosy\\">Click me!</button>\\n    </div>\\n  \\n    <div ngmButtonGroup displayDensity=\\"compact\\">\\n      <button mat-flat-button displayDensity=\\"compact\\">Click me!</button>\\n      <button mat-raised-button color=\\"primary\\" displayDensity=\\"compact\\">Click me!</button>\\n      <button mat-raised-button color=\\"accent\\" displayDensity=\\"compact\\">Click me!</button>\\n    </div>\\n  </div>\\n  \\n  <div fxLayout=\\"row wrap\\" fxLayoutAlign=\\"space-between center\\" >\\n    <button mat-button color=\\"accent\\" [loading]=\\"true\\">Accent</button>\\n  \\n    <button mat-flat-button [loading]=\\"true\\">Confortable</button>\\n    <button mat-flat-button displayDensity=\\"cosy\\" [loading]=\\"true\\">Cosy</button>\\n    <button mat-flat-button displayDensity=\\"compact\\" [loading]=\\"true\\">Compact</button>\\n  \\n    <button mat-raised-button color=\\"primary\\" [loading]=\\"true\\">Primary</button>\\n    <button mat-raised-button color=\\"accent\\" [loading]=\\"true\\">Accent</button>\\n  \\n    <button mat-stroked-button color=\\"accent\\" [loading]=\\"true\\">Accent</button>\\n  \\n    <button mat-icon-button [loading]=\\"true\\" color=\\"primary\\">\\n      <mat-icon>more_vert</mat-icon>\\n    </button>\\n    <button mat-fab [loading]=\\"true\\" color=\\"primary\\">\\n      <mat-icon>delete</mat-icon>\\n    </button>\\n    <button mat-mini-fab [loading]=\\"true\\" color=\\"primary\\">\\n      <mat-icon>menu</mat-icon>\\n    </button>\\n  </div>\\n  \\n  <div fxLayout=\\"row wrap\\" fxLayoutAlign=\\"space-between center\\" >\\n    <div ngmButtonGroup>\\n      <button mat-button>Click me!</button>\\n      <button mat-raised-button color=\\"accent\\" [loading]=\\"true\\">Click me!</button>\\n    </div>\\n  </div>\\n  </div>\\n    `,\\n    props: args\\n  }),\\n  args: {\\n    text: \'Click me!\',\\n    padding: 10,\\n    disabled: true\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/core/directives/density.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({\\n  args: {}\\n})"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    }\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentSelector\',\\n      paramType: ParameterControlEnum.Dimensions,\\n      dimension: \'[Department]\',\\n      availableMembers: AVAILABLE_MEMBERS\\n    }\\n  }\\n}"},{"name":"PrimaryCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentSelector\',\\n      paramType: ParameterControlEnum.Dimensions,\\n      dimension: \'[Department]\'\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    }\\n  }\\n}"},{"name":"PrimaryMultiple","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentSelector\',\\n      paramType: ParameterControlEnum.Dimensions,\\n      dimension: \'[Department]\'\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    options: {\\n      selectionType: FilterSelectionType.Multiple\\n    }\\n  }\\n}"},{"name":"render","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(args) => ({\\n  props: args,\\n  styles: [`.ngm-analytical-grid {height: 400px;}`]\\n})"},{"name":"render","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(args) => ({\\n  props: args,\\n  styles: [\\n    `.ngm-smart-filter {\\n      width: 100px;\\n    }`\\n  ]\\n})"},{"name":"Search","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/search/search.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Searchable","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-table/member-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Select","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/mat/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"SelectCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/mat/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"SelectCosy","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/mat/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"SelectDisabled","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/mat/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"SelectDisplayBehaviour","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/mat/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"SelectedHierarchy","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"SelectionTypeMultiple","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {\\n      multiple: true\\n      // selectionType: FilterSelectionType.Multiple\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    }\\n  }\\n}"},{"name":"SelectMultiple","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/mat/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"SelectNoSelectOptions","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/mat/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"SelectValidators","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/mat/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"TemplateError.bind({})"},{"name":"SelectVirtualScroll","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/mat/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"SetOptionError","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'SetOption Error\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          },\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"ShowToolbar","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Analytical Grid Show Toolbar\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      showToolbar: true\\n    }\\n  }\\n}"},{"name":"Size","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/copilot/stories/chat.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `<ngm-copilot-chat ${argsToTemplate(\\n      args\\n    )} class=\\"h-[500px] w-[300px] shadow-lg rounded-lg m-4\\" style=\\"height: 500px;\\"></ngm-copilot-chat>`\\n  }),\\n  args: {\\n    welcomeTitle: \'Welcome to My AI Copilot\'\\n  },\\n  parameters: {\\n    background: { default: \'dark\' },\\n    actions: { argTypesRegex: \'^conversations.*\' }\\n  }\\n}"},{"name":"Slider","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'SliderParam\',\\n      paramType: ParameterControlEnum.Input,\\n      dataType: \'number\',\\n      value: 6\\n    },\\n    options: {\\n      slider: true,\\n      sliderMax: 10,\\n      sliderStep: 2,\\n      sliderInvert: true\\n    }\\n  }\\n}"},{"name":"SliderVertical","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'SliderParam\',\\n      paramType: ParameterControlEnum.Input,\\n      dataType: \'number\',\\n      value: 6\\n    },\\n    options: {\\n      slider: true,\\n      sliderMax: 10,\\n      sliderStep: 2,\\n      sliderVertical: true\\n    }\\n  }\\n}"},{"name":"Sortable","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Sortable\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          },\\n          {\\n            dimension: \'[Department]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      sortable: true\\n    }\\n  }\\n}"},{"name":"SourceFrom","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-list/member-list.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"SourceFrom","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-table/member-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"SourceFrom","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-tree/member-tree.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"SplitButton","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/split-button/split-button.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"StickyHeaders","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Striped","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Suffix","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n<ngm-smart-filter [dataSettings]=\\"dataSettings\\" [dimension]=\\"dimension\\" [options]=\\"options\\">\\n    <div ngmSuffix>\\n      <mat-icon>search</mat-icon>\\n    </div>\\n</ngm-smart-filter>\\n    `\\n  }),\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {},\\n  }\\n}"},{"name":"Suffix","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n<ngm-select [selectOptions]=\\"selectOptions\\">\\n<div ngmSuffix>suffix</div>\\n</ngm-select>    \\n    `\\n  }),\\n  args: {\\n    selectOptions: TREE_NODE_DATA\\n  }\\n}"},{"name":"SuffixSearchable","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n<ngm-select searchable [selectOptions]=\\"selectOptions\\">\\n<div ngmSuffix>suffix</div>\\n</ngm-select>    \\n    `\\n  }),\\n  args: {\\n    selectOptions: TREE_NODE_DATA\\n  }\\n}"},{"name":"SwitchTemplate","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `<ngm-story-component-switch-grid></ngm-story-component-switch-grid>`\\n  }),\\n  args: {}\\n}"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/resizer/resizer.directive.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<any>","defaultValue":"(args: any) => ({\\n  props: args,\\n  template: `\\n<mat-drawer-container class=\\"example-container\\" autosize>\\n  <mat-drawer mode=\\"side\\" [position]=\\"drawerPosition\\" opened ngmResizer [resizerWidth]=\\"200\\">Drawer content\\n    <div ngmResizerBar [resizerBarPosition]=\\"barPosition\\" cdkDrag></div>\\n  </mat-drawer>\\n  <mat-drawer-content>Main content</mat-drawer-content>\\n</mat-drawer-container>\\n  `,\\n  styles: [`.mat-drawer-container {\\nheight: 400px;\\n  }`]\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/search/search.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(args: any) => ({\\n  props: args\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/split-button/split-button.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<SplitButtonComponent>","defaultValue":"(args: SplitButtonComponent) => ({\\n  props: args,\\n  styles: [``]\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/splitter/splitter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<SplitterComponent>","defaultValue":"(args: SplitterComponent) => ({\\n  template: `<ngm-splitter [type]=\\"type\\" style=\'height: 100vh;\' [style.width]=\'\\"100%\\"\'>\\n  <ngm-splitter-pane>\\n      <p>\\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris in lacus eget turpis congue fermentum. Aliquam sollicitudin massa vel ullamcorper bibendum. Donec sit amet augue in justo fermentum facilisis vel quis quam. Vivamus eget iaculis nisi, vitae dignissim leo. Donec eget consectetur lacus. In viverra vehicula libero, quis dictum odio varius in. Phasellus aliquam elit et lectus ornare placerat. Aliquam vitae sapien facilisis, auctor enim quis, consectetur dui. Cras elementum velit eros, ut efficitur ante pellentesque in. Proin vulputate lacus dui, vitae imperdiet dui pharetra ac. Nunc sagittis, sapien et posuere varius, mauris justo tincidunt odio, in interdum lorem libero sed enim. Nulla placerat scelerisque felis vitae accumsan.\\n      </p>\\n  </ngm-splitter-pane>\\n  <ngm-splitter-pane>\\n      <p>\\n          Duis auctor, diam id vehicula consequat, lacus tellus molestie magna, sed varius nisi quam eget nisl. Donec dignissim mi et elementum laoreet. Nam dignissim quis justo eu fermentum. Proin vestibulum, neque quis elementum tincidunt, nibh mi gravida purus, eget volutpat ipsum magna in orci. Donec id mauris vitae lectus molestie blandit. Praesent non quam interdum, efficitur lacus nec, gravida mauris. Ut ac ante maximus, ultrices turpis a, aliquam magna. Praesent blandit ante ut nulla malesuada lobortis. Praesent a lobortis justo. Morbi congue, dui sed ornare faucibus, turpis felis vulputate arcu, lobortis posuere sem leo eget risus. Duis risus augue, dignissim ac tincidunt a, ullamcorper rutrum nisl. Ut ut ipsum vel purus viverra dapibus.\\n      </p>\\n  </ngm-splitter-pane>\\n</ngm-splitter>`,\\n  props: {\\n    ...args,\\n  }\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tabs/tabs.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<any>","defaultValue":"(args: any) => ({\\n  props: args,\\n  template: `\\n<mat-tab-group class=\\"ngm-tab-group-desktop\\">\\n  <mat-tab label=\\"First\\"> Content 1 </mat-tab>\\n  <mat-tab label=\\"Second\\"> Content 2 </mat-tab>\\n  <mat-tab label=\\"Third\\"> Content 3 </mat-tab>\\n</mat-tab-group>\\n  `,\\n  styles: [``]\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<any>","defaultValue":"(args: any) => ({\\n  props: args,\\n  template: `<test-tree-select [label]=\\"label\\" [treeNodes]=\\"treeNodes\\" [model]=\\"model\\" [multiple]=\\"multiple\\"\\n    [maxTagCount]=\\"maxTagCount\\"\\n    [autocomplete]=\\"autocomplete\\" [virtualScroll]=\\"virtualScroll\\" [panelWidth]=\\"panelWidth\\"\\n    [displayBehaviour]=\\"displayBehaviour\\" [displayDensity]=\\"displayDensity\\" [treeViewer]=\\"treeViewer\\"\\n    [searchable]=\\"searchable\\"\\n    [color]=\\"color\\"\\n    [initialLevel]=\\"initialLevel\\"\\n    [validators]=\\"validators\\"\\n    [disabled]=\\"disabled\\"\\n    >\\n  </test-tree-select>`,\\n  styles: [``]\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<TreeTableComponent<>>","defaultValue":"(args: TreeTableComponent<unknown>) => ({\\n  props: args,\\n  styles: [``]\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-list/member-list.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<NgmMemberListComponent>","defaultValue":"(args: NgmMemberListComponent) => ({\\n  props: args,\\n  styles: [`.ngm-member-list {height: 200px;}`]\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-table/member-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<NgmMemberTableComponent<>>","defaultValue":"(args: NgmMemberTableComponent<unknown>) => ({\\n  props: args\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-tree/member-tree.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<NgmMemberTreeComponent>","defaultValue":"(args: NgmMemberTreeComponent) => ({\\n  props: args,\\n  styles: [`.ngm-member-tree {height: 400px;}`]\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-select/smart-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<NgmSmartSelectComponent>","defaultValue":"(args: NgmSmartSelectComponent) => ({\\n  props: args\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<NgmMemberTreeSelectComponent>","defaultValue":"(args: NgmMemberTreeSelectComponent) => ({\\n  props: args,\\n  template: `<test-member-tree-select [label]=\\"label\\"\\n    [dataSettings]=\\"dataSettings\\"  \\n    [dimension]=\\"dimension\\"\\n    [appearance]=\\"appearance\\"\\n    [data]=\\"data\\"\\n    [options]=\\"options\\"\\n  ></test-member-tree-select>`\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/value-help/value-help.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<NgmValueHelpComponent>","defaultValue":"(args: NgmValueHelpComponent) => ({\\n  props: args\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/core/directives/density.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(args: any) => ({\\n  props: args,\\n  template: `\\n<div>\\n  <mat-icon>share</mat-icon>\\n  <mat-icon displayDensity=\\"cosy\\">share</mat-icon>\\n  <mat-icon displayDensity=\\"compact\\">share</mat-icon>\\n</div>\\n\\n<div>\\n  <button mat-icon-button>\\n    <mat-icon>share</mat-icon>\\n  </button>\\n  <button mat-icon-button displayDensity=\\"cosy\\">\\n    <mat-icon>share</mat-icon>\\n  </button>\\n  <button mat-icon-button displayDensity=\\"compact\\">\\n    <mat-icon>share</mat-icon>\\n  </button>\\n</div>\\n\\n<div displayDensity=\\"comfort\\">\\n  <mat-checkbox>Check me!</mat-checkbox>\\n  <ngm-search></ngm-search>\\n  <mat-chip-grid #chipGrid aria-label=\\"Fruit selection\\">\\n    <mat-chip-row>fruit\\n      <button matChipRemove [attr.aria-label]=\\"\'remove \' + fruit\\">\\n        <mat-icon>cancel</mat-icon>\\n      </button>\\n    </mat-chip-row>\\n  </mat-chip-grid>\\n</div>\\n<div displayDensity=\\"cosy\\">\\n  <mat-checkbox>Check me!</mat-checkbox>\\n  <ngm-search></ngm-search>\\n  <mat-chip-grid #chipGrid aria-label=\\"Fruit selection\\">\\n    <mat-chip-row>fruit\\n      <button matChipRemove [attr.aria-label]=\\"\'remove \' + fruit\\">\\n        <mat-icon>cancel</mat-icon>\\n      </button>\\n    </mat-chip-row>\\n  </mat-chip-grid>\\n</div>\\n<div displayDensity=\\"compact\\">\\n  <mat-checkbox>Check me!</mat-checkbox>\\n  <ngm-search></ngm-search>\\n  <mat-chip-grid #chipGrid aria-label=\\"Fruit selection\\">\\n    <mat-chip-row>fruit\\n      <button matChipRemove [attr.aria-label]=\\"\'remove \' + fruit\\">\\n        <mat-icon>cancel</mat-icon>\\n      </button>\\n    </mat-chip-row>\\n  </mat-chip-grid>\\n</div>\\n  `\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<NgmEntitySchemaComponent>","defaultValue":"(args: NgmEntitySchemaComponent) => ({\\n  props: args\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(args: Partial<NgmParameterComponent>) => ({\\n  props: args,\\n  template: `<ngm-parameter [dataSettings]=\\"dataSettings\\" [parameter]=\\"parameter\\" [options]=\\"options\\" [appearance]=\\"appearance\\"></ngm-parameter>`\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/mat/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<any>","defaultValue":"(args: any) => ({\\n  props: args,\\n  template: `<test-select [label]=\\"label\\" [selectOptions]=\\"selectOptions\\" [model]=\\"model\\" [multiple]=\\"multiple\\" [virtualScroll]=\\"virtualScroll\\"\\n  [displayBehaviour]=\\"displayBehaviour\\" [displayDensity]=\\"displayDensity\\"\\n  [disabled]=\\"disabled\\"\\n  ></test-select>`,\\n  styles: [``]\\n})"},{"name":"TemplateError","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/mat/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<any>","defaultValue":"(args: any) => ({\\n  props: args,\\n  template: `<test-select [label]=\\"label\\"\\n    [selectOptions]=\\"selectOptions\\"\\n    [model]=\\"model\\"\\n    [multiple]=\\"multiple\\"\\n    [virtualScroll]=\\"virtualScroll\\"\\n    [displayBehaviour]=\\"displayBehaviour\\"\\n    [displayDensity]=\\"displayDensity\\"\\n    [disabled]=\\"disabled\\"\\n    [validators]=\\"validators\\"\\n  ></test-select>`,\\n  styles: [``]\\n})"},{"name":"TemplateTemplate","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<TestCellTemplate>","defaultValue":"(args: TestCellTemplate) => ({\\n  props: args,\\n  template: `<ngm-test-tree-table-cell-template></ngm-test-tree-table-cell-template>`\\n})"},{"name":"TemplateWidth","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<any>","defaultValue":"(args: any) => ({\\n  props: args,\\n  styles: [`.ngm-tree-select {width: 100px;}`]\\n})"},{"name":"TemplateWidth","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<NgmMemberTreeSelectComponent>","defaultValue":"(args: NgmMemberTreeSelectComponent) => ({\\n  props: args,\\n  styles: [\\n    `.ngm-member-tree-select {\\n      width: 100px;\\n    }`\\n  ]\\n})"},{"name":"Top","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/resizer/resizer.directive.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"CardTemplate.bind({})"},{"name":"TREE_NODE_DATA","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"[\\n  {\\n    key: \'Fruit\',\\n    label: \'水果\',\\n    children: [\\n      { key: \'Apple\', label: \'苹果\', value: 10, raw: { type: \'Hive\' } },\\n      { key: \'Banana\', label: \'香蕉\', value: 20 },\\n      { key: \'Fruit loops\', label: \'果循环\', value: 30 },\\n      {\\n        key: \'Fruit2\',\\n        label: \'水果\'\\n      }\\n    ]\\n  },\\n  {\\n    key: \'Vegetables\',\\n    label: \'蔬菜\',\\n    children: [\\n      {\\n        key: \'Green\',\\n        label: \'绿色\',\\n        children: [\\n          { key: \'Broccoli\', label: \'西兰花\', value: 10 },\\n          { key: \'Brussel sprouts\', label: \'豆芽\', value: 20 }\\n        ]\\n      },\\n      {\\n        key: \'Orange\',\\n        label: \'橙\',\\n        children: [\\n          { key: \'Pumpkins\', label: \'南瓜\', value: 30, raw: { type: \'PG\' } },\\n          { key: \'Carrots\', label: \'胡萝卜\', value: 40 }\\n        ]\\n      }\\n    ]\\n  }\\n] as any"},{"name":"TREE_NODE_DATA","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"[\\n  {\\n    name: \'Fruit\',\\n    children: [\\n      { name: \'Apple\', value: 10, raw: { type: \'Hive\' } },\\n      { name: \'Banana\', value: 20 },\\n      { name: \'Fruit loops\', value: 30 }\\n    ]\\n  },\\n  {\\n    name: \'Vegetables\',\\n    children: [\\n      {\\n        name: \'Green\',\\n        children: [\\n          { name: \'Broccoli\', value: 10 },\\n          { name: \'Brussel sprouts\', value: 20 }\\n        ]\\n      },\\n      {\\n        name: \'Orange\',\\n        children: [\\n          { name: \'Pumpkins\', value: 30, raw: { type: \'PG\' } },\\n          { name: \'Carrots\', value: 40 }\\n        ]\\n      }\\n    ]\\n  }\\n] as any"},{"name":"TREE_NODE_DATA","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/mat/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"[\\n  {\\n    value: \'Fruit\',\\n    label: \'水果\'\\n  },\\n  { value: \'Apple\', label: \'苹果\', raw: { type: \'Hive\' } },\\n  { value: \'Banana\', label: \'香蕉\' },\\n  { value: \'Fruit loops\', label: \'果循环\' },\\n  {\\n    value: \'Vegetables\',\\n    label: \'蔬菜\'\\n  },\\n  {\\n    value: \'Green\',\\n    label: \'绿色\'\\n  },\\n  { value: \'Broccoli\', label: \'西兰花\' },\\n  { value: \'Brussel sprouts\', label: \'豆芽\' },\\n  {\\n    value: \'Orange\',\\n    label: \'橙\'\\n  },\\n  { value: \'Pumpkins\', label: \'南瓜\', raw: { type: \'PG\' } },\\n  { value: \'Carrots\', label: \'胡萝卜\' }\\n] as any"},{"name":"TREE_NODE_DATA","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"[\\n  {\\n    value: null,\\n    label: \'\'\\n  },\\n  {\\n    value: \'Fruit\',\\n    label: \'水果\'\\n  },\\n  { value: \'Apple\', label: \'苹果\', raw: { type: \'Hive\' } },\\n  { value: \'Banana\', label: \'香蕉\' },\\n  { value: \'Fruit loops\', label: \'果循环\' },\\n  {\\n    value: \'Vegetables\',\\n    label: \'蔬菜\'\\n  },\\n  {\\n    value: \'Green\',\\n    label: \'绿色\'\\n  },\\n  { value: \'Broccoli\', label: \'西兰花\' },\\n  { value: \'Brussel sprouts\', label: \'豆芽\' },\\n  {\\n    value: \'Orange\',\\n    label: \'橙\'\\n  },\\n  { value: \'Pumpkins\', label: \'南瓜\', raw: { type: \'PG\' } },\\n  { value: \'Carrots\', label: \'胡萝卜\' }\\n] as any"},{"name":"TreeSelectInitialLevel","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"TreeSelectMultipleValidators","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"TreeSelectValidators","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"TreeSelectWithNoSelectOptions","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"UserData","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-select/smart-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Vertical","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/splitter/splitter.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Width","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/breadcrumb/breadcrumb.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `<ngm-breadcrumb-bar style=\\"width: 200px;\\" [steps]=\\"steps\\" displayDensity=\\"compact\\"></ngm-breadcrumb-bar>`,\\n  }),\\n  args: {\\n    steps: [\\n      {\\n        value: \'A\',\\n        label: \'Step A AAAAAAAAAAAA\',\\n        active: true\\n      },\\n      {\\n        value: \'B\',\\n        label: \'Step BBBBBBBBBBBBBB\',\\n        active: false\\n      }\\n    ]\\n  }\\n}"},{"name":"Width","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {\\n      selectionType: FilterSelectionType.Multiple\\n    }\\n  }\\n}"},{"name":"Width","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"TemplateWidth.bind({})"},{"name":"WidthCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {\\n      selectionType: FilterSelectionType.Multiple\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    }\\n  }\\n}"},{"name":"WithIcon","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    valueKey: \'key\',\\n    selectOptions: [\\n      {\\n        key: \'Fruit\',\\n        caption: \'水果\',\\n        icon: \'apple\'\\n      }\\n    ]\\n  }\\n}"}],"functions":[],"typealiases":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<AnalyticalGridComponent<>>","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmInputComponent>","file":"packages/angular/common/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmCopilotChatComponent>","file":"packages/angular/copilot/stories/chat.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmSelectComponent>","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"enumerations":[],"groupedVariables":{"packages/angular/analytical-grid/analytical-grid.component.stories.ts":[{"name":"A1Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"A2Sticky","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      sticky: true\\n    }\\n  }\\n}"},{"name":"A3StickyGrid","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      sticky: true,\\n      grid: true\\n    }\\n  }\\n}"},{"name":"DensityCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Analytical Grid compact\',\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"DisplayHierarchy","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Analytical Grid Hierarchy\',\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\',\\n            displayHierarchy: true\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Error","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Analytical Grid Error\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales1\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      showToolbar: true\\n    }\\n  }\\n}"},{"name":"Loading","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Loading Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder10s\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"MultipleMeasures","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Multiple Measures Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: \'[Department]\'\\n          },\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          },\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Cost\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Paging","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      paging: true,\\n      pageSize: 3\\n    }\\n  }\\n}"},{"name":"PagingCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      paging: true,\\n      pageSize: 3\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    }\\n  }\\n}"},{"name":"PagingError","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Primary Analytical Grid\',\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales1\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      paging: true,\\n      pageSize: 3,\\n      showToolbar: true\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    }\\n  }\\n}"},{"name":"render","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(args) => ({\\n  props: args,\\n  styles: [`.ngm-analytical-grid {height: 400px;}`]\\n})"},{"name":"ShowToolbar","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Analytical Grid Show Toolbar\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      showToolbar: true\\n    }\\n  }\\n}"},{"name":"Sortable","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    title: \'Sortable\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      analytics: {\\n        rows: [\\n          {\\n            dimension: \'[Product]\'\\n          },\\n          {\\n            dimension: \'[Department]\'\\n          }\\n        ],\\n        columns: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {\\n      sortable: true\\n    }\\n  }\\n}"},{"name":"SwitchTemplate","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `<ngm-story-component-switch-grid></ngm-story-component-switch-grid>`\\n  }),\\n  args: {}\\n}"}],"packages/angular/analytical-card/analytical-card.component.stories.ts":[{"name":"Appearance","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Display Density Compact\',\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"ChartTypes","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Chart Types\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      },\\n      presentationVariant: {\\n        groupBy: [\\n          {\\n            dimension: \'[Department]\',\\n            level: \'[Department].[Department]\'\\n          }\\n        ]\\n      }\\n    },\\n    chartSettings: {\\n      chartTypes: [\\n        {\\n          type: \'Line\'\\n        }\\n      ]\\n    },\\n    options: {}\\n  }\\n}"},{"name":"DrillDimensions","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Drill Dimensions\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      },\\n      presentationVariant: {\\n        groupBy: [\\n          {\\n            dimension: \'[Department]\',\\n            level: \'[Department].[Department]\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Empty","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Empty Data\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'Empty\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Error","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Error\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales1\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"HideButtons","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Hide Buttons\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Loading","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Loading\',\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder10s\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Primary Analytical Card\',\\n    appearance: {\\n      // displayBehaviour: DisplayBehaviour.auto,\\n    },\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"},{"name":"SetOptionError","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/analytical-card/analytical-card.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'SetOption Error\',\\n    appearance: {},\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\',\\n      chartAnnotation: {\\n        chartType: {\\n          type: \'Bar\'\\n        },\\n        dimensions: [\\n          {\\n            dimension: \'[Product]\'\\n          }\\n        ],\\n        measures: [\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          },\\n          {\\n            dimension: C_MEASURES,\\n            measure: \'Sales\'\\n          }\\n        ]\\n      }\\n    },\\n    options: {}\\n  }\\n}"}],"packages/angular/controls/member-list/member-list.component.stories.ts":[{"name":"Appearance","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-list/member-list.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-list/member-list.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"SourceFrom","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-list/member-list.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-list/member-list.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<NgmMemberListComponent>","defaultValue":"(args: NgmMemberListComponent) => ({\\n  props: args,\\n  styles: [`.ngm-member-list {height: 200px;}`]\\n})"}],"packages/angular/controls/member-tree/member-tree.component.stories.ts":[{"name":"Appearance","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-tree/member-tree.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-tree/member-tree.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"SourceFrom","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-tree/member-tree.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-tree/member-tree.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<NgmMemberTreeComponent>","defaultValue":"(args: NgmMemberTreeComponent) => ({\\n  props: args,\\n  styles: [`.ngm-member-tree {height: 400px;}`]\\n})"}],"packages/angular/controls/smart-filter/smart-filter.component.stories.ts":[{"name":"AppearanceOutline","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {\\n      selectionType: FilterSelectionType.Multiple\\n    },\\n    appearance: {\\n      appearance: \'outline\'\\n    }\\n  }\\n}"},{"name":"DensityCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {},\\n    displayDensity: DisplayDensity.compact\\n  }\\n}"},{"name":"Disabled","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {},\\n    disabled: true\\n  }\\n}"},{"name":"Prefix","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n<ngm-smart-filter [dataSettings]=\\"dataSettings\\" [dimension]=\\"dimension\\" [options]=\\"options\\">\\n    <div ngmPrefix>\\n      <mat-icon>search</mat-icon>\\n    </div>\\n</ngm-smart-filter>\\n    `\\n  }),\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {},\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\',\\n      displayBehaviour: DisplayBehaviour.auto\\n    },\\n    options: {}\\n  }\\n}"},{"name":"render","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(args) => ({\\n  props: args,\\n  styles: [\\n    `.ngm-smart-filter {\\n      width: 100px;\\n    }`\\n  ]\\n})"},{"name":"SelectionTypeMultiple","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {\\n      multiple: true\\n      // selectionType: FilterSelectionType.Multiple\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    }\\n  }\\n}"},{"name":"Suffix","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n<ngm-smart-filter [dataSettings]=\\"dataSettings\\" [dimension]=\\"dimension\\" [options]=\\"options\\">\\n    <div ngmSuffix>\\n      <mat-icon>search</mat-icon>\\n    </div>\\n</ngm-smart-filter>\\n    `\\n  }),\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {},\\n  }\\n}"},{"name":"Width","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {\\n      selectionType: FilterSelectionType.Multiple\\n    }\\n  }\\n}"},{"name":"WidthCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render,\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder3s\'\\n    },\\n    dimension: {\\n      dimension: \'Department\'\\n    },\\n    options: {\\n      selectionType: FilterSelectionType.Multiple\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    }\\n  }\\n}"}],"packages/angular/common/tree-select/tree-select.component.stories.ts":[{"name":"ATreeSelect","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"ATreeSelectDensityCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"ATreeSelectDensityCosy","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"ATreeSelectMultiple","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"ATreeSelectMultipleSearchable","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"ATreeSelectVirtualScroll","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"BTreeSelectMultipleDensityCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"CAutocomplete","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"CAutocompleteDensityCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"CAutocompleteDensityCosy","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"DAutocompleteMaxTag","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"DAutocompleteMultiple","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Disabled","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"DisabledTreeView","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"EAutocompleteVirtualScroll","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"EAutocompleteVirtualScrollWidth","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"FAutocompleteMultipleVirtualScroll","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"GTreeSelectDisplayBehaviour","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"HTreeSelectMultipleBehaviour","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"IAutocompleteDisplayBehaviour","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"JAutocompleteMultipleBehaviour","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"KTreeViewer","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"KTreeViewerColorAccent","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"KTreeViewerColorPrimary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"KTreeViewerCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"KTreeViewerSearchable","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"LAutocompleteWidth","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"TemplateWidth.bind({})"},{"name":"LWidth","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"TemplateWidth.bind({})"},{"name":"LWidthNGT","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"TemplateWidth.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<any>","defaultValue":"(args: any) => ({\\n  props: args,\\n  template: `<test-tree-select [label]=\\"label\\" [treeNodes]=\\"treeNodes\\" [model]=\\"model\\" [multiple]=\\"multiple\\"\\n    [maxTagCount]=\\"maxTagCount\\"\\n    [autocomplete]=\\"autocomplete\\" [virtualScroll]=\\"virtualScroll\\" [panelWidth]=\\"panelWidth\\"\\n    [displayBehaviour]=\\"displayBehaviour\\" [displayDensity]=\\"displayDensity\\" [treeViewer]=\\"treeViewer\\"\\n    [searchable]=\\"searchable\\"\\n    [color]=\\"color\\"\\n    [initialLevel]=\\"initialLevel\\"\\n    [validators]=\\"validators\\"\\n    [disabled]=\\"disabled\\"\\n    >\\n  </test-tree-select>`,\\n  styles: [``]\\n})"},{"name":"TemplateWidth","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<any>","defaultValue":"(args: any) => ({\\n  props: args,\\n  styles: [`.ngm-tree-select {width: 100px;}`]\\n})"},{"name":"TREE_NODE_DATA","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"[\\n  {\\n    key: \'Fruit\',\\n    label: \'水果\',\\n    children: [\\n      { key: \'Apple\', label: \'苹果\', value: 10, raw: { type: \'Hive\' } },\\n      { key: \'Banana\', label: \'香蕉\', value: 20 },\\n      { key: \'Fruit loops\', label: \'果循环\', value: 30 },\\n      {\\n        key: \'Fruit2\',\\n        label: \'水果\'\\n      }\\n    ]\\n  },\\n  {\\n    key: \'Vegetables\',\\n    label: \'蔬菜\',\\n    children: [\\n      {\\n        key: \'Green\',\\n        label: \'绿色\',\\n        children: [\\n          { key: \'Broccoli\', label: \'西兰花\', value: 10 },\\n          { key: \'Brussel sprouts\', label: \'豆芽\', value: 20 }\\n        ]\\n      },\\n      {\\n        key: \'Orange\',\\n        label: \'橙\',\\n        children: [\\n          { key: \'Pumpkins\', label: \'南瓜\', value: 30, raw: { type: \'PG\' } },\\n          { key: \'Carrots\', label: \'胡萝卜\', value: 40 }\\n        ]\\n      }\\n    ]\\n  }\\n] as any"},{"name":"TreeSelectInitialLevel","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"TreeSelectMultipleValidators","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"TreeSelectValidators","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"TreeSelectWithNoSelectOptions","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"}],"packages/angular/controls/smart-select/smart-select.component.stories.ts":[{"name":"AutoActiveFirst","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-select/smart-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"DensityCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-select/smart-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"DensityCosy","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-select/smart-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Multiple","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-select/smart-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-select/smart-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-select/smart-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<NgmSmartSelectComponent>","defaultValue":"(args: NgmSmartSelectComponent) => ({\\n  props: args\\n})"},{"name":"UserData","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/smart-select/smart-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"}],"packages/angular/parameter/parameter/parameter.component.stories.ts":[{"name":"AVAILABLE_MEMBERS","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  {\\n    value: 1,\\n    label: \'Department A\'\\n  },\\n  {\\n    value: 2,\\n    label: \'Department B\'\\n  },\\n  {\\n    value: 3,\\n    label: \'Department C\'\\n  }\\n]"},{"name":"ParameterInput","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentInput\',\\n      paramType: ParameterControlEnum.Input\\n    }\\n  }\\n}"},{"name":"ParameterInputNumber","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentInput\',\\n      paramType: ParameterControlEnum.Input,\\n      dataType: \'number\'\\n    }\\n  }\\n}"},{"name":"ParameterInputString","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentInput\',\\n      paramType: ParameterControlEnum.Input,\\n      dataType: \'string\'\\n    }\\n  }\\n}"},{"name":"ParameterSelect","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentSelect\',\\n      paramType: ParameterControlEnum.Select,\\n      availableMembers: AVAILABLE_MEMBERS\\n    }\\n  }\\n}"},{"name":"ParameterSelectDensity","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentSelect\',\\n      paramType: ParameterControlEnum.Select,\\n      availableMembers: AVAILABLE_MEMBERS\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    }\\n  }\\n}"},{"name":"ParameterSelectMultiple","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentSelect\',\\n      paramType: ParameterControlEnum.Select,\\n      availableMembers: AVAILABLE_MEMBERS\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    options: {\\n      selectionType: FilterSelectionType.Multiple\\n    }\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentSelector\',\\n      paramType: ParameterControlEnum.Dimensions,\\n      dimension: \'[Department]\',\\n      availableMembers: AVAILABLE_MEMBERS\\n    }\\n  }\\n}"},{"name":"PrimaryCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentSelector\',\\n      paramType: ParameterControlEnum.Dimensions,\\n      dimension: \'[Department]\'\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    }\\n  }\\n}"},{"name":"PrimaryMultiple","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'DepartmentSelector\',\\n      paramType: ParameterControlEnum.Dimensions,\\n      dimension: \'[Department]\'\\n    },\\n    appearance: {\\n      displayDensity: DisplayDensity.compact\\n    },\\n    options: {\\n      selectionType: FilterSelectionType.Multiple\\n    }\\n  }\\n}"},{"name":"Slider","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'SliderParam\',\\n      paramType: ParameterControlEnum.Input,\\n      dataType: \'number\',\\n      value: 6\\n    },\\n    options: {\\n      slider: true,\\n      sliderMax: 10,\\n      sliderStep: 2,\\n      sliderInvert: true\\n    }\\n  }\\n}"},{"name":"SliderVertical","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    },\\n    parameter: {\\n      name: \'SliderParam\',\\n      paramType: ParameterControlEnum.Input,\\n      dataType: \'number\',\\n      value: 6\\n    },\\n    options: {\\n      slider: true,\\n      sliderMax: 10,\\n      sliderStep: 2,\\n      sliderVertical: true\\n    }\\n  }\\n}"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/parameter/parameter/parameter.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(args: Partial<NgmParameterComponent>) => ({\\n  props: args,\\n  template: `<ngm-parameter [dataSettings]=\\"dataSettings\\" [parameter]=\\"parameter\\" [options]=\\"options\\" [appearance]=\\"appearance\\"></ngm-parameter>`\\n})"}],"packages/angular/common/resizer/resizer.directive.stories.ts":[{"name":"Bottom","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/resizer/resizer.directive.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"CardTemplate.bind({})"},{"name":"CardTemplate","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/resizer/resizer.directive.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<any>","defaultValue":"(args: any) => ({\\n  props: args,\\n  template: `\\n<mat-card ngmResizer [resizerHeight]=\\"200\\">\\nSimple card\\n  <div ngmResizerBar [resizerBarPosition]=\\"barPosition\\" cdkDrag></div>\\n</mat-card>\\n  `,\\n  styles: [`.mat-card {margin: 5rem;}`]\\n})"},{"name":"Left","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/resizer/resizer.directive.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/resizer/resizer.directive.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/resizer/resizer.directive.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<any>","defaultValue":"(args: any) => ({\\n  props: args,\\n  template: `\\n<mat-drawer-container class=\\"example-container\\" autosize>\\n  <mat-drawer mode=\\"side\\" [position]=\\"drawerPosition\\" opened ngmResizer [resizerWidth]=\\"200\\">Drawer content\\n    <div ngmResizerBar [resizerBarPosition]=\\"barPosition\\" cdkDrag></div>\\n  </mat-drawer>\\n  <mat-drawer-content>Main content</mat-drawer-content>\\n</mat-drawer-container>\\n  `,\\n  styles: [`.mat-drawer-container {\\nheight: 400px;\\n  }`]\\n})"},{"name":"Top","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/resizer/resizer.directive.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"CardTemplate.bind({})"}],"packages/angular/common/tree-table/tree-table.component.stories.ts":[{"name":"CellTemplate","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"TemplateTemplate.bind({})"},{"name":"DensityCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Grid","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"InitialLevel","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Pipe","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"StickyHeaders","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Striped","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<TreeTableComponent<>>","defaultValue":"(args: TreeTableComponent<unknown>) => ({\\n  props: args,\\n  styles: [``]\\n})"},{"name":"TemplateTemplate","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<TestCellTemplate>","defaultValue":"(args: TestCellTemplate) => ({\\n  props: args,\\n  template: `<ngm-test-tree-table-cell-template></ngm-test-tree-table-cell-template>`\\n})"},{"name":"TREE_NODE_DATA","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tree-table/tree-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"[\\n  {\\n    name: \'Fruit\',\\n    children: [\\n      { name: \'Apple\', value: 10, raw: { type: \'Hive\' } },\\n      { name: \'Banana\', value: 20 },\\n      { name: \'Fruit loops\', value: 30 }\\n    ]\\n  },\\n  {\\n    name: \'Vegetables\',\\n    children: [\\n      {\\n        name: \'Green\',\\n        children: [\\n          { name: \'Broccoli\', value: 10 },\\n          { name: \'Brussel sprouts\', value: 20 }\\n        ]\\n      },\\n      {\\n        name: \'Orange\',\\n        children: [\\n          { name: \'Pumpkins\', value: 30, raw: { type: \'PG\' } },\\n          { name: \'Carrots\', value: 40 }\\n        ]\\n      }\\n    ]\\n  }\\n] as any"}],"packages/angular/common/tabs/tabs.stories.ts":[{"name":"CloseButton","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tabs/tabs.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"((args: any) => ({\\n  props: args,\\n  template: `\\n<mat-tab-group class=\\"ngm-appearance-desktop\\" disableRipple>\\n  <mat-tab label=\\"First\\">\\n    <ng-template matTabLabel>First\\n      <button mat-icon-button disableRipple displayDensity=\\"cosy\\" class=\\"ngm-appearance-desktop ngm-tab-button-right\\"\\n          [matMenuTriggerFor]=\\"pointMenu\\"\\n          [matMenuTriggerData]=\\"{point: point}\\"\\n      >\\n          <mat-icon>more_vert</mat-icon>\\n      </button>\\n    </ng-template>\\n   Content 1 </mat-tab>\\n  <mat-tab label=\\"Second\\"> Content 2 </mat-tab>\\n  <mat-tab label=\\"Third\\"> Content 3 </mat-tab>\\n</mat-tab-group>\\n<mat-menu #pointMenu=\\"matMenu\\" xPosition=\\"before\\">\\n  <button mat-menu-item>Item 1</button>\\n  <button mat-menu-item>Item 2</button>\\n</mat-menu>\\n  `,\\n  styles: [``]\\n})).bind({})"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tabs/tabs.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/tabs/tabs.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<any>","defaultValue":"(args: any) => ({\\n  props: args,\\n  template: `\\n<mat-tab-group class=\\"ngm-tab-group-desktop\\">\\n  <mat-tab label=\\"First\\"> Content 1 </mat-tab>\\n  <mat-tab label=\\"Second\\"> Content 2 </mat-tab>\\n  <mat-tab label=\\"Third\\"> Content 3 </mat-tab>\\n</mat-tab-group>\\n  `,\\n  styles: [``]\\n})"}],"packages/angular/.storybook/main.ts":[{"name":"config","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/.storybook/main.ts","deprecated":false,"deprecationMessage":"","type":"StorybookConfig","defaultValue":"{\\n  stories: [\'../**/*.mdx\', \'../**/*.stories.@(js|jsx|ts|tsx|mdx)\'],\\n  addons: [\\n    //👇 Your documentation written in MDX along with your stories goes here\\n    \'@storybook/addon-docs\',\\n    \'@storybook/addon-essentials\',\\n    \'@storybook/addon-storysource\',\\n  ],\\n  framework: {\\n    name: \'@storybook/angular\',\\n    options: {}\\n  },\\n  docs: {\\n    autodocs: true\\n  }\\n}"}],"packages/angular/copilot/stories/chat.stories.ts":[{"name":"CustomEngine","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/copilot/stories/chat.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    copilotEngine: new StorybookCopilotEngine()\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/copilot/stories/chat.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    welcomeTitle: \'Welcome to My AI Copilot\'\\n  }\\n}"},{"name":"Size","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/copilot/stories/chat.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `<ngm-copilot-chat ${argsToTemplate(\\n      args\\n    )} class=\\"h-[500px] w-[300px] shadow-lg rounded-lg m-4\\" style=\\"height: 500px;\\"></ngm-copilot-chat>`\\n  }),\\n  args: {\\n    welcomeTitle: \'Welcome to My AI Copilot\'\\n  },\\n  parameters: {\\n    background: { default: \'dark\' },\\n    actions: { argTypesRegex: \'^conversations.*\' }\\n  }\\n}"}],"packages/angular/common/select/select/select.component.stories.ts":[{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    selectOptions: TREE_NODE_DATA\\n  }\\n}"},{"name":"Density","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n<div class=\\"flex items-center gap-4 p-4\\">\\n  <ngm-select label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n  </ngm-select>\\n\\n  <ngm-select searchable label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n  </ngm-select>\\n\\n\\n  <ngm-select label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n    <button ngmSuffix mat-icon-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </ngm-select>\\n  <ngm-select searchable label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n    <button ngmSuffix mat-icon-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </ngm-select>\\n  </div>\\n<div displayDensity=\\"cosy\\" class=\\"flex items-center gap-4 p-4\\">\\n  <ngm-select label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n  </ngm-select>\\n\\n  <ngm-select searchable label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n  </ngm-select>\\n\\n\\n  <ngm-select label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n    <button ngmSuffix mat-icon-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </ngm-select>\\n  <ngm-select searchable label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n    <button ngmSuffix mat-icon-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </ngm-select>\\n</div>\\n\\n<div displayDensity=\\"compact\\" class=\\"flex items-center gap-4 p-4\\">\\n  <ngm-select label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n  </ngm-select>\\n\\n  <ngm-select searchable label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n  </ngm-select>\\n\\n  <ngm-select label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\" displayDensity=\\"compact\\">\\n    <button ngmSuffix mat-icon-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </ngm-select>\\n  <ngm-select searchable label=\\"Fruit\\" placeholder=\\"Select an option\\" [selectOptions]=\\"selectOptions\\">\\n    <button ngmSuffix mat-icon-button>\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </ngm-select>\\n</div>\\n    `\\n  }),\\n  args: {\\n    selectOptions: TREE_NODE_DATA\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmSelectComponent>","defaultValue":"{\\n  component: NgmSelectComponent,\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations(), provideTranslate()]\\n    }),\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [MatButtonModule, MatIconModule, OcapCoreModule, NgmSelectModule]\\n    })\\n  ]\\n}"},{"name":"Suffix","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n<ngm-select [selectOptions]=\\"selectOptions\\">\\n<div ngmSuffix>suffix</div>\\n</ngm-select>    \\n    `\\n  }),\\n  args: {\\n    selectOptions: TREE_NODE_DATA\\n  }\\n}"},{"name":"SuffixSearchable","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `\\n<ngm-select searchable [selectOptions]=\\"selectOptions\\">\\n<div ngmSuffix>suffix</div>\\n</ngm-select>    \\n    `\\n  }),\\n  args: {\\n    selectOptions: TREE_NODE_DATA\\n  }\\n}"},{"name":"TREE_NODE_DATA","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"[\\n  {\\n    value: null,\\n    label: \'\'\\n  },\\n  {\\n    value: \'Fruit\',\\n    label: \'水果\'\\n  },\\n  { value: \'Apple\', label: \'苹果\', raw: { type: \'Hive\' } },\\n  { value: \'Banana\', label: \'香蕉\' },\\n  { value: \'Fruit loops\', label: \'果循环\' },\\n  {\\n    value: \'Vegetables\',\\n    label: \'蔬菜\'\\n  },\\n  {\\n    value: \'Green\',\\n    label: \'绿色\'\\n  },\\n  { value: \'Broccoli\', label: \'西兰花\' },\\n  { value: \'Brussel sprouts\', label: \'豆芽\' },\\n  {\\n    value: \'Orange\',\\n    label: \'橙\'\\n  },\\n  { value: \'Pumpkins\', label: \'南瓜\', raw: { type: \'PG\' } },\\n  { value: \'Carrots\', label: \'胡萝卜\' }\\n] as any"},{"name":"WithIcon","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    valueKey: \'key\',\\n    selectOptions: [\\n      {\\n        key: \'Fruit\',\\n        caption: \'水果\',\\n        icon: \'apple\'\\n      }\\n    ]\\n  }\\n}"}],"packages/angular/controls/tree-select/tree-select.component.stories.ts":[{"name":"DefaultMembers","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"FromDataSource","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<NgmMemberTreeSelectComponent>","defaultValue":"(args: NgmMemberTreeSelectComponent) => ({\\n  props: args,\\n  template: `<test-member-tree-select [label]=\\"label\\"\\n    [dataSettings]=\\"dataSettings\\"  \\n    [dimension]=\\"dimension\\"\\n    [appearance]=\\"appearance\\"\\n    [data]=\\"data\\"\\n    [options]=\\"options\\"\\n  ></test-member-tree-select>`\\n})"},{"name":"TemplateWidth","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<NgmMemberTreeSelectComponent>","defaultValue":"(args: NgmMemberTreeSelectComponent) => ({\\n  props: args,\\n  styles: [\\n    `.ngm-member-tree-select {\\n      width: 100px;\\n    }`\\n  ]\\n})"},{"name":"Width","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/tree-select/tree-select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"TemplateWidth.bind({})"}],"packages/angular/common/breadcrumb/breadcrumb.component.stories.ts":[{"name":"DensityCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/breadcrumb/breadcrumb.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `<ngm-breadcrumb-bar [steps]=\\"steps\\" displayDensity=\\"compact\\"></ngm-breadcrumb-bar>`,\\n  }),\\n  args: {\\n    steps: [\\n      {\\n        value: \'A\',\\n        label: \'Step A\',\\n        active: true\\n      },\\n      {\\n        value: \'B\',\\n        label: \'Step B\',\\n        active: false\\n      }\\n    ]\\n  }\\n}"},{"name":"DensityCosy","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/breadcrumb/breadcrumb.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `<ngm-breadcrumb-bar [steps]=\\"steps\\" displayDensity=\\"cosy\\"></ngm-breadcrumb-bar>`,\\n  }),\\n  args: {\\n    steps: [\\n      {\\n        value: \'A\',\\n        label: \'Step A\',\\n        active: true\\n      },\\n      {\\n        value: \'B\',\\n        label: \'Step B\',\\n        active: false\\n      }\\n    ]\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/breadcrumb/breadcrumb.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    steps: [\\n      {\\n        value: \'A\',\\n        label: \'Step A\',\\n        active: true\\n      },\\n      {\\n        value: \'B\',\\n        label: \'Step B\',\\n        active: false\\n      }\\n    ]\\n  }\\n}"},{"name":"Width","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/breadcrumb/breadcrumb.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `<ngm-breadcrumb-bar style=\\"width: 200px;\\" [steps]=\\"steps\\" displayDensity=\\"compact\\"></ngm-breadcrumb-bar>`,\\n  }),\\n  args: {\\n    steps: [\\n      {\\n        value: \'A\',\\n        label: \'Step A AAAAAAAAAAAA\',\\n        active: true\\n      },\\n      {\\n        value: \'B\',\\n        label: \'Step BBBBBBBBBBBBBB\',\\n        active: false\\n      }\\n    ]\\n  }\\n}"}],"packages/angular/common/input/input.component.stories.ts":[{"name":"DensityCosy","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  render: (args) => ({\\n    props: args,\\n    template: `<div displayDensity=\\"cosy\\">\\n        <ngm-input [label]=\\"label\\"></ngm-input>\\n</div>\\n`\\n  }),\\n  args: {}\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<NgmInputComponent>","defaultValue":"{\\n  component: NgmInputComponent,\\n  decorators: [\\n    applicationConfig({\\n      providers: [provideAnimations()]\\n    }),\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [OcapCoreModule]\\n    })\\n  ]\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {}\\n}"}],"packages/angular/common/display-behaviour/display-behaviour.component.stories.ts":[{"name":"DescriptionAndId","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/display-behaviour/display-behaviour.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: { \\n    option: {\\n      value: 1,\\n      label: \'A\'\\n    },\\n    displayBehaviour: DisplayBehaviour.descriptionAndId\\n  }\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/display-behaviour/display-behaviour.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: { \\n    option: {\\n      value: 1,\\n      label: \'A\'\\n    }\\n  }\\n}"}],"packages/angular/common/splitter/splitter.stories.ts":[{"name":"Horizontal","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/splitter/splitter.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"MultiplePanes","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/splitter/splitter.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"MultiplePanesTemplate.bind({})"},{"name":"MultiplePanesTemplate","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/splitter/splitter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<SplitterComponent>","defaultValue":"(args: SplitterComponent) => ({\\n  template: `<ngm-splitter [type]=\\"type\\" style=\'height: 400px;\' [style.width]=\'\\"100%\\"\'>\\n  <ngm-splitter-pane minSize=\\"50px\\">\\n      <p>\\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris in lacus eget turpis congue fermentum. Aliquam sollicitudin massa vel ullamcorper bibendum. Donec sit amet augue in justo fermentum facilisis vel quis quam. Vivamus eget iaculis nisi, vitae dignissim leo. Donec eget consectetur lacus. In viverra vehicula libero, quis dictum odio varius in. Phasellus aliquam elit et lectus ornare placerat. Aliquam vitae sapien facilisis, auctor enim quis, consectetur dui. Cras elementum velit eros, ut efficitur ante pellentesque in. Proin vulputate lacus dui, vitae imperdiet dui pharetra ac. Nunc sagittis, sapien et posuere varius, mauris justo tincidunt odio, in interdum lorem libero sed enim. Nulla placerat scelerisque felis vitae accumsan.\\n      </p>\\n  </ngm-splitter-pane>\\n  <ngm-splitter-pane size=\\"100px\\" minSize=\\"50px\\">\\n      <p>\\n          Duis auctor, diam id vehicula consequat, lacus tellus molestie magna, sed varius nisi quam eget nisl. Donec dignissim mi et elementum laoreet. Nam dignissim quis justo eu fermentum. Proin vestibulum, neque quis elementum tincidunt, nibh mi gravida purus, eget volutpat ipsum magna in orci. Donec id mauris vitae lectus molestie blandit. Praesent non quam interdum, efficitur lacus nec, gravida mauris. Ut ac ante maximus, ultrices turpis a, aliquam magna. Praesent blandit ante ut nulla malesuada lobortis. Praesent a lobortis justo. Morbi congue, dui sed ornare faucibus, turpis felis vulputate arcu, lobortis posuere sem leo eget risus. Duis risus augue, dignissim ac tincidunt a, ullamcorper rutrum nisl. Ut ut ipsum vel purus viverra dapibus.\\n      </p>\\n  </ngm-splitter-pane>\\n  <ngm-splitter-pane size=\\"100px\\" minSize=\\"50px\\">\\n    <p>\\n        Duis auctor, diam id vehicula consequat, lacus tellus molestie magna, sed varius nisi quam eget nisl. Donec dignissim mi et elementum laoreet. Nam dignissim quis justo eu fermentum. Proin vestibulum, neque quis elementum tincidunt, nibh mi gravida purus, eget volutpat ipsum magna in orci. Donec id mauris vitae lectus molestie blandit. Praesent non quam interdum, efficitur lacus nec, gravida mauris. Ut ac ante maximus, ultrices turpis a, aliquam magna. Praesent blandit ante ut nulla malesuada lobortis. Praesent a lobortis justo. Morbi congue, dui sed ornare faucibus, turpis felis vulputate arcu, lobortis posuere sem leo eget risus. Duis risus augue, dignissim ac tincidunt a, ullamcorper rutrum nisl. Ut ut ipsum vel purus viverra dapibus.\\n    </p>\\n  </ngm-splitter-pane>\\n</ngm-splitter>`,\\n  props: {\\n    ...args,\\n  },\\n  styles: [`.ngm-splitter-pane {overflow: auto;}`]\\n})"},{"name":"NestedPanes","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/splitter/splitter.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"NestedPanesTemplate.bind({})"},{"name":"NestedPanesTemplate","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/splitter/splitter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<SplitterComponent>","defaultValue":"(args: SplitterComponent) => ({\\n  template: `<ngm-splitter [type]=\\"type\\" style=\'height: 400px;\' [style.width]=\'\\"100%\\"\'>\\n  <ngm-splitter-pane>\\n      <p>\\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris in lacus eget turpis congue fermentum. Aliquam sollicitudin massa vel ullamcorper bibendum. Donec sit amet augue in justo fermentum facilisis vel quis quam. Vivamus eget iaculis nisi, vitae dignissim leo. Donec eget consectetur lacus. In viverra vehicula libero, quis dictum odio varius in. Phasellus aliquam elit et lectus ornare placerat. Aliquam vitae sapien facilisis, auctor enim quis, consectetur dui. Cras elementum velit eros, ut efficitur ante pellentesque in. Proin vulputate lacus dui, vitae imperdiet dui pharetra ac. Nunc sagittis, sapien et posuere varius, mauris justo tincidunt odio, in interdum lorem libero sed enim. Nulla placerat scelerisque felis vitae accumsan.\\n      </p>\\n  </ngm-splitter-pane>\\n  <ngm-splitter-pane>\\n    <ngm-splitter [type]=\\"type\\" style=\'height: 100%;\' [style.width]=\'\\"100%\\"\'>\\n      <ngm-splitter-pane>\\n          <p>\\n              Duis auctor, diam id vehicula consequat, lacus tellus molestie magna, sed varius nisi quam eget nisl. Donec dignissim mi et elementum laoreet. Nam dignissim quis justo eu fermentum. Proin vestibulum, neque quis elementum tincidunt, nibh mi gravida purus, eget volutpat ipsum magna in orci. Donec id mauris vitae lectus molestie blandit. Praesent non quam interdum, efficitur lacus nec, gravida mauris. Ut ac ante maximus, ultrices turpis a, aliquam magna. Praesent blandit ante ut nulla malesuada lobortis. Praesent a lobortis justo. Morbi congue, dui sed ornare faucibus, turpis felis vulputate arcu, lobortis posuere sem leo eget risus. Duis risus augue, dignissim ac tincidunt a, ullamcorper rutrum nisl. Ut ut ipsum vel purus viverra dapibus.\\n          </p>\\n      </ngm-splitter-pane>\\n      <ngm-splitter-pane>\\n        <p>\\n            Duis auctor, diam id vehicula consequat, lacus tellus molestie magna, sed varius nisi quam eget nisl. Donec dignissim mi et elementum laoreet. Nam dignissim quis justo eu fermentum. Proin vestibulum, neque quis elementum tincidunt, nibh mi gravida purus, eget volutpat ipsum magna in orci. Donec id mauris vitae lectus molestie blandit. Praesent non quam interdum, efficitur lacus nec, gravida mauris. Ut ac ante maximus, ultrices turpis a, aliquam magna. Praesent blandit ante ut nulla malesuada lobortis. Praesent a lobortis justo. Morbi congue, dui sed ornare faucibus, turpis felis vulputate arcu, lobortis posuere sem leo eget risus. Duis risus augue, dignissim ac tincidunt a, ullamcorper rutrum nisl. Ut ut ipsum vel purus viverra dapibus.\\n        </p>\\n      </ngm-splitter-pane>\\n    </ngm-splitter>\\n  </ngm-splitter-pane>\\n</ngm-splitter>`,\\n  props: {\\n    ...args,\\n  },\\n  styles: [`.ngm-splitter-pane {overflow: auto;}`]\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/splitter/splitter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<SplitterComponent>","defaultValue":"(args: SplitterComponent) => ({\\n  template: `<ngm-splitter [type]=\\"type\\" style=\'height: 100vh;\' [style.width]=\'\\"100%\\"\'>\\n  <ngm-splitter-pane>\\n      <p>\\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris in lacus eget turpis congue fermentum. Aliquam sollicitudin massa vel ullamcorper bibendum. Donec sit amet augue in justo fermentum facilisis vel quis quam. Vivamus eget iaculis nisi, vitae dignissim leo. Donec eget consectetur lacus. In viverra vehicula libero, quis dictum odio varius in. Phasellus aliquam elit et lectus ornare placerat. Aliquam vitae sapien facilisis, auctor enim quis, consectetur dui. Cras elementum velit eros, ut efficitur ante pellentesque in. Proin vulputate lacus dui, vitae imperdiet dui pharetra ac. Nunc sagittis, sapien et posuere varius, mauris justo tincidunt odio, in interdum lorem libero sed enim. Nulla placerat scelerisque felis vitae accumsan.\\n      </p>\\n  </ngm-splitter-pane>\\n  <ngm-splitter-pane>\\n      <p>\\n          Duis auctor, diam id vehicula consequat, lacus tellus molestie magna, sed varius nisi quam eget nisl. Donec dignissim mi et elementum laoreet. Nam dignissim quis justo eu fermentum. Proin vestibulum, neque quis elementum tincidunt, nibh mi gravida purus, eget volutpat ipsum magna in orci. Donec id mauris vitae lectus molestie blandit. Praesent non quam interdum, efficitur lacus nec, gravida mauris. Ut ac ante maximus, ultrices turpis a, aliquam magna. Praesent blandit ante ut nulla malesuada lobortis. Praesent a lobortis justo. Morbi congue, dui sed ornare faucibus, turpis felis vulputate arcu, lobortis posuere sem leo eget risus. Duis risus augue, dignissim ac tincidunt a, ullamcorper rutrum nisl. Ut ut ipsum vel purus viverra dapibus.\\n      </p>\\n  </ngm-splitter-pane>\\n</ngm-splitter>`,\\n  props: {\\n    ...args,\\n  }\\n})"},{"name":"Vertical","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/splitter/splitter.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"}],"packages/angular/controls/value-help/value-help.component.stories.ts":[{"name":"MemberSourceFromDimension","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/value-help/value-help.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/value-help/value-help.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/value-help/value-help.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<NgmValueHelpComponent>","defaultValue":"(args: NgmValueHelpComponent) => ({\\n  props: args\\n})"}],"packages/angular/.storybook/preview.ts":[{"name":"preview","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/.storybook/preview.ts","deprecated":false,"deprecationMessage":"","type":"Preview","defaultValue":"{\\n  parameters: {\\n    docs: {\\n      toc: true, // 👈 Enables the table of contents\\n    },\\n  },\\n}"}],"packages/angular/controls/member-table/member-table.component.stories.ts":[{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-table/member-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Searchable","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-table/member-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"SourceFrom","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-table/member-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/controls/member-table/member-table.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<NgmMemberTableComponent<>>","defaultValue":"(args: NgmMemberTableComponent<unknown>) => ({\\n  props: args\\n})"}],"packages/angular/copilot/stories/not-enabled.stories.ts":[{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/copilot/stories/not-enabled.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    title: \'Primary\',\\n    welcomeTitle: \'Welcome to My AI Copilot\',\\n    welcomeSubTitle: \'Your AI Copilot\'\\n  }\\n}"}],"packages/angular/core/directives/appearance.stories.ts":[{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/core/directives/appearance.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: ButtonGroupDirective) => ({\\n    template: `\\n    <mat-slide-toggle>Slide me!</mat-slide-toggle>\\n  \\n  <div >\\n  <div >\\n    <mat-icon>share</mat-icon>\\n    <mat-icon displayDensity=\\"cosy\\">share</mat-icon>\\n    <mat-icon displayDensity=\\"compact\\">share</mat-icon>\\n  </div>\\n  \\n  <div>\\n    <button mat-icon-button ngmAppearance=\\"danger\\">\\n      <mat-icon>share</mat-icon>\\n    </button>\\n    <button mat-icon-button ngmAppearance=\\"acrylic\\">\\n      <mat-icon>share</mat-icon>\\n    </button>\\n    <button mat-icon-button displayDensity=\\"cosy\\">\\n      <mat-icon>share</mat-icon>\\n    </button>\\n    <button mat-icon-button displayDensity=\\"compact\\">\\n      <mat-icon>share</mat-icon>\\n    </button>\\n  </div>\\n  \\n  <div>\\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" ngmAppearance=\\"color\\" color=\\"primary\\">\\n      <mat-button-toggle value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" ngmAppearance=\\"color\\" color=\\"accent\\">\\n      <mat-button-toggle value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" displayDensity=\\"compact\\"\\n      ngmAppearance=\\"color\\" color=\\"accent\\"\\n      [value]=\\"\'italic\'\\">\\n      <mat-button-toggle disableRipple value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle disableRipple value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle disableRipple value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" multiple=\\"true\\" displayDensity=\\"compact\\"\\n      ngmAppearance=\\"color\\" color=\\"accent\\">\\n      <mat-button-toggle disableRipple value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle disableRipple value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle disableRipple value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" vertical ngmAppearance=\\"color\\" color=\\"primary\\">\\n      <mat-button-toggle value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" vertical multiple=\\"true\\" displayDensity=\\"compact\\"\\n      ngmAppearance=\\"color\\" color=\\"accent\\">\\n      <mat-button-toggle disableRipple value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle disableRipple value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle disableRipple value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" ngmAppearance=\\"outline\\" color=\\"primary\\">\\n      <mat-button-toggle value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  \\n    <mat-button-toggle-group name=\\"fontStyle\\" aria-label=\\"Font Style\\" ngmAppearance=\\"outline\\" color=\\"primary\\" displayDensity=\\"compact\\">\\n      <mat-button-toggle value=\\"bold\\">Bold</mat-button-toggle>\\n      <mat-button-toggle value=\\"italic\\">Italic</mat-button-toggle>\\n      <mat-button-toggle value=\\"underline\\">Underline</mat-button-toggle>\\n    </mat-button-toggle-group>\\n  </div>\\n  \\n  <div>\\n    <mat-chip-list aria-label=\\"Fish selection\\" >\\n      <mat-chip>One fish</mat-chip>\\n      <mat-chip>Two fish</mat-chip>\\n      <mat-chip color=\\"primary\\" selected>Primary fish</mat-chip>\\n      <mat-chip color=\\"accent\\" selected>Accent fish</mat-chip>\\n      <mat-chip color=\\"warn\\" selected>warn fish</mat-chip>\\n    </mat-chip-list>\\n  \\n    <mat-chip-list aria-label=\\"Fish selection\\" ngmAppearance=\\"outline\\">\\n      <mat-chip>One fish</mat-chip>\\n      <mat-chip>Two fish</mat-chip>\\n      <mat-chip color=\\"primary\\" selected>Primary fish</mat-chip>\\n      <mat-chip color=\\"accent\\" selected>Accent fish</mat-chip>\\n      <mat-chip color=\\"warn\\" selected>warn fish</mat-chip>\\n    </mat-chip-list>\\n  \\n    <mat-chip-list aria-label=\\"Fish selection\\" ngmAppearance=\\"dashed\\">\\n      <mat-chip>One fish</mat-chip>\\n      <mat-chip>Two fish</mat-chip>\\n      <mat-chip color=\\"primary\\" selected>Primary fish</mat-chip>\\n      <mat-chip color=\\"accent\\" selected>Accent fish</mat-chip>\\n      <mat-chip color=\\"warn\\" selected>warn fish</mat-chip>\\n    </mat-chip-list>\\n  \\n    <mat-chip-list aria-label=\\"Fish selection\\" ngmAppearance=\\"outline\\" displayDensity=\\"compact\\">\\n      <mat-chip>One fish</mat-chip>\\n      <mat-chip>Two fish</mat-chip>\\n      <mat-chip color=\\"primary\\" selected>Primary fish</mat-chip>\\n      <mat-chip color=\\"accent\\" selected>Accent fish</mat-chip>\\n      <mat-chip color=\\"warn\\" selected>warn fish</mat-chip>\\n    </mat-chip-list>\\n  </div>\\n  \\n  <div fxLayout=\\"row wrap\\" fxLayoutAlign=\\"space-between center\\" >\\n    <div ngmButtonGroup>\\n      <button mat-button>Click me!</button>\\n      <button mat-raised-button color=\\"primary\\">Click me!</button>\\n    </div>\\n  \\n    <div ngmButtonGroup>\\n      <button mat-flat-button>Click me!</button>\\n      <button mat-raised-button color=\\"primary\\">Click me!</button>\\n      <button mat-raised-button color=\\"accent\\">Click me!</button>\\n    </div>\\n  \\n    <div ngmButtonGroup displayDensity=\\"cosy\\">\\n      <button mat-flat-button displayDensity=\\"cosy\\">Click me!</button>\\n      <button mat-raised-button color=\\"primary\\" displayDensity=\\"cosy\\">Click me!</button>\\n      <button mat-raised-button color=\\"accent\\" displayDensity=\\"cosy\\">Click me!</button>\\n    </div>\\n  \\n    <div ngmButtonGroup displayDensity=\\"compact\\">\\n      <button mat-flat-button displayDensity=\\"compact\\">Click me!</button>\\n      <button mat-raised-button color=\\"primary\\" displayDensity=\\"compact\\">Click me!</button>\\n      <button mat-raised-button color=\\"accent\\" displayDensity=\\"compact\\">Click me!</button>\\n    </div>\\n  </div>\\n  \\n  <div fxLayout=\\"row wrap\\" fxLayoutAlign=\\"space-between center\\" >\\n    <button mat-button color=\\"accent\\" [loading]=\\"true\\">Accent</button>\\n  \\n    <button mat-flat-button [loading]=\\"true\\">Confortable</button>\\n    <button mat-flat-button displayDensity=\\"cosy\\" [loading]=\\"true\\">Cosy</button>\\n    <button mat-flat-button displayDensity=\\"compact\\" [loading]=\\"true\\">Compact</button>\\n  \\n    <button mat-raised-button color=\\"primary\\" [loading]=\\"true\\">Primary</button>\\n    <button mat-raised-button color=\\"accent\\" [loading]=\\"true\\">Accent</button>\\n  \\n    <button mat-stroked-button color=\\"accent\\" [loading]=\\"true\\">Accent</button>\\n  \\n    <button mat-icon-button [loading]=\\"true\\" color=\\"primary\\">\\n      <mat-icon>more_vert</mat-icon>\\n    </button>\\n    <button mat-fab [loading]=\\"true\\" color=\\"primary\\">\\n      <mat-icon>delete</mat-icon>\\n    </button>\\n    <button mat-mini-fab [loading]=\\"true\\" color=\\"primary\\">\\n      <mat-icon>menu</mat-icon>\\n    </button>\\n  </div>\\n  \\n  <div fxLayout=\\"row wrap\\" fxLayoutAlign=\\"space-between center\\" >\\n    <div ngmButtonGroup>\\n      <button mat-button>Click me!</button>\\n      <button mat-raised-button color=\\"accent\\" [loading]=\\"true\\">Click me!</button>\\n    </div>\\n  </div>\\n  </div>\\n    `,\\n    props: args\\n  }),\\n  args: {\\n    text: \'Click me!\',\\n    padding: 10,\\n    disabled: true\\n  }\\n}"}],"packages/angular/core/directives/density.stories.ts":[{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/core/directives/density.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({\\n  args: {}\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/core/directives/density.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(args: any) => ({\\n  props: args,\\n  template: `\\n<div>\\n  <mat-icon>share</mat-icon>\\n  <mat-icon displayDensity=\\"cosy\\">share</mat-icon>\\n  <mat-icon displayDensity=\\"compact\\">share</mat-icon>\\n</div>\\n\\n<div>\\n  <button mat-icon-button>\\n    <mat-icon>share</mat-icon>\\n  </button>\\n  <button mat-icon-button displayDensity=\\"cosy\\">\\n    <mat-icon>share</mat-icon>\\n  </button>\\n  <button mat-icon-button displayDensity=\\"compact\\">\\n    <mat-icon>share</mat-icon>\\n  </button>\\n</div>\\n\\n<div displayDensity=\\"comfort\\">\\n  <mat-checkbox>Check me!</mat-checkbox>\\n  <ngm-search></ngm-search>\\n  <mat-chip-grid #chipGrid aria-label=\\"Fruit selection\\">\\n    <mat-chip-row>fruit\\n      <button matChipRemove [attr.aria-label]=\\"\'remove \' + fruit\\">\\n        <mat-icon>cancel</mat-icon>\\n      </button>\\n    </mat-chip-row>\\n  </mat-chip-grid>\\n</div>\\n<div displayDensity=\\"cosy\\">\\n  <mat-checkbox>Check me!</mat-checkbox>\\n  <ngm-search></ngm-search>\\n  <mat-chip-grid #chipGrid aria-label=\\"Fruit selection\\">\\n    <mat-chip-row>fruit\\n      <button matChipRemove [attr.aria-label]=\\"\'remove \' + fruit\\">\\n        <mat-icon>cancel</mat-icon>\\n      </button>\\n    </mat-chip-row>\\n  </mat-chip-grid>\\n</div>\\n<div displayDensity=\\"compact\\">\\n  <mat-checkbox>Check me!</mat-checkbox>\\n  <ngm-search></ngm-search>\\n  <mat-chip-grid #chipGrid aria-label=\\"Fruit selection\\">\\n    <mat-chip-row>fruit\\n      <button matChipRemove [attr.aria-label]=\\"\'remove \' + fruit\\">\\n        <mat-icon>cancel</mat-icon>\\n      </button>\\n    </mat-chip-row>\\n  </mat-chip-grid>\\n</div>\\n  `\\n})"}],"packages/angular/entity/entity-schema/entity-schema.component.stories.ts":[{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  args: {\\n    dataSettings: {\\n      dataSource: \'Sales\',\\n      entitySet: \'SalesOrder\'\\n    }\\n  }\\n}"},{"name":"SelectedHierarchy","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<NgmEntitySchemaComponent>","defaultValue":"(args: NgmEntitySchemaComponent) => ({\\n  props: args\\n})"}],"packages/angular/common/search/search.component.stories.ts":[{"name":"Search","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/search/search.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/search/search.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(args: any) => ({\\n  props: args\\n})"}],"packages/angular/common/select/mat/select.component.stories.ts":[{"name":"Select","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/mat/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"SelectCompact","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/mat/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"SelectCosy","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/mat/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"SelectDisabled","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/mat/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"SelectDisplayBehaviour","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/mat/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"SelectMultiple","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/mat/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"SelectNoSelectOptions","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/mat/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"SelectValidators","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/mat/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"TemplateError.bind({})"},{"name":"SelectVirtualScroll","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/mat/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/mat/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<any>","defaultValue":"(args: any) => ({\\n  props: args,\\n  template: `<test-select [label]=\\"label\\" [selectOptions]=\\"selectOptions\\" [model]=\\"model\\" [multiple]=\\"multiple\\" [virtualScroll]=\\"virtualScroll\\"\\n  [displayBehaviour]=\\"displayBehaviour\\" [displayDensity]=\\"displayDensity\\"\\n  [disabled]=\\"disabled\\"\\n  ></test-select>`,\\n  styles: [``]\\n})"},{"name":"TemplateError","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/mat/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<any>","defaultValue":"(args: any) => ({\\n  props: args,\\n  template: `<test-select [label]=\\"label\\"\\n    [selectOptions]=\\"selectOptions\\"\\n    [model]=\\"model\\"\\n    [multiple]=\\"multiple\\"\\n    [virtualScroll]=\\"virtualScroll\\"\\n    [displayBehaviour]=\\"displayBehaviour\\"\\n    [displayDensity]=\\"displayDensity\\"\\n    [disabled]=\\"disabled\\"\\n    [validators]=\\"validators\\"\\n  ></test-select>`,\\n  styles: [``]\\n})"},{"name":"TREE_NODE_DATA","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/select/mat/select.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"[\\n  {\\n    value: \'Fruit\',\\n    label: \'水果\'\\n  },\\n  { value: \'Apple\', label: \'苹果\', raw: { type: \'Hive\' } },\\n  { value: \'Banana\', label: \'香蕉\' },\\n  { value: \'Fruit loops\', label: \'果循环\' },\\n  {\\n    value: \'Vegetables\',\\n    label: \'蔬菜\'\\n  },\\n  {\\n    value: \'Green\',\\n    label: \'绿色\'\\n  },\\n  { value: \'Broccoli\', label: \'西兰花\' },\\n  { value: \'Brussel sprouts\', label: \'豆芽\' },\\n  {\\n    value: \'Orange\',\\n    label: \'橙\'\\n  },\\n  { value: \'Pumpkins\', label: \'南瓜\', raw: { type: \'PG\' } },\\n  { value: \'Carrots\', label: \'胡萝卜\' }\\n] as any"}],"packages/angular/common/split-button/split-button.component.stories.ts":[{"name":"SplitButton","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/split-button/split-button.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"packages/angular/common/split-button/split-button.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<SplitButtonComponent>","defaultValue":"(args: SplitButtonComponent) => ({\\n  props: args,\\n  styles: [``]\\n})"}]},"groupedFunctions":{},"groupedEnumerations":{},"groupedTypeAliases":{"packages/angular/analytical-grid/analytical-grid.component.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<AnalyticalGridComponent<>>","file":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/common/input/input.component.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmInputComponent>","file":"packages/angular/common/input/input.component.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/copilot/stories/chat.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmCopilotChatComponent>","file":"packages/angular/copilot/stories/chat.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"packages/angular/common/select/select/select.component.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<NgmSelectComponent>","file":"packages/angular/common/select/select/select.component.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}]}},"routes":[],"coverage":{"count":0,"status":"low","files":[{"filePath":"packages/angular/.storybook/main.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"config","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/.storybook/preview.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"preview","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-card/analytical-card.component.stories.ts","type":"class","linktype":"classe","name":"CustomLoader","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"packages/angular/analytical-card/analytical-card.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Appearance","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-card/analytical-card.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ChartTypes","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-card/analytical-card.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DrillDimensions","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-card/analytical-card.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Empty","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-card/analytical-card.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Error","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-card/analytical-card.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"HideButtons","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-card/analytical-card.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Loading","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-card/analytical-card.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-card/analytical-card.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SetOptionError","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"component","linktype":"component","name":"GridsComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"A1Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"A2Sticky","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"A3StickyGrid","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DensityCompact","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DisplayHierarchy","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Error","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Loading","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"MultipleMeasures","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Paging","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"PagingCompact","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"PagingError","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"render","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ShowToolbar","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Sortable","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/analytical-grid/analytical-grid.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SwitchTemplate","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/breadcrumb/breadcrumb.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DensityCompact","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/breadcrumb/breadcrumb.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DensityCosy","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/breadcrumb/breadcrumb.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/breadcrumb/breadcrumb.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Width","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/display-behaviour/display-behaviour.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DescriptionAndId","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/display-behaviour/display-behaviour.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/input/input.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DensityCosy","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/input/input.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/input/input.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/resizer/resizer.directive.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Bottom","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/resizer/resizer.directive.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"CardTemplate","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/resizer/resizer.directive.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Left","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/resizer/resizer.directive.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/resizer/resizer.directive.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/resizer/resizer.directive.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Top","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/search/search.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Search","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/search/search.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/select/mat/select.component.stories.ts","type":"component","linktype":"component","name":"TestSelectComponent","coveragePercent":0,"coverageCount":"0/17","status":"low"},{"filePath":"packages/angular/common/select/mat/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Select","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/select/mat/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SelectCompact","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/select/mat/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SelectCosy","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/select/mat/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SelectDisabled","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/select/mat/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SelectDisplayBehaviour","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/select/mat/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SelectMultiple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/select/mat/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SelectNoSelectOptions","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/select/mat/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SelectValidators","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/select/mat/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SelectVirtualScroll","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/select/mat/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/select/mat/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"TemplateError","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/select/mat/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"TREE_NODE_DATA","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/select/select/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/select/select/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Density","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/select/select/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/select/select/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Suffix","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/select/select/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SuffixSearchable","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/select/select/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"TREE_NODE_DATA","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/select/select/select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"WithIcon","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/split-button/split-button.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SplitButton","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/split-button/split-button.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/splitter/splitter.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Horizontal","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/splitter/splitter.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"MultiplePanes","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/splitter/splitter.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"MultiplePanesTemplate","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/splitter/splitter.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"NestedPanes","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/splitter/splitter.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"NestedPanesTemplate","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/splitter/splitter.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/splitter/splitter.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Vertical","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tabs/tabs.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"CloseButton","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tabs/tabs.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tabs/tabs.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"component","linktype":"component","name":"TestTreeSelectComponent","coveragePercent":0,"coverageCount":"0/19","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ATreeSelect","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ATreeSelectDensityCompact","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ATreeSelectDensityCosy","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ATreeSelectMultiple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ATreeSelectMultipleSearchable","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ATreeSelectVirtualScroll","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"BTreeSelectMultipleDensityCompact","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"CAutocomplete","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"CAutocompleteDensityCompact","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"CAutocompleteDensityCosy","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DAutocompleteMaxTag","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DAutocompleteMultiple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Disabled","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DisabledTreeView","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"EAutocompleteVirtualScroll","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"EAutocompleteVirtualScrollWidth","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"FAutocompleteMultipleVirtualScroll","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"GTreeSelectDisplayBehaviour","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"HTreeSelectMultipleBehaviour","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"IAutocompleteDisplayBehaviour","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"JAutocompleteMultipleBehaviour","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"KTreeViewer","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"KTreeViewerColorAccent","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"KTreeViewerColorPrimary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"KTreeViewerCompact","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"KTreeViewerSearchable","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"LAutocompleteWidth","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"LWidth","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"LWidthNGT","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"TemplateWidth","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"TREE_NODE_DATA","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"TreeSelectInitialLevel","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"TreeSelectMultipleValidators","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"TreeSelectValidators","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"TreeSelectWithNoSelectOptions","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-table/tree-table.component.stories.ts","type":"component","linktype":"component","name":"TestCellTemplate","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"packages/angular/common/tree-table/tree-table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"CellTemplate","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-table/tree-table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DensityCompact","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-table/tree-table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Grid","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-table/tree-table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"InitialLevel","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-table/tree-table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Pipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-table/tree-table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-table/tree-table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"StickyHeaders","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-table/tree-table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Striped","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-table/tree-table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-table/tree-table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"TemplateTemplate","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/common/tree-table/tree-table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"TREE_NODE_DATA","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/member-list/member-list.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Appearance","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/member-list/member-list.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/member-list/member-list.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SourceFrom","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/member-list/member-list.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/member-table/member-table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/member-table/member-table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Searchable","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/member-table/member-table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SourceFrom","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/member-table/member-table.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/member-tree/member-tree.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Appearance","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/member-tree/member-tree.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/member-tree/member-tree.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SourceFrom","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/member-tree/member-tree.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"AppearanceOutline","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DensityCompact","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Disabled","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Prefix","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"render","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SelectionTypeMultiple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Suffix","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Width","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/smart-filter/smart-filter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"WidthCompact","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/smart-select/smart-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"AutoActiveFirst","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/smart-select/smart-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DensityCompact","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/smart-select/smart-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DensityCosy","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/smart-select/smart-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Multiple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/smart-select/smart-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/smart-select/smart-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/smart-select/smart-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"UserData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/tree-select/tree-select.component.stories.ts","type":"component","linktype":"component","name":"TestMemberTreeSelectComponent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"packages/angular/controls/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DefaultMembers","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"FromDataSource","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"TemplateWidth","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/tree-select/tree-select.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Width","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/value-help/value-help.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"MemberSourceFromDimension","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/value-help/value-help.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/controls/value-help/value-help.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/copilot/stories/chat.stories.ts","type":"class","linktype":"classe","name":"StorybookCopilotEngine","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"packages/angular/copilot/stories/chat.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"CustomEngine","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/copilot/stories/chat.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/copilot/stories/chat.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Size","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/copilot/stories/not-enabled.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/core/directives/appearance.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/core/directives/density.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/core/directives/density.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","type":"component","linktype":"component","name":"DragComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","type":"class","linktype":"classe","name":"CustomLoader","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SelectedHierarchy","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/entity/entity-schema/entity-schema.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter/parameter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"AVAILABLE_MEMBERS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter/parameter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ParameterInput","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter/parameter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ParameterInputNumber","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter/parameter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ParameterInputString","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter/parameter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ParameterSelect","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter/parameter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ParameterSelectDensity","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter/parameter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ParameterSelectMultiple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter/parameter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter/parameter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"PrimaryCompact","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter/parameter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"PrimaryMultiple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter/parameter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Slider","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter/parameter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SliderVertical","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"packages/angular/parameter/parameter/parameter.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"}]}}');(0,angular.P)(documentation_namespaceObject);const _storybook_preview={parameters:{docs:{toc:!0}}}},"./storybook-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),external_STORYBOOK_MODULE_CHANNELS_=__webpack_require__("@storybook/channels"),asyncToGenerator=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js");const pipeline=x=>x(),importers=[function(){var _ref=(0,asyncToGenerator.Z)((function*(path){if(!/^\.[\\/](?:packages\/angular(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.mdx)$/.exec(path))return;const pathRemainder=path.substring(19);return __webpack_require__("./packages/angular lazy recursive ^\\.\\/.*$ include: (?:\\/packages\\/angular(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$")("./"+pathRemainder)}));return function(_x){return _ref.apply(this,arguments)}}(),function(){var _ref2=(0,asyncToGenerator.Z)((function*(path){if(!/^\.[\\/](?:packages\/angular(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.stories\.(js|jsx|ts|tsx|mdx))$/.exec(path))return;const pathRemainder=path.substring(19);return __webpack_require__("./packages/angular lazy recursive ^\\.\\/.*$ include: (?:\\/packages\\/angular(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx%7Cmdx))$")("./"+pathRemainder)}));return function(_x2){return _ref2.apply(this,arguments)}}()];function _importFn(){return(_importFn=(0,asyncToGenerator.Z)((function*(path){for(let i=0;i<importers.length;i++){const moduleExports=yield pipeline((()=>importers[i](path)));if(moduleExports)return moduleExports}}))).apply(this,arguments)}const channel=(0,external_STORYBOOK_MODULE_CHANNELS_.createBrowserChannel)({page:"preview"});external_STORYBOOK_MODULE_PREVIEW_API_.addons.setChannel(channel),"DEVELOPMENT"===external_STORYBOOK_MODULE_GLOBAL_.global.CONFIG_TYPE&&(window.__STORYBOOK_SERVER_CHANNEL__=channel);const preview=new external_STORYBOOK_MODULE_PREVIEW_API_.PreviewWeb;window.__STORYBOOK_PREVIEW__=preview,window.__STORYBOOK_STORY_STORE__=preview.storyStore,window.__STORYBOOK_ADDONS_CHANNEL__=channel,window.__STORYBOOK_CLIENT_API__=new external_STORYBOOK_MODULE_PREVIEW_API_.ClientApi({storyStore:preview.storyStore}),preview.initialize({importFn:function importFn(_x3){return _importFn.apply(this,arguments)},getProjectAnnotations:()=>(0,external_STORYBOOK_MODULE_PREVIEW_API_.composeConfigs)([__webpack_require__("./node_modules/@storybook/angular/dist/client/preview-prod.js"),__webpack_require__("./node_modules/@storybook/angular/dist/client/docs/config.js"),__webpack_require__("./node_modules/@storybook/angular/dist/client/config.js"),__webpack_require__("./node_modules/@storybook/addon-docs/dist/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/actions/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/backgrounds/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/measure/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/outline/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/highlight/preview.mjs"),__webpack_require__("./packages/angular/.storybook/preview.ts")])})},"./packages/angular lazy recursive ^\\.\\/.*$ include: (?:\\/packages\\/angular(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./controls/smart-filter/smart-filter.mdx":["./packages/angular/controls/smart-filter/smart-filter.mdx",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,8213,5448,5149,9247,717,6607,3343,8380,7927,1449,1984,5684,3740,5091,7336,7637,6716,2597],"./src/tutorial/intro.stories.mdx":["./packages/angular/src/tutorial/intro.stories.mdx",5684,6516,4438]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}));var ids=map[req],id=ids[0];return Promise.all(ids.slice(1).map(__webpack_require__.e)).then((()=>__webpack_require__(id)))}webpackAsyncContext.keys=()=>Object.keys(map),webpackAsyncContext.id="./packages/angular lazy recursive ^\\.\\/.*$ include: (?:\\/packages\\/angular(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$",module.exports=webpackAsyncContext},"./packages/angular lazy recursive ^\\.\\/.*$ include: (?:\\/packages\\/angular(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx%7Cmdx))$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./analytical-card/analytical-card.component.stories":["./packages/angular/analytical-card/analytical-card.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,8213,5448,5149,9247,717,6607,3343,7927,9159,1456,6111,1612,5091,7336,7637,4683],"./analytical-card/analytical-card.component.stories.ts":["./packages/angular/analytical-card/analytical-card.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,8213,5448,5149,9247,717,6607,3343,7927,9159,1456,6111,1612,5091,7336,7637,4683],"./analytical-grid/analytical-grid.component.stories":["./packages/angular/analytical-grid/analytical-grid.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,8213,5448,5149,9247,717,6607,3343,8380,7927,9257,9159,1456,4656,5091,7336,7637,7237],"./analytical-grid/analytical-grid.component.stories.ts":["./packages/angular/analytical-grid/analytical-grid.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,8213,5448,5149,9247,717,6607,3343,8380,7927,9257,9159,1456,4656,5091,7336,7637,7237],"./common/breadcrumb/breadcrumb.component.stories":["./packages/angular/common/breadcrumb/breadcrumb.component.stories.ts",3875,2504,6140,5180,1354,5091,3698],"./common/breadcrumb/breadcrumb.component.stories.ts":["./packages/angular/common/breadcrumb/breadcrumb.component.stories.ts",3875,2504,6140,5180,1354,5091,3698],"./common/display-behaviour/display-behaviour.component.stories":["./packages/angular/common/display-behaviour/display-behaviour.component.stories.ts",3875,2504,6140,5180,5597,5091,7336,1060],"./common/display-behaviour/display-behaviour.component.stories.ts":["./packages/angular/common/display-behaviour/display-behaviour.component.stories.ts",3875,2504,6140,5180,5597,5091,7336,1060],"./common/input/input.component.stories":["./packages/angular/common/input/input.component.stories.ts",3875,2504,6140,5449,5894,1824,6530,6346,538,5091,5327],"./common/input/input.component.stories.ts":["./packages/angular/common/input/input.component.stories.ts",3875,2504,6140,5449,5894,1824,6530,6346,538,5091,5327],"./common/resizer/resizer.directive.stories":["./packages/angular/common/resizer/resizer.directive.stories.ts",3875,2504,5449,8213,9159,8680,8895],"./common/resizer/resizer.directive.stories.ts":["./packages/angular/common/resizer/resizer.directive.stories.ts",3875,2504,5449,8213,9159,8680,8895],"./common/search/search.component.stories":["./packages/angular/common/search/search.component.stories.ts",3875,2504,5894,6530,6346,417],"./common/search/search.component.stories.ts":["./packages/angular/common/search/search.component.stories.ts",3875,2504,5894,6530,6346,417],"./common/select/mat/select.component.stories":["./packages/angular/common/select/mat/select.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,5597,5997,538,5448,5091,7336,9315],"./common/select/mat/select.component.stories.ts":["./packages/angular/common/select/mat/select.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,5597,5997,538,5448,5091,7336,9315],"./common/select/select/select.component.stories":["./packages/angular/common/select/select/select.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,5448,5091,7336,110],"./common/select/select/select.component.stories.ts":["./packages/angular/common/select/select/select.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,5448,5091,7336,110],"./common/split-button/split-button.component.stories":["./packages/angular/common/split-button/split-button.component.stories.ts",3875,2504,6140,5180,1354,5091,2174],"./common/split-button/split-button.component.stories.ts":["./packages/angular/common/split-button/split-button.component.stories.ts",3875,2504,6140,5180,1354,5091,2174],"./common/splitter/splitter.stories":["./packages/angular/common/splitter/splitter.stories.ts",3875,5449,8213,8127],"./common/splitter/splitter.stories.ts":["./packages/angular/common/splitter/splitter.stories.ts",3875,5449,8213,8127],"./common/tabs/tabs.stories":["./packages/angular/common/tabs/tabs.stories.ts",3875,2504,6140,5180,1354,5449,1824,7927,6008,5091,9554],"./common/tabs/tabs.stories.ts":["./packages/angular/common/tabs/tabs.stories.ts",3875,2504,6140,5180,1354,5449,1824,7927,6008,5091,9554],"./common/tree-select/tree-select.component.stories":["./packages/angular/common/tree-select/tree-select.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,5448,5149,6607,5091,7336,7363],"./common/tree-select/tree-select.component.stories.ts":["./packages/angular/common/tree-select/tree-select.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,5448,5149,6607,5091,7336,7363],"./common/tree-table/tree-table.component.stories":["./packages/angular/common/tree-table/tree-table.component.stories.ts",3875,2504,6140,5180,1354,5449,9247,6607,4779,5091,5862],"./common/tree-table/tree-table.component.stories.ts":["./packages/angular/common/tree-table/tree-table.component.stories.ts",3875,2504,6140,5180,1354,5449,9247,6607,4779,5091,5862],"./controls/member-list/member-list.component.stories":["./packages/angular/controls/member-list/member-list.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,8213,5448,5149,9247,717,6607,3343,8380,7927,1449,1984,5091,7336,7637,6716,6533],"./controls/member-list/member-list.component.stories.ts":["./packages/angular/controls/member-list/member-list.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,8213,5448,5149,9247,717,6607,3343,8380,7927,1449,1984,5091,7336,7637,6716,6533],"./controls/member-table/member-table.component.stories":["./packages/angular/controls/member-table/member-table.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,8213,5448,5149,9247,717,6607,3343,8380,7927,1449,1984,5091,7336,7637,6716,6643],"./controls/member-table/member-table.component.stories.ts":["./packages/angular/controls/member-table/member-table.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,8213,5448,5149,9247,717,6607,3343,8380,7927,1449,1984,5091,7336,7637,6716,6643],"./controls/member-tree/member-tree.component.stories":["./packages/angular/controls/member-tree/member-tree.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,8213,5448,5149,9247,717,6607,3343,8380,7927,1449,1984,5091,7336,7637,6716,7593],"./controls/member-tree/member-tree.component.stories.ts":["./packages/angular/controls/member-tree/member-tree.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,8213,5448,5149,9247,717,6607,3343,8380,7927,1449,1984,5091,7336,7637,6716,7593],"./controls/smart-filter/smart-filter.component.stories":["./packages/angular/controls/smart-filter/smart-filter.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,8213,5448,5149,9247,717,6607,3343,8380,7927,1449,1984,5091,7336,7637,6716,5465],"./controls/smart-filter/smart-filter.component.stories.ts":["./packages/angular/controls/smart-filter/smart-filter.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,8213,5448,5149,9247,717,6607,3343,8380,7927,1449,1984,5091,7336,7637,6716,5465],"./controls/smart-select/smart-select.component.stories":["./packages/angular/controls/smart-select/smart-select.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6346,9450,5448,3343,5091,7784],"./controls/smart-select/smart-select.component.stories.ts":["./packages/angular/controls/smart-select/smart-select.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6346,9450,5448,3343,5091,7784],"./controls/tree-select/tree-select.component.stories":["./packages/angular/controls/tree-select/tree-select.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,8213,5448,5149,9247,717,6607,3343,8380,7927,1449,1984,5091,7336,7637,6716,3815],"./controls/tree-select/tree-select.component.stories.ts":["./packages/angular/controls/tree-select/tree-select.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,8213,5448,5149,9247,717,6607,3343,8380,7927,1449,1984,5091,7336,7637,6716,3815],"./controls/value-help/value-help.component.stories":["./packages/angular/controls/value-help/value-help.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,8213,5448,5149,9247,717,6607,3343,8380,7927,1449,1984,5091,7336,7637,6716,6137],"./controls/value-help/value-help.component.stories.ts":["./packages/angular/controls/value-help/value-help.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,8213,5448,5149,9247,717,6607,3343,8380,7927,1449,1984,5091,7336,7637,6716,6137],"./copilot/stories/chat.stories":["./packages/angular/copilot/stories/chat.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,8213,9247,717,8380,4779,9257,5423,5091,2029,31],"./copilot/stories/chat.stories.ts":["./packages/angular/copilot/stories/chat.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,8213,9247,717,8380,4779,9257,5423,5091,2029,31],"./copilot/stories/not-enabled.stories":["./packages/angular/copilot/stories/not-enabled.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,8213,9247,717,8380,4779,9257,5423,5091,2029,2968],"./copilot/stories/not-enabled.stories.ts":["./packages/angular/copilot/stories/not-enabled.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,8213,9247,717,8380,4779,9257,5423,5091,2029,2968],"./core/directives/appearance.stories":["./packages/angular/core/directives/appearance.stories.ts",3875,2504,6140,5180,1354,5894,5149,1449,6111,5091,2573],"./core/directives/appearance.stories.ts":["./packages/angular/core/directives/appearance.stories.ts",3875,2504,6140,5180,1354,5894,5149,1449,6111,5091,2573],"./core/directives/density.stories":["./packages/angular/core/directives/density.stories.ts",3875,2504,6140,5180,1354,5894,6530,6346,5997,5149,5091,2453],"./core/directives/density.stories.ts":["./packages/angular/core/directives/density.stories.ts",3875,2504,6140,5180,1354,5894,6530,6346,5997,5149,5091,2453],"./entity/entity-schema/entity-schema.component.stories":["./packages/angular/entity/entity-schema/entity-schema.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,8213,5448,5149,9247,717,6607,3343,8680,983,5091,7336,7637,4347],"./entity/entity-schema/entity-schema.component.stories.ts":["./packages/angular/entity/entity-schema/entity-schema.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,8213,5448,5149,9247,717,6607,3343,8680,983,5091,7336,7637,4347],"./parameter/parameter/parameter.component.stories":["./packages/angular/parameter/parameter/parameter.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,8213,5448,5149,9247,717,6607,3343,8380,7927,1449,1984,5091,7336,7637,6716,6931],"./parameter/parameter/parameter.component.stories.ts":["./packages/angular/parameter/parameter/parameter.component.stories.ts",3875,2504,6140,5180,1354,5449,5894,1824,6530,6346,5597,5997,538,9450,8213,5448,5149,9247,717,6607,3343,8380,7927,1449,1984,5091,7336,7637,6716,6931],"./src/tutorial/intro.stories.mdx":["./packages/angular/src/tutorial/intro.stories.mdx",5684,6516,4438]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}));var ids=map[req],id=ids[0];return Promise.all(ids.slice(1).map(__webpack_require__.e)).then((()=>__webpack_require__(id)))}webpackAsyncContext.keys=()=>Object.keys(map),webpackAsyncContext.id="./packages/angular lazy recursive ^\\.\\/.*$ include: (?:\\/packages\\/angular(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx%7Cmdx))$",module.exports=webpackAsyncContext},"@storybook/channels":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CHANNELS__},"@storybook/client-logger":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CLIENT_LOGGER__},"@storybook/core-events":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CORE_EVENTS__},"@storybook/global":module=>{"use strict";module.exports=__STORYBOOK_MODULE_GLOBAL__},"@storybook/preview-api":module=>{"use strict";module.exports=__STORYBOOK_MODULE_PREVIEW_API__}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[6236],(()=>(__webpack_exec__("./storybook-config-entry.js"),__webpack_exec__("./node_modules/@angular/compiler/fesm2022/compiler.mjs"),__webpack_exec__("./node_modules/@angular/material/prebuilt-themes/indigo-pink.css?ngGlobalStyle"),__webpack_exec__("./packages/angular/core/style/prebuilt/indigo-pink.scss?ngGlobalStyle"),__webpack_exec__("./packages/angular/.storybook/peview.scss?ngGlobalStyle"),__webpack_exec__("./packages/angular/_index.scss?ngGlobalStyle"))));__webpack_require__.O()}]);