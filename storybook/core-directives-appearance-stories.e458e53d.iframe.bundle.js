"use strict";(self.webpackChunkocap=self.webpackChunkocap||[]).push([[2573],{"./packages/angular/core/core.module.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>OcapCoreModule});var OcapCoreModule_1,tslib__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_core_service__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./packages/angular/core/core.service.ts"),_directives__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/angular/core/directives/displayDensity.ts"),_directives__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/angular/core/directives/appearance.ts"),_directives__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./packages/angular/core/directives/button-group.directive.ts");let OcapCoreModule=OcapCoreModule_1=class OcapCoreModule{static forRoot(){return{ngModule:OcapCoreModule_1,providers:[_core_service__WEBPACK_IMPORTED_MODULE_0__.q]}}};OcapCoreModule=OcapCoreModule_1=(0,tslib__WEBPACK_IMPORTED_MODULE_1__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule)({imports:[_directives__WEBPACK_IMPORTED_MODULE_3__.Z,_directives__WEBPACK_IMPORTED_MODULE_4__.A,_directives__WEBPACK_IMPORTED_MODULE_5__.d],exports:[_directives__WEBPACK_IMPORTED_MODULE_3__.Z,_directives__WEBPACK_IMPORTED_MODULE_4__.A,_directives__WEBPACK_IMPORTED_MODULE_5__.d],declarations:[],providers:[]})],OcapCoreModule)},"./packages/angular/core/core.service.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{q:()=>NgmDSCoreService});var _class,tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),src=__webpack_require__("./packages/core/src/index.ts"),Subject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js"),merge=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/merge.js"),empty=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/empty.js"),types=__webpack_require__("./packages/angular/core/types.ts");let NgmAgentService=((_class=class NgmAgentService{constructor(agents){this.agents=agents,this.error$=new Subject.x,this._error$=(0,merge.T)(...this.agents.map((agent=>agent.selectError())))}selectLocalAgentStatus(){const localAgent=this.agents.find((agent=>agent.type===src.buO.Local));if(!localAgent)throw new Error("Can't found Local Agent config");return localAgent?.selectStatus()??empty.E}error(err){this.error$.next(err)}selectError(){return this._error$}}).ctorParameters=()=>[{type:Array,decorators:[{type:core.Inject,args:[types.fH]}]}],_class);NgmAgentService=(0,tslib_es6.gn)([(0,core.Injectable)(),(0,tslib_es6.w6)("design:paramtypes",[Array])],NgmAgentService);let NgmDSCacheService=class NgmDSCacheService extends src.eNP{};var core_service_class;NgmDSCacheService=(0,tslib_es6.gn)([(0,core.Injectable)()],NgmDSCacheService);let NgmDSCoreService=((core_service_class=class NgmDSCoreService extends src.Q$V{constructor(agents,models,dataSourceFactory,cacheService){super(agents,models,dataSourceFactory,cacheService),this.agents=agents,this.models=models,this.dataSourceFactory=dataSourceFactory}ngOnDestroy(){super.onDestroy()}}).ctorParameters=()=>[{type:Array,decorators:[{type:core.Inject,args:[types.fH]}]},{type:Array,decorators:[{type:core.Optional},{type:core.Inject,args:[types.ET]}]},{type:Array,decorators:[{type:core.Optional},{type:core.Inject,args:[types.OF]}]},{type:NgmDSCacheService,decorators:[{type:core.Optional}]}],core_service_class);NgmDSCoreService=(0,tslib_es6.gn)([(0,core.Injectable)(),(0,tslib_es6.w6)("design:paramtypes",[Array,Array,Array,NgmDSCacheService])],NgmDSCoreService)},"./packages/angular/core/directives/appearance.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>AppearanceDirective});var _class,tslib__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@angular/cdk/fesm2022/a11y.mjs"),_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/cdk/fesm2022/coercion.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_angular_material_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/material/fesm2022/core.mjs"),rxjs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js");const _NgmAppearanceBase=(0,_angular_material_core__WEBPACK_IMPORTED_MODULE_0__.pj)(class{constructor(_elementRef){this._elementRef=_elementRef}});let AppearanceDirective=((_class=class AppearanceDirective extends _NgmAppearanceBase{get outline(){return"outline"===this.ngmAppearance}set outline(value){(0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.Ig)(value)&&(this.ngmAppearance="outline")}get hero(){return"hero"===this.ngmAppearance}set hero(value){(0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.Ig)(value)&&(this.ngmAppearance="hero")}get acrylic(){return"acrylic"===this.ngmAppearance}set acrylic(value){(0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.Ig)(value)&&(this.ngmAppearance="acrylic")}get opacity(){return"opacity"===this.ngmAppearance}set opacity(value){(0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.Ig)(value)&&(this.ngmAppearance="opacity")}get dashed(){return"dashed"===this.ngmAppearance}set dashed(value){(0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.Ig)(value)&&(this.ngmAppearance="dashed")}get danger(){return"danger"===this.ngmAppearance}set danger(value){(0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.Ig)(value)&&(this.ngmAppearance="danger")}constructor(elementRef,_focusMonitor){super(elementRef),this._focusMonitor=_focusMonitor,this.ngmAppearance="filled",this._onFocus=new rxjs__WEBPACK_IMPORTED_MODULE_2__.x,this._hasFocus=!1}focus(){this._hasFocus||(this._elementRef.nativeElement.focus(),this._onFocus.next({chip:this})),this._hasFocus=!0}getLabel(){throw new Error("Method not implemented.")}}).ctorParameters=()=>[{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.ElementRef},{type:_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__.tE}],_class.propDecorators={ngmAppearance:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.Input}],outline:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.Input},{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.HostBinding,args:["class.ngm-appearance-outline"]}],hero:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.Input},{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.HostBinding,args:["class.ngm-appearance-hero"]}],acrylic:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.Input},{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.HostBinding,args:["class.ngm-appearance-acrylic"]}],opacity:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.Input},{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.HostBinding,args:["class.ngm-appearance-opacity"]}],dashed:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.Input},{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.HostBinding,args:["class.ngm-appearance-dashed"]}],danger:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.Input},{type:_angular_core__WEBPACK_IMPORTED_MODULE_3__.HostBinding,args:["class.ngm-appearance-danger"]}]},_class);AppearanceDirective=(0,tslib__WEBPACK_IMPORTED_MODULE_5__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Directive)({standalone:!0,selector:"[ngmAppearance]",inputs:["color"],host:{"(focus)":"focus()"}}),(0,tslib__WEBPACK_IMPORTED_MODULE_5__.w6)("design:paramtypes",[_angular_core__WEBPACK_IMPORTED_MODULE_3__.ElementRef,_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__.tE])],AppearanceDirective)},"./packages/angular/core/directives/button-group.directive.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{d:()=>ButtonGroupDirective});var _class,tslib__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let ButtonGroupDirective=((_class=class ButtonGroupDirective{constructor(elementRef){this.elementRef=elementRef}}).ctorParameters=()=>[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef}],_class);ButtonGroupDirective=(0,tslib__WEBPACK_IMPORTED_MODULE_1__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive)({standalone:!0,selector:"[ngmButtonGroup]",host:{class:"ngm-button-group"}}),(0,tslib__WEBPACK_IMPORTED_MODULE_1__.w6)("design:paramtypes",[_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef])],ButtonGroupDirective)},"./packages/angular/core/directives/displayDensity.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>DisplayDensity,Z:()=>DensityDirective});var _class,DisplayDensity,tslib__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");!function(DisplayDensity){DisplayDensity.comfortable="comfortable",DisplayDensity.cosy="cosy",DisplayDensity.compact="compact"}(DisplayDensity||(DisplayDensity={}));let DensityDirective=((_class=class DensityDirective{get densityCosy(){return this.displayDensity===DisplayDensity.comfortable}get densityCompact(){return this.displayDensity===DisplayDensity.compact}get densityComfortable(){return this.displayDensity===DisplayDensity.cosy}}).propDecorators={displayDensity:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],densityCosy:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,args:["class.ngm-density__comfortable"]}],densityCompact:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,args:["class.ngm-density__compact"]}],densityComfortable:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,args:["class.ngm-density__cosy"]}]},_class);DensityDirective=(0,tslib__WEBPACK_IMPORTED_MODULE_1__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive)({standalone:!0,selector:"[displayDensity]"})],DensityDirective)},"./packages/angular/core/types.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{ET:()=>OCAP_MODEL_TOKEN,OF:()=>OCAP_DATASOURCE_TOKEN,fH:()=>OCAP_AGENT_TOKEN});var _angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");const OCAP_AGENT_TOKEN=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.InjectionToken("OCAP-Agent"),OCAP_MODEL_TOKEN=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.InjectionToken("OCAP-Model"),OCAP_DATASOURCE_TOKEN=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.InjectionToken("OCAP-DataSource")},"./packages/angular/core/directives/appearance.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _angular_forms__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),_angular_material_button__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@angular/material/fesm2022/button.mjs"),_angular_material_button_toggle__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@angular/material/fesm2022/button-toggle.mjs"),_angular_material_chips__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@angular/material/fesm2022/chips.mjs"),_angular_material_icon__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular/material/fesm2022/icon.mjs"),_angular_material_slide_toggle__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@angular/material/fesm2022/slide-toggle.mjs"),_metad_ocap_angular_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/angular/core/core.module.ts"),_metad_ocap_angular_core__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./packages/angular/core/directives/button-group.directive.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"ButtonGroupDirective",decorators:[(0,__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs").moduleMetadata)({imports:[_angular_forms__WEBPACK_IMPORTED_MODULE_1__.u5,_metad_ocap_angular_core__WEBPACK_IMPORTED_MODULE_2__.A,_angular_material_icon__WEBPACK_IMPORTED_MODULE_3__.Ps,_angular_material_button__WEBPACK_IMPORTED_MODULE_4__.ot,_angular_material_button_toggle__WEBPACK_IMPORTED_MODULE_5__.vV,_angular_material_chips__WEBPACK_IMPORTED_MODULE_6__.Hi,_angular_material_slide_toggle__WEBPACK_IMPORTED_MODULE_7__.rP,_metad_ocap_angular_core__WEBPACK_IMPORTED_MODULE_8__.d],providers:[]})]},Primary={render:args=>({template:'\n    <mat-slide-toggle>Slide me!</mat-slide-toggle>\n  \n  <div >\n  <div >\n    <mat-icon>share</mat-icon>\n    <mat-icon displayDensity="cosy">share</mat-icon>\n    <mat-icon displayDensity="compact">share</mat-icon>\n  </div>\n  \n  <div>\n    <button mat-icon-button ngmAppearance="danger">\n      <mat-icon>share</mat-icon>\n    </button>\n    <button mat-icon-button ngmAppearance="acrylic">\n      <mat-icon>share</mat-icon>\n    </button>\n    <button mat-icon-button displayDensity="cosy">\n      <mat-icon>share</mat-icon>\n    </button>\n    <button mat-icon-button displayDensity="compact">\n      <mat-icon>share</mat-icon>\n    </button>\n  </div>\n  \n  <div>\n    <mat-button-toggle-group name="fontStyle" aria-label="Font Style" ngmAppearance="color" color="primary">\n      <mat-button-toggle value="bold">Bold</mat-button-toggle>\n      <mat-button-toggle value="italic">Italic</mat-button-toggle>\n      <mat-button-toggle value="underline">Underline</mat-button-toggle>\n    </mat-button-toggle-group>\n  \n    <mat-button-toggle-group name="fontStyle" aria-label="Font Style" ngmAppearance="color" color="accent">\n      <mat-button-toggle value="bold">Bold</mat-button-toggle>\n      <mat-button-toggle value="italic">Italic</mat-button-toggle>\n      <mat-button-toggle value="underline">Underline</mat-button-toggle>\n    </mat-button-toggle-group>\n  \n    <mat-button-toggle-group name="fontStyle" aria-label="Font Style" displayDensity="compact"\n      ngmAppearance="color" color="accent"\n      [value]="\'italic\'">\n      <mat-button-toggle disableRipple value="bold">Bold</mat-button-toggle>\n      <mat-button-toggle disableRipple value="italic">Italic</mat-button-toggle>\n      <mat-button-toggle disableRipple value="underline">Underline</mat-button-toggle>\n    </mat-button-toggle-group>\n  \n    <mat-button-toggle-group name="fontStyle" aria-label="Font Style" multiple="true" displayDensity="compact"\n      ngmAppearance="color" color="accent">\n      <mat-button-toggle disableRipple value="bold">Bold</mat-button-toggle>\n      <mat-button-toggle disableRipple value="italic">Italic</mat-button-toggle>\n      <mat-button-toggle disableRipple value="underline">Underline</mat-button-toggle>\n    </mat-button-toggle-group>\n  \n    <mat-button-toggle-group name="fontStyle" aria-label="Font Style" vertical ngmAppearance="color" color="primary">\n      <mat-button-toggle value="bold">Bold</mat-button-toggle>\n      <mat-button-toggle value="italic">Italic</mat-button-toggle>\n      <mat-button-toggle value="underline">Underline</mat-button-toggle>\n    </mat-button-toggle-group>\n  \n    <mat-button-toggle-group name="fontStyle" aria-label="Font Style" vertical multiple="true" displayDensity="compact"\n      ngmAppearance="color" color="accent">\n      <mat-button-toggle disableRipple value="bold">Bold</mat-button-toggle>\n      <mat-button-toggle disableRipple value="italic">Italic</mat-button-toggle>\n      <mat-button-toggle disableRipple value="underline">Underline</mat-button-toggle>\n    </mat-button-toggle-group>\n  \n    <mat-button-toggle-group name="fontStyle" aria-label="Font Style" ngmAppearance="outline" color="primary">\n      <mat-button-toggle value="bold">Bold</mat-button-toggle>\n      <mat-button-toggle value="italic">Italic</mat-button-toggle>\n      <mat-button-toggle value="underline">Underline</mat-button-toggle>\n    </mat-button-toggle-group>\n  \n    <mat-button-toggle-group name="fontStyle" aria-label="Font Style" ngmAppearance="outline" color="primary" displayDensity="compact">\n      <mat-button-toggle value="bold">Bold</mat-button-toggle>\n      <mat-button-toggle value="italic">Italic</mat-button-toggle>\n      <mat-button-toggle value="underline">Underline</mat-button-toggle>\n    </mat-button-toggle-group>\n  </div>\n  \n  <div>\n    <mat-chip-list aria-label="Fish selection" >\n      <mat-chip>One fish</mat-chip>\n      <mat-chip>Two fish</mat-chip>\n      <mat-chip color="primary" selected>Primary fish</mat-chip>\n      <mat-chip color="accent" selected>Accent fish</mat-chip>\n      <mat-chip color="warn" selected>warn fish</mat-chip>\n    </mat-chip-list>\n  \n    <mat-chip-list aria-label="Fish selection" ngmAppearance="outline">\n      <mat-chip>One fish</mat-chip>\n      <mat-chip>Two fish</mat-chip>\n      <mat-chip color="primary" selected>Primary fish</mat-chip>\n      <mat-chip color="accent" selected>Accent fish</mat-chip>\n      <mat-chip color="warn" selected>warn fish</mat-chip>\n    </mat-chip-list>\n  \n    <mat-chip-list aria-label="Fish selection" ngmAppearance="dashed">\n      <mat-chip>One fish</mat-chip>\n      <mat-chip>Two fish</mat-chip>\n      <mat-chip color="primary" selected>Primary fish</mat-chip>\n      <mat-chip color="accent" selected>Accent fish</mat-chip>\n      <mat-chip color="warn" selected>warn fish</mat-chip>\n    </mat-chip-list>\n  \n    <mat-chip-list aria-label="Fish selection" ngmAppearance="outline" displayDensity="compact">\n      <mat-chip>One fish</mat-chip>\n      <mat-chip>Two fish</mat-chip>\n      <mat-chip color="primary" selected>Primary fish</mat-chip>\n      <mat-chip color="accent" selected>Accent fish</mat-chip>\n      <mat-chip color="warn" selected>warn fish</mat-chip>\n    </mat-chip-list>\n  </div>\n  \n  <div fxLayout="row wrap" fxLayoutAlign="space-between center" >\n    <div ngmButtonGroup>\n      <button mat-button>Click me!</button>\n      <button mat-raised-button color="primary">Click me!</button>\n    </div>\n  \n    <div ngmButtonGroup>\n      <button mat-flat-button>Click me!</button>\n      <button mat-raised-button color="primary">Click me!</button>\n      <button mat-raised-button color="accent">Click me!</button>\n    </div>\n  \n    <div ngmButtonGroup displayDensity="cosy">\n      <button mat-flat-button displayDensity="cosy">Click me!</button>\n      <button mat-raised-button color="primary" displayDensity="cosy">Click me!</button>\n      <button mat-raised-button color="accent" displayDensity="cosy">Click me!</button>\n    </div>\n  \n    <div ngmButtonGroup displayDensity="compact">\n      <button mat-flat-button displayDensity="compact">Click me!</button>\n      <button mat-raised-button color="primary" displayDensity="compact">Click me!</button>\n      <button mat-raised-button color="accent" displayDensity="compact">Click me!</button>\n    </div>\n  </div>\n  \n  <div fxLayout="row wrap" fxLayoutAlign="space-between center" >\n    <button mat-button color="accent" [loading]="true">Accent</button>\n  \n    <button mat-flat-button [loading]="true">Confortable</button>\n    <button mat-flat-button displayDensity="cosy" [loading]="true">Cosy</button>\n    <button mat-flat-button displayDensity="compact" [loading]="true">Compact</button>\n  \n    <button mat-raised-button color="primary" [loading]="true">Primary</button>\n    <button mat-raised-button color="accent" [loading]="true">Accent</button>\n  \n    <button mat-stroked-button color="accent" [loading]="true">Accent</button>\n  \n    <button mat-icon-button [loading]="true" color="primary">\n      <mat-icon>more_vert</mat-icon>\n    </button>\n    <button mat-fab [loading]="true" color="primary">\n      <mat-icon>delete</mat-icon>\n    </button>\n    <button mat-mini-fab [loading]="true" color="primary">\n      <mat-icon>menu</mat-icon>\n    </button>\n  </div>\n  \n  <div fxLayout="row wrap" fxLayoutAlign="space-between center" >\n    <div ngmButtonGroup>\n      <button mat-button>Click me!</button>\n      <button mat-raised-button color="accent" [loading]="true">Click me!</button>\n    </div>\n  </div>\n  </div>\n    ',props:args}),args:{text:"Click me!",padding:10,disabled:!0}};Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:'{\n  render: (args: ButtonGroupDirective) => ({\n    template: `\n    <mat-slide-toggle>Slide me!</mat-slide-toggle>\n  \n  <div >\n  <div >\n    <mat-icon>share</mat-icon>\n    <mat-icon displayDensity="cosy">share</mat-icon>\n    <mat-icon displayDensity="compact">share</mat-icon>\n  </div>\n  \n  <div>\n    <button mat-icon-button ngmAppearance="danger">\n      <mat-icon>share</mat-icon>\n    </button>\n    <button mat-icon-button ngmAppearance="acrylic">\n      <mat-icon>share</mat-icon>\n    </button>\n    <button mat-icon-button displayDensity="cosy">\n      <mat-icon>share</mat-icon>\n    </button>\n    <button mat-icon-button displayDensity="compact">\n      <mat-icon>share</mat-icon>\n    </button>\n  </div>\n  \n  <div>\n    <mat-button-toggle-group name="fontStyle" aria-label="Font Style" ngmAppearance="color" color="primary">\n      <mat-button-toggle value="bold">Bold</mat-button-toggle>\n      <mat-button-toggle value="italic">Italic</mat-button-toggle>\n      <mat-button-toggle value="underline">Underline</mat-button-toggle>\n    </mat-button-toggle-group>\n  \n    <mat-button-toggle-group name="fontStyle" aria-label="Font Style" ngmAppearance="color" color="accent">\n      <mat-button-toggle value="bold">Bold</mat-button-toggle>\n      <mat-button-toggle value="italic">Italic</mat-button-toggle>\n      <mat-button-toggle value="underline">Underline</mat-button-toggle>\n    </mat-button-toggle-group>\n  \n    <mat-button-toggle-group name="fontStyle" aria-label="Font Style" displayDensity="compact"\n      ngmAppearance="color" color="accent"\n      [value]="\'italic\'">\n      <mat-button-toggle disableRipple value="bold">Bold</mat-button-toggle>\n      <mat-button-toggle disableRipple value="italic">Italic</mat-button-toggle>\n      <mat-button-toggle disableRipple value="underline">Underline</mat-button-toggle>\n    </mat-button-toggle-group>\n  \n    <mat-button-toggle-group name="fontStyle" aria-label="Font Style" multiple="true" displayDensity="compact"\n      ngmAppearance="color" color="accent">\n      <mat-button-toggle disableRipple value="bold">Bold</mat-button-toggle>\n      <mat-button-toggle disableRipple value="italic">Italic</mat-button-toggle>\n      <mat-button-toggle disableRipple value="underline">Underline</mat-button-toggle>\n    </mat-button-toggle-group>\n  \n    <mat-button-toggle-group name="fontStyle" aria-label="Font Style" vertical ngmAppearance="color" color="primary">\n      <mat-button-toggle value="bold">Bold</mat-button-toggle>\n      <mat-button-toggle value="italic">Italic</mat-button-toggle>\n      <mat-button-toggle value="underline">Underline</mat-button-toggle>\n    </mat-button-toggle-group>\n  \n    <mat-button-toggle-group name="fontStyle" aria-label="Font Style" vertical multiple="true" displayDensity="compact"\n      ngmAppearance="color" color="accent">\n      <mat-button-toggle disableRipple value="bold">Bold</mat-button-toggle>\n      <mat-button-toggle disableRipple value="italic">Italic</mat-button-toggle>\n      <mat-button-toggle disableRipple value="underline">Underline</mat-button-toggle>\n    </mat-button-toggle-group>\n  \n    <mat-button-toggle-group name="fontStyle" aria-label="Font Style" ngmAppearance="outline" color="primary">\n      <mat-button-toggle value="bold">Bold</mat-button-toggle>\n      <mat-button-toggle value="italic">Italic</mat-button-toggle>\n      <mat-button-toggle value="underline">Underline</mat-button-toggle>\n    </mat-button-toggle-group>\n  \n    <mat-button-toggle-group name="fontStyle" aria-label="Font Style" ngmAppearance="outline" color="primary" displayDensity="compact">\n      <mat-button-toggle value="bold">Bold</mat-button-toggle>\n      <mat-button-toggle value="italic">Italic</mat-button-toggle>\n      <mat-button-toggle value="underline">Underline</mat-button-toggle>\n    </mat-button-toggle-group>\n  </div>\n  \n  <div>\n    <mat-chip-list aria-label="Fish selection" >\n      <mat-chip>One fish</mat-chip>\n      <mat-chip>Two fish</mat-chip>\n      <mat-chip color="primary" selected>Primary fish</mat-chip>\n      <mat-chip color="accent" selected>Accent fish</mat-chip>\n      <mat-chip color="warn" selected>warn fish</mat-chip>\n    </mat-chip-list>\n  \n    <mat-chip-list aria-label="Fish selection" ngmAppearance="outline">\n      <mat-chip>One fish</mat-chip>\n      <mat-chip>Two fish</mat-chip>\n      <mat-chip color="primary" selected>Primary fish</mat-chip>\n      <mat-chip color="accent" selected>Accent fish</mat-chip>\n      <mat-chip color="warn" selected>warn fish</mat-chip>\n    </mat-chip-list>\n  \n    <mat-chip-list aria-label="Fish selection" ngmAppearance="dashed">\n      <mat-chip>One fish</mat-chip>\n      <mat-chip>Two fish</mat-chip>\n      <mat-chip color="primary" selected>Primary fish</mat-chip>\n      <mat-chip color="accent" selected>Accent fish</mat-chip>\n      <mat-chip color="warn" selected>warn fish</mat-chip>\n    </mat-chip-list>\n  \n    <mat-chip-list aria-label="Fish selection" ngmAppearance="outline" displayDensity="compact">\n      <mat-chip>One fish</mat-chip>\n      <mat-chip>Two fish</mat-chip>\n      <mat-chip color="primary" selected>Primary fish</mat-chip>\n      <mat-chip color="accent" selected>Accent fish</mat-chip>\n      <mat-chip color="warn" selected>warn fish</mat-chip>\n    </mat-chip-list>\n  </div>\n  \n  <div fxLayout="row wrap" fxLayoutAlign="space-between center" >\n    <div ngmButtonGroup>\n      <button mat-button>Click me!</button>\n      <button mat-raised-button color="primary">Click me!</button>\n    </div>\n  \n    <div ngmButtonGroup>\n      <button mat-flat-button>Click me!</button>\n      <button mat-raised-button color="primary">Click me!</button>\n      <button mat-raised-button color="accent">Click me!</button>\n    </div>\n  \n    <div ngmButtonGroup displayDensity="cosy">\n      <button mat-flat-button displayDensity="cosy">Click me!</button>\n      <button mat-raised-button color="primary" displayDensity="cosy">Click me!</button>\n      <button mat-raised-button color="accent" displayDensity="cosy">Click me!</button>\n    </div>\n  \n    <div ngmButtonGroup displayDensity="compact">\n      <button mat-flat-button displayDensity="compact">Click me!</button>\n      <button mat-raised-button color="primary" displayDensity="compact">Click me!</button>\n      <button mat-raised-button color="accent" displayDensity="compact">Click me!</button>\n    </div>\n  </div>\n  \n  <div fxLayout="row wrap" fxLayoutAlign="space-between center" >\n    <button mat-button color="accent" [loading]="true">Accent</button>\n  \n    <button mat-flat-button [loading]="true">Confortable</button>\n    <button mat-flat-button displayDensity="cosy" [loading]="true">Cosy</button>\n    <button mat-flat-button displayDensity="compact" [loading]="true">Compact</button>\n  \n    <button mat-raised-button color="primary" [loading]="true">Primary</button>\n    <button mat-raised-button color="accent" [loading]="true">Accent</button>\n  \n    <button mat-stroked-button color="accent" [loading]="true">Accent</button>\n  \n    <button mat-icon-button [loading]="true" color="primary">\n      <mat-icon>more_vert</mat-icon>\n    </button>\n    <button mat-fab [loading]="true" color="primary">\n      <mat-icon>delete</mat-icon>\n    </button>\n    <button mat-mini-fab [loading]="true" color="primary">\n      <mat-icon>menu</mat-icon>\n    </button>\n  </div>\n  \n  <div fxLayout="row wrap" fxLayoutAlign="space-between center" >\n    <div ngmButtonGroup>\n      <button mat-button>Click me!</button>\n      <button mat-raised-button color="accent" [loading]="true">Click me!</button>\n    </div>\n  </div>\n  </div>\n    `,\n    props: args\n  }),\n  args: {\n    text: \'Click me!\',\n    padding: 10,\n    disabled: true\n  }\n}',...Primary.parameters?.docs?.source}}}}}]);