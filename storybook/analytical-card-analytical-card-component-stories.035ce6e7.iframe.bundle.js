(self.webpackChunkocap=self.webpackChunkocap||[]).push([[4683],{"./packages/angular/analytical-card/analytical-card.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n  display: flex;\n  flex-direction: column;\n  position: relative;\n}\n:host .ngm-card-header .actions {\n  position: relative;\n}\n:host .ngm-card-header .actions > * {\n  opacity: 0.1;\n}\n:host:hover .ngm-card-header .actions > * {\n  opacity: 1;\n}\n:host.ngm-analytical-card__drilled .ngm-card-content {\n  height: calc(100% - 60px);\n  max-height: calc(100% - 60px);\n}\n:host.ngm-density__compact.ngm-analytical-card__drilled .ngm-card-content {\n  height: calc(100% - 55px);\n  max-height: calc(100% - 55px);\n}\n:host.ngm-density__cosy.ngm-analytical-card__drilled .ngm-card-content {\n  height: calc(100% - 60px);\n  max-height: calc(100% - 60px);\n}\n\n.ngm-card-header__title {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.ngm-card-content {\n  height: calc(100% - 30px);\n  max-height: calc(100% - 30px);\n  margin-bottom: 0;\n}\n\n.echarts-chart {\n  height: 100%;\n  max-height: 100%;\n}\n\n.ngm-analytical-card__loading {\n  position: absolute;\n  right: 0;\n  margin: 5px;\n}\n\n.ngm-card-error {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./packages/angular/entity/property/property.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  overflow: hidden;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./packages/angular/core/services/csv.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";function csvDownload(data,name,delimiter){const items=data,filename=name||"export.csv",d=delimiter||",",header=Array.from(new Set(items.reduce(((r,e)=>[...r,...Object.keys(e)]),[]))),csv=items.map((row=>header.map((fieldName=>JSON.stringify(0===row[fieldName]?0:row[fieldName]||""))).join(d)));csv.unshift(header.join(d));const csvStr=csv.join("\r\n"),blob=new Blob([csvStr],{type:"text/plain;charset=utf-8"}),link=document.createElement("a"),url=URL.createObjectURL(blob);link.href=url,link.download=filename,link.style.display="none",document.body.appendChild(link),link.click(),document.body.removeChild(link)}__webpack_require__.d(__webpack_exports__,{O:()=>csvDownload})},"./packages/angular/core/services/smart-filter-bar.service.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{N:()=>NgmSmartFilterBarService});var _NgmSmartFilterBarService,tslib__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_metad_ocap_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./packages/core/src/index.ts");let NgmSmartFilterBarService=((_NgmSmartFilterBarService=class NgmSmartFilterBarService extends _metad_ocap_core__WEBPACK_IMPORTED_MODULE_0__.QXJ{constructor(parent){super(parent)}ngOnDestroy(){super.onDestroy()}}).ctorParameters=()=>[{type:_NgmSmartFilterBarService,decorators:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Optional},{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.SkipSelf}]}],_NgmSmartFilterBarService);NgmSmartFilterBarService=(0,tslib__WEBPACK_IMPORTED_MODULE_2__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable)(),(0,tslib__WEBPACK_IMPORTED_MODULE_2__.w6)("design:paramtypes",[NgmSmartFilterBarService])],NgmSmartFilterBarService)},"./packages/angular/entity/property/property.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{lG:()=>NgmEntityPropertyComponent,E4:()=>propertyIcon});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var _NgmEntityPropertyComponent,property_componentngResource=__webpack_require__("./packages/angular/entity/property/property.component.scss?ngResource"),property_componentngResource_default=__webpack_require__.n(property_componentngResource),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),icon=__webpack_require__("./node_modules/@angular/material/fesm2022/icon.mjs"),common_module=__webpack_require__("./packages/angular/common/common.module.ts"),displayDensity=__webpack_require__("./packages/angular/core/directives/displayDensity.ts"),src=__webpack_require__("./packages/core/src/index.ts");let NgmEntityPropertyComponent=((_NgmEntityPropertyComponent=class NgmEntityPropertyComponent{constructor(){this.AGGREGATION_ROLE=src.uFO,this.property=(0,core.input)(null),this.displayBehaviour=(0,core.input)(null),this.displayDensity=(0,core.input)(null),this.hiddenIcon=(0,core.input)(!1,{transform:core.booleanAttribute}),this.highlight=(0,core.input)(null),this.role=(0,core.input)(null),this.icon=(0,core.signal)(null),(0,core.effect)((()=>{const property=this.property(),role=this.role();this.icon.set(property?propertyIcon({...property,role:role??property.role}).icon:null)}),{allowSignalWrites:!0})}}).ctorParameters=()=>[],_NgmEntityPropertyComponent.propDecorators={property:[{type:core.Input,args:[{isSignal:!0,alias:"property",required:!1,transform:void 0}]}],displayBehaviour:[{type:core.Input,args:[{isSignal:!0,alias:"displayBehaviour",required:!1,transform:void 0}]}],displayDensity:[{type:core.Input,args:[{isSignal:!0,alias:"displayDensity",required:!1,transform:void 0}]}],hiddenIcon:[{type:core.Input,args:[{isSignal:!0,alias:"hiddenIcon",required:!1,transform:void 0}]}],highlight:[{type:core.Input,args:[{isSignal:!0,alias:"highlight",required:!1,transform:void 0}]}],role:[{type:core.Input,args:[{isSignal:!0,alias:"role",required:!1,transform:void 0}]}]},_NgmEntityPropertyComponent);NgmEntityPropertyComponent=(0,tslib_es6.gn)([(0,core.Component)({standalone:!0,imports:[common.CommonModule,icon.Ps,displayDensity.Z,common_module.N],changeDetection:core.ChangeDetectionStrategy.OnPush,selector:"ngm-entity-property",template:'@if (!hiddenIcon() && icon()) {\n  <mat-icon mat-list-icon class="shrink-0 mr-1">{{ icon() }}</mat-icon>\n}\n\n<ngm-display-behaviour class="flex-1 overflow-hidden"\n  [displayBehaviour]="displayBehaviour()"\n  [option]="{\n    key: property().name,\n    caption: property().caption\n  }"\n  [highlight]="highlight()"\n>\n</ngm-display-behaviour>\n',host:{class:"ngm-entity-property"},styles:[property_componentngResource_default()]}),(0,tslib_es6.w6)("design:paramtypes",[])],NgmEntityPropertyComponent);const SemanticIconMap={[src.ZRQ["Address.Country"]]:"public"};function propertyIcon(property){let icon=null,label=null;switch(property?.role){case src.uFO.dimension:(0,src.IaF)(property)?(icon="schedule",label="Calendar"):SemanticIconMap[property.semantics?.semantic]?(icon=SemanticIconMap[property.semantics?.semantic],label=property.semantics?.semantic):(icon="tag",label="Dimension");break;case src.uFO.hierarchy:icon="h_mobiledata",label="Hierarchy";break;case src.uFO.level:icon="format_list_numbered_rtl",label="Level";break;case src.uFO.measure:(0,src.ewE)(property)?(0,src.UE_)(property)?(icon="alternate_email",label="Measure Control"):(0,src.sT)(property)?(icon="trending_up",label="Indicator"):(icon="functions",label="Calculation"):(icon="straighten",label="Measure");break;default:(0,src.RZT)(property)&&(icon="alternate_email",label="Parameter")}return{icon,label}}},"./packages/angular/i18n/zhHans.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{q:()=>ZhHans});const ZhHans={Ngm:{Common:{Add:"添加",Cancel:"取消",Apply:"应用",Reset:"重置",Search:"搜索",Select:"选择",Clear:"清空",Search_Placeholder:"请输入关键词",DisplayBehaviour_Description:"描述",DisplayBehaviour_DescriptionID:"描述 ID",DisplayBehaviour_IDDescription:"ID 描述",DisplayBehaviour_ID:"ID",DisplayBehaviour_Auto:"自动",SelectionType_Single:"单选",SelectionType_Multiple:"多选",Presentation_Flat:"平铺",Presentation_Hierarchy:"层级",HierarchySelectionMode_Individual:"单个",HierarchySelectionMode_SelfDescendants:"自己和后代",HierarchySelectionMode_DescendantsOnly:"只后代",HierarchySelectionMode_SelfChildren:"自己和子代",HierarchySelectionMode_ChildrenOnly:"只子代",Measures:"度量",None:"无",Default:"默认",Hierarchy:"层次结构",DisplayBehaviour:"显示行为",DisplayBehaviour_IDOnly:"编码"},AnalyticalCard:{Screenshot:"截图",DataDownload:"下载数据",Refresh:"刷新",DrillDown:"下钻",DrillLevel:"层级下钻",DrillDimension:"维度下钻",LinkAnalysis:"联动筛选",DataEmpty:"数据为空"},AnalyticalGrid:{DataDownload:"下载数据",SORT:"排序",MOVE:"移动",ASCENDING:"正序",DESCENDGING:"倒序",MOVELEFT:"向左",MOVERIGHT:"向右",Search:"搜索",SelectAll:"选择所有",Pin:"固定"},Controls:{ValueHelp:{Title:"为{{value}}设置过滤器",AvailableMembers:"可选成员",DisplayBehaviour:"展现形式",SelectedMembers:"选中成员",ClearSelection:"清空选择",ShowUnbookedMembers:"显示未分配成员",ShowAllMember:"显示‘所有’成员",ShowOnlyLeaves:"只显示叶子节点",ExcludeSelectedMembers:"排除选中成员",SelectionType:"选择类型",Presentation:"展现形式",HierarchySelectionMode:"层级选择模式",Hierarchy:"层次结构"}},Copilot:{Copilot:"副驾驶",AICopilot:"AI 副驾驶",EnableCopilot:"启用 Copilot",GetYourApiKey:"获取你的 API Key",ProvideOpenaiApiKey:"请提供 Openai API Key?",Provider:"提供商",YourAIPairProgrammer:"你的 AI 配对程序员!",LetYourAIPairProgrammerEdits:"让你的 AI 配对程序员修改一下!",SelectSomeCode:"选择代码，让你的 AI 配对程序员修改一下!",ThinkingHard:"努力思考中...",StopGenerating:"停止生成",ClearMessages:"清空消息",CharacterLength:"字数",Resubmit:"重新提交",Cancel:"取消",Model:"模型",Options:"选项",UseSystemPrompt:"使用系统提示",ExamplesOfPrompts:"提示语示例",APIKey:"API 密钥",APIHost:"API 主机",AskAICopilot:"向 AI 副驾驶询问问题",Prompt:"提示",SendPrompt:"发送提问",Placeholder:"询问副驾驶或输入 / 获取命令",ClearConversation:"清空会话",Ask:"提问",Copy:"复制",Regenerate:"重新生成",Common:"通用",PleaseSelectBusinessRole:"请选择一个业务角色",DefaultBusinessRole:{title:"通用",description:"通用业务角色"},Help:"帮助",NewChat:"新聊天",Update:"更新"},Entity:{SelectEntities:"选择数据集",SemanticModel:"语义模型",Cube:"多维数据集",AnnotatedCube:"增强过的多维数据集",MEASURE:"度量",SELECT_DIMENSION:"选择维度",MeasureFormatting:"度量格式",ShortNumber:"缩写数字",Decimals:"小数位",Unit:"单位",UseUnderlyingUnit:"使用模型单位",DigitsInfo:"数字格式"},EntitySchema:{Parameters:"参数",Measures:"度量",Properties:"属性"},Formula:{Editor:{EditFormula:"编辑公式",Format:"格式化",Help:"帮助"}},Table:{Select:"选择",NoData:"无数据",MatchingFilter:'匹配过滤条件"{{value}}"',firstPageLabel:"第一",itemsPerPageLabel:"每页",lastPageLabel:"最后",nextPageLabel:"下一页",previousPageLabel:"上一页",rangeLabel0:"页 1 共 1",pageLabel:"页",ofLabel:"共"},DatePicker:{Date:"日期",Year:"年",Quarter:"季",Month:"月",Week:"周",Day:"日",From:"从",To:"至"},TimeFilter:{SET_DATE_RANGE:"为 {{property}} 设置时间区间",CURRENT_DATE:"当前日期",SYSTEM_DATE:"系统时间",USER_CURRENT_DATE:"用户当前时间",ADD_TIME_RANGE:"添加时间区间",RANGE:"区间",RANGE_TYPE:"区间类型",RANGE_TYPE_STANDARD:"标准",RANGE_TYPE_OFFSET:"偏移",GRANULARITY:"粒度",YEAR:"年",QUARTER:"季度",MONTH:"月",WEEK:"周",DAY:"日",LOOK_BACK:"回顾",LOOK_AHEAD:"展望",CURRENT_PERIOD:"当前时间",FORMATTER:"格式",OFFSET_DIRECTION:"偏移方向",OFFSET_AMOUNT:"偏移量",SETTINGS_FOR_USERS:"为用户设置",ALLOW_MODIFY_SELECTIONS:"允许查看者修改选择",SELECTION_TYPE:"选择类型",SELECTION_TYPE_MULTIPLE:"多选",SELECTION_TYPE_SINGLE:"单选",TODAY:"当前期间",Year:"年",Quarter:"季度",Month:"月",Week:"周",Day:"日",Today:"今天"},AdvancedSlicer:{TITLE:"高级切片器",CONTEXT:"上下文",OPERATOR:"操作符",ENABLE_OTHER:"汇总其它项",VALUE:"值",VALUE_FROM:"从",VALUE_TO:"至",MEASURE:"度量",MeasureSelectPlaceholder:"选择或新建一个度量",Equal:"等于",NotEqual:"不等于",LessThan:"小于",GreaterThan:"大于",LessEqual:"小于等于",GreaterEqual:"大于等于",Between:"介于",NotBetween:"不介于",TopCount:"前 N 个",BottomCount:"后 N 个",TopPercent:"前百分比的",BottomPercent:"后百分比的",TopSum:"前总数",BottomSum:"后总数"},Property:{PARAMETER:"参数",PARAMETERS:"参数",MEASURE:"度量",MEASURES:"度量",MeasureGroup:"度量组",INDICATORS:"指标",CREATE_PARAMETER:"创建参数",EditParameter:"编辑参数",CALCULATIONS:"计算度量",DIMENSION:"维度",DIMENSIONS:"维度",ADD_DIMENSION:"添加维度",MEMBERS:"成员",HIERARCHY:"层次结构",ADD_PARAMETER_MEMBER:"添加成员",MEASURE_CONTROLS:"度量控制",CREATE_CALCULATION:"创建计算",CREATE_MEASURE_CONTROL:"创建度量控制",REFERENCE_LINE:"参考线",Input:"输入",Select:"选择",Dimensions:"维度",Name:"名称",NameRequired:"名称必输或已存在",Caption:"标签",Value:"值",DefaultValue:"默认值",ValueType:"值类型",DisplayAs:"显示为",Label:"文本字段",Formatter:"格式设置",EditFormula:"编辑公式",UnbookedData:"无成员数据",ZeroSuppression:"清零",PropertyList:"属性列表",DisplayHierarchy:"包含父级层级",CreateParameter:"创建参数",CurrentMember:"当前成员",PreviousNMember:"之前第 N 个成员",NextNMember:"之后第 N 个成员",ParallelMember:"平行成员",AncestorMember:"祖先成员",SelectByMembers:"选择成员",NewCalculationInputControl:"新建计算输入",NthMember:"值 / 第 N 个",IsDefault:"默认",Default:"默认",Auto:"自动","Description and ID":"名称+ID","Description Only":"名称","ID Only":"ID",Description:"描述",Order:"排序",None:"无",Order_ASC:"正序",Order_DESC:"倒序",Dimension:"维度",AvailableMembers:"可用成员",DimensionNotFound:"在数据集‘{{cube}}’中未找到维度‘{{dimension}}’",DIMENSION_MEASURE:"维度/度量",Parameter:"参数","Measure Control":"度量控制",Measure:"度量",Calculation:"计算",Hierarchy:"层次结构",Level:"层级","Measure Group":"度量组",Indicator:"指标",Calendar:"日历","Address.Country":"国家"},MeasureSelect:{EditCalculationMeasure:"编辑计算度量",NewCalculationMeasure:"新建计算度量"},Calculation:{TITLE:"计算编辑器",TYPE:"类型",Name:"名称",NameRequired:"名称必输或已存在",Caption:"标签",FUNCTIONS:"函数",DIMENSION_MEMBERS:"维度成员",CALCULATED_MEMBERS:"计算成员",PARAMETERS:"参数",CALCULATED_MEASURE:"计算公式",RESTRICTED_MEASURE:"受限度量",VARIANCE_MEASURE:"差值度量",AGGREGATION:"聚合",DIMENSION_TO_MEASURE:"维度转度量",MEASURE_CONTROL:"度量控制",PROPERTIES:"属性",OPERATION:"运算",VALUE:"值",AGGREGATION_DIMENSIONS:"聚合维度",ADD_DIMENSION:"添加维度",SELECTION_CONTEXT:"选择上下文",ENABLE_CONSTANT_SELECTION:"启用常量选择",EDIT_FORMULA:"编辑公式",ToggleSidebar:"切换侧边栏",UseConditionalAggregation:"使用条件聚合",ConditionalDimensions:"条件维度",ExcludeConditions:"排除条件",Compare:"比",To:"较",BaseDimension:"基准维度",SetNoDataasZero:"将无数据当作零",CalculateasPercentage:"计算为百分比",DirectDivide:"直接除",AbsoluteBaseValue:"绝对化基值",DivideBy:"除以",CompareValueA:"比 (A)",ToValueB:"较 (B)",Measure:"度量",RestrictiveConditions:"限定条件",ConstantSelectionTootip:"锁定限定条件维度成员,使其不会被用户上下文切片器所覆盖",Dimension:"维度",MeasureSelectOptions:"度量选择选项",ConditionalAggregation:"条件聚合",Unit:"单位",Formulas:"公式",MeasureSelectPlaceholder:"选择或新建一个度量",MeasureIsRequired:"度量必选"},AdvancedFilter:{Title:"组合切片器",AND:"且",OR:"或",GROUP:"组合",Operator:"操作符",Value:"值",Condition:"条件",AddGroup:'"且"组合',OrGroup:'"或"组合',EndGroup:"结束组合",DeleteGroup:"删除组合",Tips:"使用 且/或 创建条件组合"},Selection:{Slicers:"切片器",AdvancedFilter:"组合切片器",CombinationSlicer:"组合切片器",AdvancedSlicer:"高级切片器",DimensionMembers:"维度成员",TimeRanges:"动态时间范围",OnContext:"基于",SLICERS_BAR:{TITLE:"过滤器"},SLICER:{ADVANCED_SLICER:"高级切片器",ADVANCED_FILTER:"组合切片器"},DateFunctions:{SYSTEMTIME:"系统时间",TODAY:"今天"}}}}},"./packages/angular/mock/agent-mock.service.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{ch:()=>MockAgent,fJ:()=>CUBE_SALES_ORDER_NAME,nH:()=>CUBE_SALES_ORDER});var tslib__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_core__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_metad_ocap_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./packages/core/src/index.ts"),_ngneat_falso__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@ngneat/falso/index.esm.js"),rxjs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js"),rxjs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js");const columns=[{name:"OrderId",label:"订单号",type:"string"},{name:"product",label:"产品",type:"string"},{name:"productCategory",label:"产品类别",type:"string"},{name:"Department",label:"部门",type:"string"},{name:"sales",label:"销售额",type:"number"},{name:"quantity",label:"销售量",type:"number"}],SalesOrder={name:"SalesOrder",label:"销售订单",columns},SalesOrder10s={name:"SalesOrder10s",label:"销售订单10秒",columns},SalesOrder3s={name:"SalesOrder3s",label:"销售订单3秒",columns},CUBE_SALES_ORDER_NAME="SalesOrder",CUBE_SALES_ORDER={name:CUBE_SALES_ORDER_NAME,caption:"销售订单",visible:!0,tables:[{name:"sales_order"}],dimensions:[{name:"Product",caption:"产品",hierarchies:[{name:"",caption:"产品",levels:[{name:"Product",column:"product",captionColumn:"ProductName"}]}]},{name:"Department",caption:"部门",hierarchies:[{name:"",levels:[{name:"Department",column:"department",captionColumn:"DepartmentName"}]}]}],measures:[{name:"Sales",column:"sales",caption:"销售额"},{name:"Cost",column:"cost",caption:"成本"}]};let MockAgent=class MockAgent{constructor(){this.type=_metad_ocap_core__WEBPACK_IMPORTED_MODULE_0__.buO.Browser,this.error$=new rxjs__WEBPACK_IMPORTED_MODULE_1__.x}selectStatus(){return(0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)(_metad_ocap_core__WEBPACK_IMPORTED_MODULE_0__.dJT.ONLINE)}selectError(){return this.error$}error(err){this.error$.next(err)}request(dataSource,options){return new Promise(((resolve,reject)=>{if("get"===options.method){if("schema"===options.url)switch(options.table){case SalesOrder10s.name:return resolve([{schema:"default",tables:[SalesOrder10s]}]);case SalesOrder3s.name:return resolve([{schema:"default",tables:[SalesOrder3s]}]);case SalesOrder.name:return resolve([{schema:"default",tables:[SalesOrder]}]);case"Empty":return resolve([{schema:"default",tables:[{name:"Empty",columns:[]}]}]);default:return'SELECT * FROM "SalesOrder"'===options.statement?resolve([{schema:"default",tables:[SalesOrder]}]):resolve([{schema:"default",tables:[{name:"Inventory",label:"库存",columns:[{name:"product",label:"产品",type:"string"},{name:"productCategory",label:"产品类别",type:"string"},{name:"sales",label:"销售额",type:"number"},{name:"quantity",label:"销售量",type:"number"}]}]}])}}else if("post"===options.method&&"query"===options.url){const results=[];if(options.body?.statement?.includes("AS `memberKey`")){const data=[];return(0,_ngneat_falso__WEBPACK_IMPORTED_MODULE_3__.mJl)({length:3}).forEach((product=>{data.push({memberKey:product,memberCaption:product}),(0,_ngneat_falso__WEBPACK_IMPORTED_MODULE_3__.mJl)({length:3}).filter((product2=>!data.find((item=>item.memberKey===product2)))).forEach((product2=>{data.push({memberKey:product2,memberCaption:product2,parentKey:product}),(0,_ngneat_falso__WEBPACK_IMPORTED_MODULE_3__.mJl)({length:5}).filter((product=>!data.find((item=>item.memberKey===product)))).forEach((product3=>{data.push({memberKey:product3,memberCaption:product3,parentKey:product2})}))}))})),resolve({data,columns:[{name:"memberKey",label:"成员 Key",type:"string"},{name:"parentKey",label:"父级 Key",type:"string"}]})}if(options.body?.statement?.includes('"Department" AS "Department"')){let departmentCode=0;return(0,_ngneat_falso__WEBPACK_IMPORTED_MODULE_3__.T1i)({length:5}).forEach((name=>{departmentCode++;const department1=departmentCode;results.push({Department:department1,DepartmentName:name,quantity:(0,_ngneat_falso__WEBPACK_IMPORTED_MODULE_3__.Qyw)()}),(0,_ngneat_falso__WEBPACK_IMPORTED_MODULE_3__.T1i)({length:5}).forEach((name=>{departmentCode++;const department2=departmentCode;results.push({Department:department2,DepartmentName:name,DepartmentParent:department1,quantity:(0,_ngneat_falso__WEBPACK_IMPORTED_MODULE_3__.Qyw)()}),(0,_ngneat_falso__WEBPACK_IMPORTED_MODULE_3__.T1i)({length:3}).forEach((name=>{departmentCode++;const department3=departmentCode;results.push({Department:department3,DepartmentName:name,DepartmentParent:department2,quantity:(0,_ngneat_falso__WEBPACK_IMPORTED_MODULE_3__.Qyw)()})}))}))})),resolve({data:results,columns:[{name:"Department",label:"部门",type:"string"},{name:"DepartmentName",label:"部门",type:"string"},{name:"DepartmentParent",label:"上级部门",type:"string"}]})}return(0,_ngneat_falso__WEBPACK_IMPORTED_MODULE_3__.ALu)({length:3}).forEach((productCategory=>{const DepartmentParent=(0,_ngneat_falso__WEBPACK_IMPORTED_MODULE_3__.T1i)();(0,_ngneat_falso__WEBPACK_IMPORTED_MODULE_3__.mJl)({length:5}).forEach((product=>{results.push({OrderId:(0,_ngneat_falso__WEBPACK_IMPORTED_MODULE_3__.s8S)(),"[Product]":(0,_ngneat_falso__WEBPACK_IMPORTED_MODULE_3__.s8S)(),"[Product].[MEMBER_CAPTION]":product,productCategory,Department:(0,_ngneat_falso__WEBPACK_IMPORTED_MODULE_3__.T1i)(),DepartmentParent,Sales:(0,_ngneat_falso__WEBPACK_IMPORTED_MODULE_3__.Qyw)(),quantity:(0,_ngneat_falso__WEBPACK_IMPORTED_MODULE_3__.Qyw)()})}))})),options.body?.statement?.includes(SalesOrder10s.name)?void setTimeout((()=>{resolve({data:results,columns})}),1e4):options.body?.statement?.includes(SalesOrder3s.name)?void setTimeout((()=>{resolve({data:results,columns})}),3e3):options.body?.statement?.includes("empty_")?resolve({data:[],columns:[]}):void setTimeout((()=>{resolve({data:results,columns:[{name:"OrderId",label:"订单号",type:"string"},{name:"[Product]",label:"产品",type:"string"},{name:"productCategory",label:"产品类别",type:"string"},{name:"[Department]",label:"部门",type:"string"},{name:"[DepartmentParent]",label:"上级部门",type:"string"}]})}),1e3)}resolve({})}))}};MockAgent=(0,tslib__WEBPACK_IMPORTED_MODULE_4__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Injectable)()],MockAgent)},"./packages/angular/analytical-card/analytical-card.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Appearance:()=>Appearance,ChartTypes:()=>ChartTypes,DrillDimensions:()=>DrillDimensions,Empty:()=>Empty,Error:()=>analytical_card_component_stories_Error,HideButtons:()=>HideButtons,Loading:()=>Loading,Primary:()=>Primary,SetOptionError:()=>SetOptionError,__namedExportsOrder:()=>__namedExportsOrder,default:()=>analytical_card_component_stories});var _NgxEchartsDirective,asyncToGenerator=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),animations=__webpack_require__("./node_modules/@angular/platform-browser/fesm2022/animations.mjs"),missing_tanslation=__webpack_require__("./packages/angular/core/i18n/missing-tanslation.ts"),core_module=__webpack_require__("./packages/angular/core/core.module.ts"),core_service=__webpack_require__("./packages/angular/core/core.service.ts"),types=__webpack_require__("./packages/angular/core/types.ts"),displayDensity=__webpack_require__("./packages/angular/core/directives/displayDensity.ts"),src=__webpack_require__("./packages/core/src/index.ts"),ngx_translate_core=__webpack_require__("./node_modules/@ngx-translate/core/dist/fesm2022/ngx-translate-core.mjs"),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),Subject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js"),scheduler_async=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/scheduler/async.js"),Observable=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Observable.js"),throttleTime=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/throttleTime.js"),switchMap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/switchMap.js"),of=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js"),empty=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/empty.js");class ChangeFilter{constructor(changes){this.changes=changes}static of(changes){return new ChangeFilter(changes)}notEmpty(key){if(this.changes[key]){const value=this.changes[key].currentValue;if(null!=value)return(0,of.of)(value)}return empty.E}has(key){if(this.changes[key]){const value=this.changes[key].currentValue;return(0,of.of)(value)}return empty.E}notFirst(key){if(this.changes[key]&&!this.changes[key].isFirstChange()){const value=this.changes[key].currentValue;return(0,of.of)(value)}return empty.E}notFirstAndEmpty(key){if(this.changes[key]&&!this.changes[key].isFirstChange()){const value=this.changes[key].currentValue;if(null!=value)return(0,of.of)(value)}return empty.E}}const NGX_ECHARTS_CONFIG=new core.InjectionToken("NGX_ECHARTS_CONFIG");let NgxEchartsDirective=(_NgxEchartsDirective=class NgxEchartsDirective{constructor(config,el,ngZone){this.el=el,this.ngZone=ngZone,this.autoResize=!0,this.loadingType="default",this.chartInit=new core.EventEmitter,this.optionsError=new core.EventEmitter,this.chartClick=this.createLazyEvent("click"),this.chartDblClick=this.createLazyEvent("dblclick"),this.chartMouseDown=this.createLazyEvent("mousedown"),this.chartMouseMove=this.createLazyEvent("mousemove"),this.chartMouseUp=this.createLazyEvent("mouseup"),this.chartMouseOver=this.createLazyEvent("mouseover"),this.chartMouseOut=this.createLazyEvent("mouseout"),this.chartGlobalOut=this.createLazyEvent("globalout"),this.chartContextMenu=this.createLazyEvent("contextmenu"),this.chartLegendSelectChanged=this.createLazyEvent("legendselectchanged"),this.chartLegendSelected=this.createLazyEvent("legendselected"),this.chartLegendUnselected=this.createLazyEvent("legendunselected"),this.chartLegendScroll=this.createLazyEvent("legendscroll"),this.chartDataZoom=this.createLazyEvent("datazoom"),this.chartDataRangeSelected=this.createLazyEvent("datarangeselected"),this.chartTimelineChanged=this.createLazyEvent("timelinechanged"),this.chartTimelinePlayChanged=this.createLazyEvent("timelineplaychanged"),this.chartRestore=this.createLazyEvent("restore"),this.chartDataViewChanged=this.createLazyEvent("dataviewchanged"),this.chartMagicTypeChanged=this.createLazyEvent("magictypechanged"),this.chartPieSelectChanged=this.createLazyEvent("pieselectchanged"),this.chartPieSelected=this.createLazyEvent("pieselected"),this.chartPieUnselected=this.createLazyEvent("pieunselected"),this.chartMapSelectChanged=this.createLazyEvent("mapselectchanged"),this.chartMapSelected=this.createLazyEvent("mapselected"),this.chartMapUnselected=this.createLazyEvent("mapunselected"),this.chartAxisAreaSelected=this.createLazyEvent("axisareaselected"),this.chartFocusNodeAdjacency=this.createLazyEvent("focusnodeadjacency"),this.chartUnfocusNodeAdjacency=this.createLazyEvent("unfocusnodeadjacency"),this.chartBrush=this.createLazyEvent("brush"),this.chartBrushEnd=this.createLazyEvent("brushend"),this.chartBrushSelected=this.createLazyEvent("brushselected"),this.chartRendered=this.createLazyEvent("rendered"),this.chartFinished=this.createLazyEvent("finished"),this.animationFrameID=null,this.resize$=new Subject.x,this.echarts=config.echarts}ngOnChanges(changes){const filter=ChangeFilter.of(changes);filter.notFirstAndEmpty("options").subscribe((opt=>this.onOptionsChange(opt))),filter.notFirstAndEmpty("merge").subscribe((opt=>this.setOption(opt))),filter.has("loading").subscribe((v=>this.toggleLoading(!!v))),filter.notFirst("theme").subscribe((()=>this.refreshChart()))}ngOnInit(){if(!window.ResizeObserver)throw new Error("please install a polyfill for ResizeObserver");this.resizeSub=this.resize$.pipe((0,throttleTime.p)(100,scheduler_async.z,{leading:!1,trailing:!0})).subscribe((()=>this.resize())),this.autoResize&&(this.resizeOb=this.ngZone.runOutsideAngular((()=>new window.ResizeObserver((()=>{this.animationFrameID=window.requestAnimationFrame((()=>this.resize$.next()))})))),this.resizeOb.observe(this.el.nativeElement))}ngOnDestroy(){window.clearTimeout(this.initChartTimer),this.resizeSub&&this.resizeSub.unsubscribe(),this.animationFrameID&&window.cancelAnimationFrame(this.animationFrameID),this.resizeOb&&this.resizeOb.unobserve(this.el.nativeElement),this.dispose()}ngAfterViewInit(){this.initChartTimer=window.setTimeout((()=>this.initChart()))}dispose(){this.chart&&(this.chart.isDisposed()||this.chart.dispose(),this.chart=null)}resize(){this.chart&&this.chart.resize()}toggleLoading(loading){this.chart&&(loading?this.chart.showLoading(this.loadingType,this.loadingOpts):this.chart.hideLoading())}setOption(option,opts){if(this.chart)try{this.chart.setOption(option,opts)}catch(e){console.error(e),this.dispose(),this.optionsError.emit(e)}}refreshChart(){var _this=this;return(0,asyncToGenerator.Z)((function*(){_this.dispose(),yield _this.initChart()}))()}createChart(){const dom=this.el.nativeElement;if(window&&window.getComputedStyle){const prop=window.getComputedStyle(dom,null).getPropertyValue("height");prop&&"0px"!==prop||dom.style.height&&"0px"!==dom.style.height||(dom.style.height="400px")}return this.ngZone.runOutsideAngular((()=>("function"==typeof this.echarts?this.echarts:()=>Promise.resolve(this.echarts))().then((({init})=>init(dom,this.theme,this.initOpts)))))}initChart(){var _this2=this;return(0,asyncToGenerator.Z)((function*(){yield _this2.onOptionsChange(_this2.options),_this2.merge&&_this2.chart&&_this2.setOption(_this2.merge)}))()}onOptionsChange(opt){var _this3=this;return(0,asyncToGenerator.Z)((function*(){opt&&(_this3.chart||(_this3.chart=yield _this3.createChart(),_this3.chartInit.emit(_this3.chart)),_this3.setOption(_this3.options,!0))}))()}createLazyEvent(eventName){return this.chartInit.pipe((0,switchMap.w)((chart=>new Observable.y((observer=>(chart.on(eventName,(data=>this.ngZone.run((()=>observer.next(data))))),()=>{this.chart&&(this.chart.isDisposed()||chart.off(eventName))}))))))}},_NgxEchartsDirective.ctorParameters=()=>[{type:void 0,decorators:[{type:core.Inject,args:[NGX_ECHARTS_CONFIG]}]},{type:core.ElementRef},{type:core.NgZone}],_NgxEchartsDirective.propDecorators={options:[{type:core.Input}],theme:[{type:core.Input}],loading:[{type:core.Input}],initOpts:[{type:core.Input}],merge:[{type:core.Input}],autoResize:[{type:core.Input}],loadingType:[{type:core.Input}],loadingOpts:[{type:core.Input}],chartInit:[{type:core.Output}],optionsError:[{type:core.Output}],chartClick:[{type:core.Output}],chartDblClick:[{type:core.Output}],chartMouseDown:[{type:core.Output}],chartMouseMove:[{type:core.Output}],chartMouseUp:[{type:core.Output}],chartMouseOver:[{type:core.Output}],chartMouseOut:[{type:core.Output}],chartGlobalOut:[{type:core.Output}],chartContextMenu:[{type:core.Output}],chartLegendSelectChanged:[{type:core.Output}],chartLegendSelected:[{type:core.Output}],chartLegendUnselected:[{type:core.Output}],chartLegendScroll:[{type:core.Output}],chartDataZoom:[{type:core.Output}],chartDataRangeSelected:[{type:core.Output}],chartTimelineChanged:[{type:core.Output}],chartTimelinePlayChanged:[{type:core.Output}],chartRestore:[{type:core.Output}],chartDataViewChanged:[{type:core.Output}],chartMagicTypeChanged:[{type:core.Output}],chartPieSelectChanged:[{type:core.Output}],chartPieSelected:[{type:core.Output}],chartPieUnselected:[{type:core.Output}],chartMapSelectChanged:[{type:core.Output}],chartMapSelected:[{type:core.Output}],chartMapUnselected:[{type:core.Output}],chartAxisAreaSelected:[{type:core.Output}],chartFocusNodeAdjacency:[{type:core.Output}],chartUnfocusNodeAdjacency:[{type:core.Output}],chartBrush:[{type:core.Output}],chartBrushEnd:[{type:core.Output}],chartBrushSelected:[{type:core.Output}],chartRendered:[{type:core.Output}],chartFinished:[{type:core.Output}]},_NgxEchartsDirective);var NgxEchartsModule_1;NgxEchartsDirective=(0,tslib_es6.gn)([(0,core.Directive)({selector:"echarts, [echarts]",exportAs:"echarts"}),(0,tslib_es6.w6)("design:paramtypes",[Object,core.ElementRef,core.NgZone])],NgxEchartsDirective);let NgxEchartsModule=NgxEchartsModule_1=class NgxEchartsModule{static forRoot(config){return{ngModule:NgxEchartsModule_1,providers:[{provide:NGX_ECHARTS_CONFIG,useValue:config}]}}static forChild(){return{ngModule:NgxEchartsModule_1}}};NgxEchartsModule=NgxEchartsModule_1=(0,tslib_es6.gn)([(0,core.NgModule)({imports:[],declarations:[NgxEchartsDirective],exports:[NgxEchartsDirective]})],NgxEchartsModule);var zhHans=__webpack_require__("./packages/angular/i18n/zhHans.ts"),agent_mock_service=__webpack_require__("./packages/angular/mock/agent-mock.service.ts"),classPrivateFieldInitSpec=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js"),classPrivateFieldGet2=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet2.js"),classPrivateFieldSet2=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet2.js");var analytical_card_componentngResource=__webpack_require__("./packages/angular/analytical-card/analytical-card.component.scss?ngResource"),analytical_card_componentngResource_default=__webpack_require__.n(analytical_card_componentngResource),csv=__webpack_require__("./packages/angular/core/services/csv.ts"),install=__webpack_require__("./node_modules/echarts/lib/chart/bar/install.js"),extension=__webpack_require__("./node_modules/echarts/lib/extension.js"),LinearGradient=__webpack_require__("./node_modules/zrender/lib/graphic/LinearGradient.js"),includes=__webpack_require__("./node_modules/lodash-es/includes.js"),sumBy=__webpack_require__("./node_modules/lodash-es/sumBy.js"),indexOf=__webpack_require__("./node_modules/lodash-es/indexOf.js"),isNumber=__webpack_require__("./node_modules/lodash-es/isNumber.js"),find=__webpack_require__("./node_modules/lodash-es/find.js");const DEFAULT_DIGIT_INFO="0.2";function formatNumber(n,locale,digitsInfo){let[,fractionDigits]=(digitsInfo??DEFAULT_DIGIT_INFO).split(".");return fractionDigits=fractionDigits.split("-")[1]??fractionDigits,Number(n.toFixed(Number(fractionDigits))).toLocaleString(locale)}var AxisEnum;!function(AxisEnum){AxisEnum.x="xAxis",AxisEnum.y="yAxis",AxisEnum.xAxis="x",AxisEnum.yAxis="y",AxisEnum.radius="radiusAxis",AxisEnum.angle="angleAxis",AxisEnum.radiusAxis="radius",AxisEnum.angleAxis="angle",AxisEnum.singleAxis="singleAxis"}(AxisEnum||(AxisEnum={}));const FORMAT_LOCALE_DATA={en:{lang:"en-US",shortNumberFactor:3,shortNumberUnits:"K,M,B,T,Q"},"zh-Hans":{lang:"zh-Hans",shortNumberFactor:4,shortNumberUnits:"万,亿,万亿"}},isCoordinateCartesian2d=toBe=>"Cartesian2d"===toBe?.type,isCoordinateSingleAxis=toBe=>"SingleAxis"===toBe?.type,isCoordinatePolar=toBe=>"Polar"===toBe?.type,isCoordinateCalendar=toBe=>"Calendar"===toBe?.type,isSeriesDataItem=toBe=>(0,src.vJr)(toBe?.value)&&(0,src.vJr)(toBe?.slicer);function totalMeasureName(measure){return`__total_${measure}__`}function defaultDigitsInfo(measure){return measure.formatting?.digitsInfo||`0.0-${measure.formatting?.decimal??1}`}function formatMeasureValue(measure,property,value,locale,shortNumber){if((0,isNumber.Z)(value)){const digitsInfo=defaultDigitsInfo(measure),unit=measure.formatting?.unit??(0,src.Nps)(property);if("%"===unit&&(value*=100),measure.formatting?.shortNumber??shortNumber){const[short,shortUnit]=formatShortNumber(value,locale);return{value:formatNumber(short,locale,digitsInfo),shortUnit,unit}}return{value:formatNumber(value,locale,digitsInfo),unit}}return{}}function formatMeasureNumber({measure,property},value,locale,shortNumber){const{value:digitsNumber,shortUnit,unit}=formatMeasureValue(measure,property,value,locale,shortNumber);let result=digitsNumber;return shortUnit&&(result+=`${shortUnit}`),unit&&(result+=`${unit}`),result}function _formatDimensionValue(item,key,caption,displayBehaviour,dataType){return item&&key?"Edm.DateTime"===dataType?(item[key],"XXXXXXX"):(0,src.NSM)({key:item[key],value:item[key],label:item[caption],caption:item[caption]},displayBehaviour):""}function formatMeasureLabel(item,{measure,property},locale,shortNumber){if(!item)return"-";const value=formatMeasureNumber({measure,property},item[measure.measure],locale,shortNumber);return`${property?.caption||measure.measure}: ${value??item[measure.measure]??"-"}`}function formatShortNumber(value,locale="en",factor,shortUnits){try{const num=function strToNumber(value){if("string"==typeof value&&!isNaN(Number(value)-parseFloat(value)))return Number(value);if("number"!=typeof value)throw new Error(`${value} is not a number`);return value}(value),localeData=FORMAT_LOCALE_DATA[locale];factor=factor||localeData?.shortNumberFactor;let resultValue=num,resultName="";const units=(shortUnits=shortUnits||localeData?.shortNumberUnits).split(",").reverse();return units.every(((unitName,i)=>{const rounder=Math.pow(10,(units.length-i)*factor);return!(Math.abs(num)>=rounder)||(resultValue=num/rounder,resultName=unitName,!1)})),[Number(resultValue),resultName]}catch(error){throw new Error("Invalid Short Number Argument")}}function formatCategoryLabel(value,valueTexts,category){const label=valueTexts?.get(value)||"";return(0,src.NSM)({key:`${value}`,value,label,caption:label},(0,src.Xpx)(category))}function echartsFormatNumber(value,digitsInfo,shortNumber,locale){if((0,isNumber.Z)(value)){if(shortNumber){const[short,unit]=formatShortNumber(value,locale);return formatNumber(short,locale,digitsInfo)+unit}return formatNumber(value,locale,digitsInfo)}return"-"}const DefaultValueFormatter=value=>formatNumber(value,"zh-Hans");function axisOrient(orient){return orient===src.lST.horizontal?[AxisEnum.y,AxisEnum.x]:[AxisEnum.x,AxisEnum.y]}function getCategoryAxis(context,items,dimension,categoryProperty,chartOptions,measure,categoryType="category"){const{entityType}=context,axisPointer=function getCategoryAxisPointer(context,items,category,measure){const{entityType}=context,categoryProperty=(0,src.jEU)(entityType,category),categoryCaption=(0,src.Imp)(category,entityType),dataset=context.datasets?.find((({dataset})=>!dataset.measure||dataset.measure===measure)),axisPointer={label:{}};return axisPointer.label.formatter=params=>{let label;return label=dataset?.dataset.categories?dataset.dataset.categories.find((item=>item.value===params.value))?.label:items.find((item=>item[categoryProperty.name]===params.value))?.[categoryCaption],label||params.value},axisPointer}(context,items,dimension,measure);let categoryAxis={type:categoryType,axisPointer};return function setCategoryAxisLabel(category,items,chartCategory,entityType){const behaviour=chartCategory.displayBehaviour,property=(0,src.jEU)(entityType,chartCategory),caption=(0,src.Imp)(chartCategory,entityType);category.axisLabel=category.axisLabel||{},category.axisLabel.formatter=(value,index)=>{const textName=caption;if(textName){const item=(0,find.Z)(items,(item=>item[property.name]===value));if(item)return(0,src.NSM)({key:item[property.name],caption:item[textName]},behaviour)}return value}}(categoryAxis,items,dimension,entityType),categoryAxis=(0,src.kg4)(categoryAxis,chartOptions?.categoryAxis,2),chartOptions?.categoryAxis?.showName&&(categoryAxis.name=categoryProperty.caption),(0,src.kg4)(categoryAxis,dimension.chartOptions?.axis,2)}function getValueAxis(chartAnnotation,entityType,chartOptions,locale){const axis1=getMeasureAxis(chartAnnotation,src.rRL.Axis1,0),axis2=getMeasureAxis(chartAnnotation,src.rRL.Axis2,1);if(!axis1)throw new Error("需要配置的主度量轴");const axis1Property=(0,src.ZBB)(entityType,axis1);let valueAxis={type:"value",axisLabel:{formatter:(value,index)=>formatMeasureNumber({measure:axis1,property:axis1Property},value,locale)}};if(axis1.chartOptions?.axis?.showName&&(valueAxis.name=axis1Property.caption),valueAxis=(0,src.kg4)((0,src.kg4)(valueAxis,chartOptions?.valueAxis),axis1.chartOptions?.axis),axis2){const axis2Property=(0,src.ZBB)(entityType,axis2);let valueAxis2={type:"value",axisLabel:{formatter:(value,index)=>formatMeasureNumber({measure:axis2,property:axis2Property},value,locale)}};return axis2.chartOptions?.axis?.showName&&(valueAxis2.name=axis2Property.caption),valueAxis2=(0,src.kg4)((0,src.kg4)(valueAxis2,chartOptions?.valueAxis),axis2.chartOptions?.axis),[valueAxis,valueAxis2]}return[valueAxis]}function getMeasureAxis(chartAnnotation,role,index){return chartAnnotation.measures.find((item=>item.role===role))||chartAnnotation.measures.filter((item=>!item.role))?.[index]}const md5=function(d){var r=function M(d){for(var _,m="0123456789ABCDEF",f="",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}(function V(d){for(var _="",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}(function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}(function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}(d),8*d.length)));return r.toLowerCase()};function md5_cmn(d,_,m,f,r,i){return safe_add(function bit_rol(d,_){return d<<_|d>>>32-_}(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function pickEChartsGlobalOptions(options){return(0,src.eiS)(options,"title","darkMode","color","backgroundColor","textStyle","animation","animationThreshold","animationDuration","animationEasing","animationDelay","animationDurationUpdate","animationEasingUpdate","animationDelayUpdate","blendMode","hoverLayerThreshold","useUTC","media")}function mergeChartOptions(source,omits,...options){return options.reduce(((source,item)=>(0,src.kg4)(source,(0,src.CEd)(item,...omits??[]),Number.MAX_SAFE_INTEGER)),source)}function getAxisDataZooms(dimension,orient,hierarchy){const dataZooms=[],dataZoom=dimension?.chartOptions?.dataZoom;return dataZoom&&(dataZoom.type?.includes(src.cVA.slider)&&dataZooms.push(mergeChartOptions((0,src.ezT)({type:src.cVA.slider,xAxisIndex:orient===AxisEnum.x?0:null,yAxisIndex:orient===AxisEnum.y?0:null}),["type"],dataZoom)),dataZoom.type?.includes(src.cVA.inside)&&dataZooms.push(mergeChartOptions((0,src.ezT)({type:src.cVA.inside,xAxisIndex:orient===AxisEnum.x?0:null,yAxisIndex:orient===AxisEnum.y?0:null}),["type"],dataZoom))),dataZooms}var get=__webpack_require__("./node_modules/lodash-es/get.js");const ZhHans={Error:{CantFoundPrimaryCategory:"未找到主类别维度"}},ZhHant={};function getCoordinateSystem(context,items,locale){const{chartAnnotation,entityType,options:chartOptions}=context,measure=chartAnnotation.measures.find((item=>!item.role||item.role===src.rRL.Axis1))?.measure,[categoryOrient,valueOrient]=axisOrient(chartAnnotation.chartType.orient),category=(0,src.e6_)(chartAnnotation),category2=(0,src.rlo)(chartAnnotation);if("Scatter"===chartAnnotation.chartType.type){const axis1=getMeasureAxis(chartAnnotation,src.rRL.Axis1,0),axis2=getMeasureAxis(chartAnnotation,src.rRL.Axis2,1),valueAxises=getValueAxis(chartAnnotation,entityType,chartOptions,locale);return{categoryAxis:{orient:categoryOrient,axis:[valueAxises[0]],dataZooms:getAxisDataZooms(axis1,AxisEnum.x)},valueAxis:{orient:valueOrient,axis:[valueAxises[1]],dataZooms:getAxisDataZooms(axis2,AxisEnum.y)}}}{if(!category)throw new Error(function instantiateI18n(locale,code,def){return"zh-Hans"===locale?(0,get.Z)(ZhHans,code)??def:"zh-Hant"===locale?(0,get.Z)(ZhHant,code)??def:def}(locale,"Error.CantFoundPrimaryCategory","Can't found primary category dimension"));let valueAxis=null;const categoryAxis=getCategoryAxis(context,items,category,(0,src.jEU)(entityType,category),chartOptions,measure);return categoryAxis.orient=categoryOrient,valueAxis=category2?[getCategoryAxis(context,items,category2,(0,src.jEU)(entityType,category2),chartOptions,measure)]:getValueAxis(chartAnnotation,entityType,chartOptions,locale),valueAxis.orient=valueOrient,{categoryAxis:{orient:categoryOrient,axis:[categoryAxis],dataZooms:getAxisDataZooms(category,categoryOrient)},valueAxis:{orient:valueOrient,axis:valueAxis,dataZooms:getAxisDataZooms(category2||chartAnnotation.measures[0],valueOrient)}}}}function getPolarCoordinateSystem(context,items,locale){const{chartAnnotation,entityType,options:chartOptions}=context,measure=chartAnnotation.measures.find((item=>!item.role||item.role===src.rRL.Axis1))?.measure,[categoryOrient,valueOrient]=chartAnnotation.chartType.orient===src.lST.vertical?[AxisEnum.angle,AxisEnum.radius]:[AxisEnum.radius,AxisEnum.angle],category=(0,src.e6_)(chartAnnotation),category2=(0,src.rlo)(chartAnnotation);let valueAxis=null;const categoryAxis=getCategoryAxis(context,items,category,(0,src.jEU)(entityType,category),chartOptions,measure);return categoryAxis.orient=categoryOrient,valueAxis=category2?[getCategoryAxis(context,items,category2,(0,src.jEU)(entityType,category2),chartOptions,measure)]:getValueAxis(chartAnnotation,entityType,chartOptions,locale),valueAxis.orient=valueOrient,{categoryAxis:{orient:categoryOrient,axis:[categoryAxis],dataZooms:null},valueAxis:{orient:valueOrient,axis:valueAxis,dataZooms:null}}}var NxChromaticType,minBy=__webpack_require__("./node_modules/lodash-es/minBy.js"),maxBy=__webpack_require__("./node_modules/lodash-es/maxBy.js"),range=__webpack_require__("./node_modules/lodash-es/range.js"),ordinal=__webpack_require__("./node_modules/d3-scale/src/ordinal.js"),sequential=__webpack_require__("./node_modules/d3-scale/src/sequential.js"),category10=__webpack_require__("./node_modules/d3-scale-chromatic/src/categorical/category10.js"),Accent=__webpack_require__("./node_modules/d3-scale-chromatic/src/categorical/Accent.js"),Dark2=__webpack_require__("./node_modules/d3-scale-chromatic/src/categorical/Dark2.js"),Paired=__webpack_require__("./node_modules/d3-scale-chromatic/src/categorical/Paired.js"),Pastel1=__webpack_require__("./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js"),Pastel2=__webpack_require__("./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js"),Set1=__webpack_require__("./node_modules/d3-scale-chromatic/src/categorical/Set1.js"),Set2=__webpack_require__("./node_modules/d3-scale-chromatic/src/categorical/Set2.js"),Set3=__webpack_require__("./node_modules/d3-scale-chromatic/src/categorical/Set3.js"),BrBG=__webpack_require__("./node_modules/d3-scale-chromatic/src/diverging/BrBG.js"),PRGn=__webpack_require__("./node_modules/d3-scale-chromatic/src/diverging/PRGn.js"),PiYG=__webpack_require__("./node_modules/d3-scale-chromatic/src/diverging/PiYG.js"),Spectral=__webpack_require__("./node_modules/d3-scale-chromatic/src/diverging/Spectral.js"),RdBu=__webpack_require__("./node_modules/d3-scale-chromatic/src/diverging/RdBu.js"),RdGy=__webpack_require__("./node_modules/d3-scale-chromatic/src/diverging/RdGy.js"),RdYlBu=__webpack_require__("./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js"),RdYlGn=__webpack_require__("./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js"),PuOr=__webpack_require__("./node_modules/d3-scale-chromatic/src/diverging/PuOr.js"),Blues=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js"),Greens=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js"),Greys=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js"),Oranges=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js"),Purples=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js"),Reds=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js"),viridis=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js"),rainbow=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js"),cubehelix=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js"),BuGn=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js"),BuPu=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js"),GnBu=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js"),OrRd=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js"),PuBuGn=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js"),PuBu=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js"),PuRd=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js"),RdPu=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js"),YlGnBu=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js"),YlGn=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js"),YlOrBr=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js"),YlOrRd=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js"),sinebow=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js");function getChromaticScale(name,domain,reverse){const colorScheme=CHROMATICS?.find((item=>item.useValue.name===name))?.useValue;if(!colorScheme)throw new Error(`Can't find colorScheme for name '${name}'`);let scaleFun=null;return scaleFun=colorScheme.type===NxChromaticType.Categorical?reverse?(0,ordinal.Z)(Array.from(colorScheme.value).reverse()):(0,ordinal.Z)(colorScheme.value):(0,sequential.ZP)(reverse?t=>colorScheme.value(1-t):colorScheme.value),domain?scaleFun.domain(domain):scaleFun}!function(NxChromaticType){NxChromaticType.Single="Single",NxChromaticType.Sequential="Sequential",NxChromaticType.Categorical="Categorical"}(NxChromaticType||(NxChromaticType={}));const CHROMATICS=[{provide:1,useValue:{group:"Categorical",name:"Category10",type:NxChromaticType.Categorical,value:category10.Z},multi:!0},{provide:1,useValue:{group:"Categorical",name:"Accent",type:NxChromaticType.Categorical,value:Accent.Z},multi:!0},{provide:1,useValue:{group:"Categorical",name:"Dark2",type:NxChromaticType.Categorical,value:Dark2.Z},multi:!0},{provide:1,useValue:{group:"Categorical",name:"Paired",type:NxChromaticType.Categorical,value:Paired.Z},multi:!0},{provide:1,useValue:{group:"Categorical",name:"Pastel1",type:NxChromaticType.Categorical,value:Pastel1.Z},multi:!0},{provide:1,useValue:{group:"Categorical",name:"Pastel2",type:NxChromaticType.Categorical,value:Pastel2.Z},multi:!0},{provide:1,useValue:{group:"Categorical",name:"Set1",type:NxChromaticType.Categorical,value:Set1.Z},multi:!0},{provide:1,useValue:{group:"Categorical",name:"Set2",type:NxChromaticType.Categorical,value:Set2.Z},multi:!0},{provide:1,useValue:{group:"Categorical",name:"Set3",type:NxChromaticType.Categorical,value:Set3.Z},multi:!0},{provide:1,useValue:{group:"Diverging",name:"BrBG",type:NxChromaticType.Sequential,value:BrBG.Z},multi:!0},{provide:1,useValue:{group:"Diverging",name:"PRGn",type:NxChromaticType.Sequential,value:PRGn.Z},multi:!0},{provide:1,useValue:{group:"Diverging",name:"PiYG",type:NxChromaticType.Sequential,value:PiYG.Z},multi:!0},{provide:1,useValue:{group:"Diverging",name:"Spectral",type:NxChromaticType.Sequential,value:Spectral.Z},multi:!0},{provide:1,useValue:{group:"Diverging",name:"RdBu",type:NxChromaticType.Sequential,value:RdBu.Z},multi:!0},{provide:1,useValue:{group:"Diverging",name:"RdGy",type:NxChromaticType.Sequential,value:RdGy.Z},multi:!0},{provide:1,useValue:{group:"Diverging",name:"RdYlBu",type:NxChromaticType.Sequential,value:RdYlBu.Z},multi:!0},{provide:1,useValue:{group:"Diverging",name:"RdYlGn",type:NxChromaticType.Sequential,value:RdYlGn.Z},multi:!0},{provide:1,useValue:{group:"Diverging",name:"PuOr",type:NxChromaticType.Sequential,value:PuOr.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Single Hue)",name:"Blues",type:NxChromaticType.Sequential,value:Blues.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Single Hue)",name:"Greens",type:NxChromaticType.Sequential,value:Greens.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Single Hue)",name:"Greys",type:NxChromaticType.Sequential,value:Greys.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Single Hue)",name:"Oranges",type:NxChromaticType.Sequential,value:Oranges.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Single Hue)",name:"Purples",type:NxChromaticType.Sequential,value:Purples.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Single Hue)",name:"Reds",type:NxChromaticType.Sequential,value:Reds.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"Viridis",type:NxChromaticType.Sequential,value:viridis.ZP},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"Inferno",type:NxChromaticType.Sequential,value:viridis.yy},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"Magma",type:NxChromaticType.Sequential,value:viridis.uX},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"Plasma",type:NxChromaticType.Sequential,value:viridis.zD},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"Warm",type:NxChromaticType.Sequential,value:rainbow.s7},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"Cool",type:NxChromaticType.Sequential,value:rainbow.H7},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"Cubehelix",type:NxChromaticType.Sequential,value:cubehelix.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"BuGn",type:NxChromaticType.Sequential,value:BuGn.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"BuPu",type:NxChromaticType.Sequential,value:BuPu.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"GnBu",type:NxChromaticType.Sequential,value:GnBu.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"OrRd",type:NxChromaticType.Sequential,value:OrRd.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"PuBuGn",type:NxChromaticType.Sequential,value:PuBuGn.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"PuBu",type:NxChromaticType.Sequential,value:PuBu.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"PuRd",type:NxChromaticType.Sequential,value:PuRd.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"RdPu",type:NxChromaticType.Sequential,value:RdPu.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"YlGnBu",type:NxChromaticType.Sequential,value:YlGnBu.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"YlGn",type:NxChromaticType.Sequential,value:YlGn.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"YlOrBr",type:NxChromaticType.Sequential,value:YlOrBr.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"YlOrRd",type:NxChromaticType.Sequential,value:YlOrRd.Z},multi:!0},{provide:1,useValue:{group:"Cyclical",name:"Rainbow",value:rainbow.ZP},multi:!0},{provide:1,useValue:{group:"Cyclical",name:"Sinebow",value:sinebow.Z},multi:!0}];function dimensionVisualMaps(dimension,chartAnnotation,dataset,entityType){const{measures}=chartAnnotation,visualMaps=[];return measures.forEach((chartMeasure=>{[src.rRL.Size,src.rRL.Lightness,src.rRL.SizeLightness].includes(chartMeasure.role)?visualMaps.push(getSymbolSizeVisualMap(chartMeasure,(0,src.ZBB)(entityType,chartMeasure),dataset)):chartMeasure.palette&&visualMaps.push(getMeasurePaletteVisualMap(chartMeasure,dataset.source,(0,src.ZBB)(entityType,chartMeasure)))})),(0,src.oA$)(visualMaps)}function getMeasurePaletteVisualMap(chartMeasure,data,property){if(!chartMeasure?.palette)return null;const{measure,palette,domain}=chartMeasure,dataMin=(0,minBy.Z)(data,measure)?.[measure],dataMax=(0,maxBy.Z)(data,measure)?.[measure],dataSize=data.length,_domain=domain||[dataMin,dataMax],inRange={color:[]};if(palette?.colors)inRange.color=palette.colors;else{if(!palette?.name)return null;{const colorFun=getChromaticScale(palette.name,[0,dataSize-1],palette.reverse);inRange.color=(0,range.Z)(dataSize).map((i=>colorFun(i)))}}return(0,src.kg4)({show:!1,type:"continuous",text:[property.caption||property.name],min:_domain[0],max:_domain[1],dimension:measure,inRange,formatter:value=>(0,src.nt_)(value,chartMeasure.formatting)},chartMeasure.chartOptions?.visualMap,Number.MAX_SAFE_INTEGER)}function getSymbolSizeVisualMap(measure,property,dataset){const _dataset=Array.isArray(dataset)?dataset[0]:dataset,dataMin=(0,minBy.Z)(_dataset.source,measure.measure)?.[measure.measure],dataMax=(0,maxBy.Z)(_dataset.source,measure.measure)?.[measure.measure],inRange={},outOfRange={},controller={};return measure.role!==src.rRL.Size&&measure.role!==src.rRL.SizeLightness||(inRange.symbolSize=[10,70],outOfRange.symbolSize=[10,70],controller.symbolSize=[10,70]),measure.role!==src.rRL.Lightness&&measure.role!==src.rRL.SizeLightness||(inRange.colorLightness=[.9,.5],outOfRange.colorLightness=[1],controller.colorLightness=[.9,.5]),measure.palette?.colors?.length&&(inRange.color=measure.palette.colors,outOfRange.color=["grey"],controller.color=measure.palette.colors),(0,src.kg4)({dimension:_dataset.dimensions?_dataset.dimensions.indexOf(measure.measure):measure.measure,min:dataMin,max:dataMax,calculable:!0,precision:.1,text:[property.caption||property.name],textGap:30,inRange,outOfRange,controller,formatter:value=>(0,src.nt_)(value,measure.formatting)},measure.chartOptions?.visualMap,Number.MAX_SAFE_INTEGER)}function dimensionToSeriesComponent(name,dimension,measures,data,entityType,settings){const property=(0,src.ZBB)(entityType,dimension),tooltips=measures.filter((({role})=>role===src.rRL.Tooltip));return{id:settings?.universalTransition?(0,src.Ex7)(dimension):null,name:name??property.caption??property.name,label:property?.caption,property,dataSize:data.length,tooltip:tooltips.map((({measure})=>measure)),sizeMeasure:measures.find((({role})=>role===src.rRL.Size)),lightnessMeasure:measures.find((({role})=>role===src.rRL.Lightness))}}function measuresToSeriesComponents(measures,data,entityType,settings){const tooltips=measures.filter((({role})=>role===src.rRL.Tooltip));return measures.filter((({role})=>!(0,includes.Z)([src.rRL.Tooltip,src.rRL.Size,src.rRL.Lightness],role))).map((measure=>{const measureName=(0,src.e_i)(measure),measureProperty=(0,src.ZBB)(entityType,measure),valueAxisIndex=measure.role===src.rRL.Axis2?1:0,dataNotNull=data.filter((item=>!(0,src.kKJ)(item[measureName]))),minItem=(0,minBy.Z)(dataNotNull,measureName),maxItem=(0,maxBy.Z)(dataNotNull,measureName);return{...measure,id:(0,src.e_i)(measure),name:measureProperty?.caption,label:measureProperty?.caption,seriesType:measure.shapeType,property:measureProperty,dataMin:minItem?.[measureName],dataMax:maxItem?.[measureName],dataSize:data.length,valueAxisIndex,tooltip:tooltips.map((({measure})=>measure)),sizeMeasure:measures.find((({role})=>role===src.rRL.Size)),lightnessMeasure:measures.find((({role})=>role===src.rRL.Lightness))}}))}function serializeSeriesComponent(dataset,seriesComponent,entityType,valueAxis,settings,options){const visualMaps=[],series={member:seriesComponent.member,id:seriesComponent.id,name:seriesComponent.name??seriesComponent.id,caption:seriesComponent.caption,type:seriesComponent.seriesType,measure:seriesComponent.measure,datasetIndex:seriesComponent.datasetIndex,seriesLayoutBy:seriesComponent.seriesLayoutBy,stack:seriesComponent.seriesStack,universalTransition:settings?.universalTransition,selectedMode:"single"},visualMap={text:seriesComponent.property?.caption?[seriesComponent.property?.caption]:null,min:Number(seriesComponent.domain?.[0]??seriesComponent.dataMin),max:Number(seriesComponent.domain?.[1]??seriesComponent.dataMax)};if(seriesComponent.palette?.name||seriesComponent.palette?.colors){const inRange={};if(seriesComponent.palette.colors)inRange.color=seriesComponent.palette.colors;else if(seriesComponent.palette.name){const rangeSize=Math.max(Math.min(seriesComponent.dataSize,20),10),colorFun=getChromaticScale(seriesComponent.palette.name,[0,rangeSize-1],seriesComponent.palette.reverse);inRange.color=(0,range.Z)(rangeSize).map((i=>colorFun(i)))}series.color=function getLegendColorForVisualMap(colors){if(colors&&colors.length>2)return new LinearGradient.Z(0,0,1,0,[{offset:0,color:colors[0]},{offset:.5,color:colors[Math.floor(colors.length/2)]},{offset:1,color:colors[colors.length-1]}]);if(colors&&colors.length>1)return new LinearGradient.Z(0,0,1,0,[{offset:0,color:colors[0]},{offset:1,color:colors[colors.length-1]}]);if(colors&&colors.length>0)return colors[0];return}(inRange.color),visualMaps.push(mergeChartOptions({...visualMap,show:!1,type:"continuous",inRange,dimension:seriesComponent.visualMapDimension??getVisualMapValueAxisIndex(dataset,seriesComponent,null)},[],seriesComponent.chartOptions?.visualMap))}else seriesComponent.chartOptions?.visualMap&&visualMaps.push({...visualMap,...(0,src.ezT)(seriesComponent.chartOptions.visualMap)});if((0,src.kKJ)(seriesComponent.palette?.pattern)||(series.itemStyle=series.itemStyle??{},series.itemStyle.decal=[{dashArrayX:[[6,6],[0,6,6,0]],dashArrayY:[6,0],symbol:"rect",symbolSize:1},{symbol:"circle",dashArrayX:[[8,8],[0,8,8,0]],dashArrayY:[6,0],symbolSize:1},{dashArrayY:[2,5],rotation:-.785},{dashArrayY:[2,5],rotation:.5},{dashArrayX:[1,0],dashArrayY:[4,3],rotation:-.785,symbol:"rect",symbolSize:1},{dashArrayX:[1,0],dashArrayY:[4,3],rotation:.5,symbol:"rect",symbolSize:1},{dashArrayX:[[1,0],[1,6]],dashArrayY:[1,0,6,0],symbol:"rect",symbolSize:1,symbolKeepAspect:!0,rotation:.785},{dashArrayX:[[9,9],[0,9,9,0]],dashArrayY:[7,2],symbol:"triangle",symbolSize:.75,symbolKeepAspect:!0,rotation:0}][seriesComponent.palette.pattern]),!(0,src.xbD)(seriesComponent.referenceLines)&&valueAxis&&(0,src.f0i)(series,referenceLines(seriesComponent,null,options,valueAxis.orient,settings?.locale)),seriesComponent.sizeMeasure&&visualMaps.push(mergeChartOptions(getSymbolSizeVisualMap(seriesComponent.sizeMeasure,(0,src.ZBB)(entityType,seriesComponent.sizeMeasure),dataset),[],seriesComponent.sizeMeasure.chartOptions?.visualMap)),seriesComponent.lightnessMeasure){const lightnessProperty=(0,src.ZBB)(entityType,seriesComponent.lightnessMeasure);visualMaps.push(mergeChartOptions(function getColorLightnessVisualMap(measure,property,dataset,visualMaps){const _dataset=Array.isArray(dataset)?dataset[0]:dataset,dataMin=(0,minBy.Z)(_dataset.source,measure.measure)?.[measure.measure],dataMax=(0,maxBy.Z)(_dataset.source,measure.measure)?.[measure.measure];return{dimension:_dataset.dimensions?_dataset.dimensions.indexOf(measure.measure):measure.measure,min:dataMin,max:dataMax,text:[property.caption||property.name],formatter:value=>(0,src.nt_)(value,measure.formatting)}}(seriesComponent.lightnessMeasure,lightnessProperty,dataset),[],seriesComponent.lightnessMeasure.chartOptions?.visualMap))}return options?.seriesStyle?.endLabel?.show&&(series.endLabel={show:!0,formatter:params=>{const member=params.seriesId.slice(0,-seriesComponent.measure.length),label=dataset.series.find((item=>item.value===member))?.label,index=params.dimensionNames.findIndex((item=>item===member)),value=params.value[index+1];return(label??member)+": "+formatMeasureNumber({measure:seriesComponent,property:seriesComponent.property},value,settings?.locale)}}),{series,visualMaps}}function referenceLines(axis1,axis2,options,valueAxis,locale){const formatter=params=>Array.isArray(params)?params.map((({value})=>formatMeasureNumber({measure:axis1,property:null},value,locale))).join("; "):formatMeasureNumber({measure:axis1,property:null},params.value,locale),markLine={data:[],label:{formatter}},markPoint={data:[],label:{formatter}};return axis1?.referenceLines?.filter(src.vJr).forEach((referenceLine=>{if(referenceLine.type){const referenceLineData=mergeChartOptions({name:referenceLine.label,valueDim:axis1.measure},[],referenceLine.chartOptions);referenceLine.valueType===src.Vfs.fixed?referenceLineData[valueAxis]=referenceLine.value:referenceLine.valueType===src.Vfs.dynamic&&(referenceLineData.type=referenceLine.aggregation),referenceLine.type===src.Bjo.markLine?markLine.data.push(referenceLineData):referenceLine.type===src.Bjo.markPoint&&markPoint.data.push(referenceLineData)}})),axis2?.referenceLines?.forEach((referenceLine=>{if(referenceLine.type){const referenceLineData=mergeChartOptions({name:referenceLine.label,valueDim:axis2.measure},[],referenceLine.chartOptions);referenceLine.valueType===src.Vfs.fixed?referenceLineData[valueAxis]=referenceLine.value:referenceLine.valueType===src.Vfs.dynamic&&(referenceLineData.type=referenceLine.aggregation),referenceLine.type===src.Bjo.markLine?markLine.data.push(referenceLineData):referenceLine.type===src.Bjo.markPoint&&markPoint.data.push(referenceLineData)}})),{markLine,markPoint}}var groupBy=__webpack_require__("./node_modules/lodash-es/groupBy.js"),chunk=__webpack_require__("./node_modules/lodash-es/chunk.js");function gatherCoordinates(coordinates,type,options){const echartsOptions={dataset:[],title:{},grid:[],series:[],visualMap:[],tooltip:[],legend:[],dataZoom:[]};return coordinates.forEach(((coordinate,gridIndex)=>{echartsOptions.grid.push(coordinate.grid),coordinate.datasets.forEach((({dataset,series})=>{if(series.forEach((({options:series,visualMaps})=>{isCoordinatePolar(coordinate)?echartsOptions.series.push({...series,angleAxis:(echartsOptions.angleAxis?.length??0)+(series.angleAxisIndex??0),radiusAxis:(echartsOptions.radiusAxis?.length??0)+(series.radiusAxis??0),datasetIndex:echartsOptions.dataset.length+(series.datasetIndex??0),type:series.type??type,coordinateSystem:"polar"}):isCoordinateCalendar(coordinate)?echartsOptions.series.push({...series,type:series.type??type}):echartsOptions.series.push({...series,xAxisIndex:(echartsOptions.xAxis?.length??0)+(series.xAxisIndex??0),yAxisIndex:(echartsOptions.yAxis?.length??0)+(series.yAxisIndex??0),datasetIndex:echartsOptions.dataset.length+(series.datasetIndex??0),type:series.type??type}),visualMaps&&echartsOptions.visualMap.push(...visualMaps.map((item=>({...item,seriesIndex:echartsOptions.series.length-1}))))})),dataset){const datasetIndex=echartsOptions.dataset.length;echartsOptions.dataset.push((0,src.CEd)(dataset,"transforms")),echartsOptions.dataset.push(...(dataset.transforms??[]).map((transform=>((0,src.kKJ)(transform.fromDatasetIndex)||(transform.fromDatasetIndex=datasetIndex+transform.fromDatasetIndex),transform))))}})),coordinate.dataZoom?.forEach((dataZoom=>{!(0,src.kKJ)(dataZoom.xAxisIndex)&&(dataZoom.xAxisIndex=(echartsOptions.xAxis?.length??0)+(dataZoom.xAxisIndex??0)),!(0,src.kKJ)(dataZoom.yAxisIndex)&&(dataZoom.yAxisIndex=(echartsOptions.yAxis?.length??0)+(dataZoom.yAxisIndex??0)),echartsOptions.dataZoom.push(dataZoom)})),"pie"!==type&&isCoordinateCartesian2d(coordinate)&&(echartsOptions.xAxis=echartsOptions.xAxis??[],echartsOptions.xAxis.push(...coordinate.xAxis?.map((xAxis=>({...xAxis,gridIndex})))??[]),echartsOptions.yAxis=echartsOptions.yAxis??[],echartsOptions.yAxis.push(...coordinate.yAxis?.map((yAxis=>({...yAxis,gridIndex})))??[])),isCoordinatePolar(coordinate)&&(echartsOptions.polar=echartsOptions.polar??[],echartsOptions.polar.push(coordinate.polar??{}),echartsOptions.radiusAxis=echartsOptions.radiusAxis??[],echartsOptions.radiusAxis.push({...coordinate.radiusAxis?.[0]??{},polarIndex:gridIndex}),echartsOptions.angleAxis=echartsOptions.angleAxis??[],echartsOptions.angleAxis.push({...coordinate.angleAxis?.[0]??{},polarIndex:gridIndex})),coordinate.tooltip&&echartsOptions.tooltip.push(...coordinate.tooltip),coordinate.legend&&echartsOptions.legend.push(...coordinate.legend),isCoordinateSingleAxis(coordinate)&&(echartsOptions.singleAxis=echartsOptions.singleAxis??[],echartsOptions.singleAxis.push(...coordinate.singleAxis)),isCoordinateCalendar(coordinate)&&(echartsOptions.calendar=echartsOptions.calendar??[],echartsOptions.calendar.push(coordinate.calendar)),coordinate.visualMap?.length&&echartsOptions.visualMap.push(...coordinate.visualMap)})),options?.visualMaps&&echartsOptions.visualMap.push(...options.visualMaps),(0,src.JHz)(echartsOptions,pickEChartsGlobalOptions(options)),echartsOptions}function trellisCoordinates(context,coordinateType,cartesianCoordinate){const{data,chartAnnotation,entityType,settings,options}=context,trellis=(0,src.L$q)(chartAnnotation);if(trellis){const trellisName=(0,src.Ex7)(trellis),trellisCaption=(0,src.Imp)(trellis,entityType),trellisResults=(0,groupBy.Z)(data.data,trellisName),coordinates=Object.keys(trellisResults).map((trellisKey=>{const dimensions=[...chartAnnotation.dimensions],index=dimensions.indexOf(trellis);dimensions.splice(index,1);const coordinate=cartesianCoordinate({...context,chartAnnotation:{...chartAnnotation,dimensions}},trellisResults[trellisKey],serializeSeriesComponent,data.schema);return coordinate.name=trellisResults[trellisKey][0]?.[trellisCaption]||trellisKey,coordinate.datasets=coordinate.datasets.map((dataset=>({...dataset,series:dataset.series.map((series=>({...series,options:{...series.options,id:`${trellisKey}-${series.options.id}`}})))}))),coordinate})),trellisHorizontal=settings?.trellisHorizontal??2,trellisVertical=Math.ceil(coordinates.length/trellisHorizontal),coordinatesGroups=(0,chunk.Z)(coordinates,trellisHorizontal),coordinateResults=[];return coordinatesGroups.forEach(((group,v)=>{group.forEach(((coordinate,h)=>{const title={text:coordinate.name,textStyle:{fontSize:"1rem"},left:(h+.4)*(100/trellisHorizontal)+"%",top:v*(100/trellisVertical)+"%"};if("grid"===coordinateType)coordinateResults.push({...coordinate,title,grid:{...coordinate.grid,left:(h+.1)*(100/trellisHorizontal)+"%",top:(v+.2)*(100/trellisVertical)+"%",width:100/trellisHorizontal*.8+"%",height:100/trellisVertical*.7+"%"}});else if("pie"===coordinateType){const minRadius=Math.max(100/trellisHorizontal,100/trellisVertical),radius=chartAnnotation.chartType.variant===src.OmR.Doughnut||chartAnnotation.chartType.variant===src.OmR.Nightingale?[.4*minRadius+"%",.7*minRadius+"%"]:.7*minRadius+"%";coordinateResults.push({...coordinate,title,datasets:coordinate.datasets.map((dataset=>({...dataset,series:dataset.series.map((series=>({...series,options:{...series.options,radius,center:[(h+.5)*(100/trellisHorizontal)+"%",(v+.5)*(100/trellisVertical)+"%"]}})))})))})}}))})),coordinateResults}return[cartesianCoordinate(context,data.data,serializeSeriesComponent,data.schema)]}var uniqBy=__webpack_require__("./node_modules/lodash-es/uniqBy.js"),orderBy=__webpack_require__("./node_modules/lodash-es/orderBy.js"),lowerCase=__webpack_require__("./node_modules/lodash-es/lowerCase.js"),sortBy=__webpack_require__("./node_modules/lodash-es/sortBy.js"),sum=__webpack_require__("./node_modules/lodash-es/sum.js");function valueFormatter(measure,property,settings){return value=>formatMeasureNumber({measure,property},value,settings?.locale,measure.formatting?.shortNumber)}function getEChartsTooltip(tooltipOptions,category,entityType,measures,seriesComponents,locale,rowRuler=(data=>data)){const tooltip={...(0,src.ezT)(tooltipOptions),trigger:tooltipOptions?.trigger??"item"},categoryProperty=(0,src.ZBB)(entityType,category),categoryHierarchy=(0,src.jEU)(entityType,category),categoryMemberCaption=(0,src.Imp)(category,entityType),displayBehaviour=(0,src.Xpx)(category),tooltipMeasures=measures.filter((({measure})=>measure.role===src.rRL.Tooltip));return tooltip.formatter=params=>{const texts=[];if(Array.isArray(params)){params=params.filter((param=>seriesComponents[param.seriesIndex]&&!seriesComponents[param.seriesIndex].noDisplay&&"-"!==param.data[param.seriesName]));const param=params[0];texts.push(_formatDimensionValue(rowRuler(param.data),categoryHierarchy.name,categoryMemberCaption,displayBehaviour,categoryProperty.dataType)),params.forEach((param=>{const measure=measures.find((item=>item.measure.measure===seriesComponents[param.seriesIndex].measure)),row=rowRuler(param.data);texts.push(param.marker+formatMeasureLabel(row,measure,locale,tooltipOptions?.shortNumber))})),tooltipMeasures.forEach((measure=>{const row=rowRuler(param.data);texts.push(param.marker+formatMeasureLabel(row,measure,locale,tooltipOptions?.shortNumber))}))}else{const row=rowRuler(params.data);texts.push(params.marker+_formatDimensionValue(row,categoryHierarchy.name,categoryMemberCaption,displayBehaviour,categoryProperty.dataType)),texts.push(function formatMeasuresLabel(item,measures,locale,shortNumber){return item?measures.map((({measure,property})=>formatMeasureLabel(item,{measure,property},locale,shortNumber))).join("<br>"):"-"}(row,measures,locale,tooltipOptions?.shortNumber))}return texts.join("<br>")},tooltip}function stackedForMeasure(data,measure,chartAnnotation,entityType,settings,options){const category=(0,src.e6_)(chartAnnotation),category2=(0,src.HLD)(chartAnnotation),measureProperty=(0,src.ZBB)(entityType,measure),{categoryValues,category2Values,source,dataMin,dataMax}=function getMatrixForMeasure(items,entityType,category,category2,measure){const categoryName=(0,src.Ex7)(category),category2Name=(0,src.Ex7)(category2),categoryTextName=(0,src.Imp)(category,entityType),category2TextName=(0,src.Imp)(category2,entityType),measureName=(0,src.e_i)(measure),itemsMap=new Map;items.forEach((item=>{itemsMap.set(`${item[categoryName]}/${item[category2Name]}`,item)}));let categoryValues=(0,uniqBy.Z)(items,categoryName).map((x=>({key:x[categoryName],value:x[categoryName],label:x[categoryTextName],caption:x[categoryTextName]})));category.order&&(categoryValues=(0,orderBy.Z)(categoryValues,["value"],[(0,lowerCase.Z)(category.order)]));let category2Values=(0,uniqBy.Z)(items,category2Name).map((x=>({key:x[category2Name],value:x[category2Name],label:x[category2TextName],caption:x[category2TextName]})));if(measure.order){const lastCategory=categoryValues[categoryValues.length-1];category2Values=(0,sortBy.Z)(category2Values,(member=>{const item=itemsMap.get(`${lastCategory.key}/${member.key}`);return item?item[measureName]:"-"})),measure.order===src.N9t.DESC&&(category2Values=category2Values.reverse())}const dataset=category2Values.map((({key:category2Value},i)=>categoryValues.map((({key:categoryValue})=>{const item=itemsMap.get(`${categoryValue}/${category2Value}`);return item?item[measureName]:"-"}))));return{categoryValues,category2Values,source:[[category2Name,...categoryValues.map((({key})=>key))],...category2Values.map((({key},i)=>[`${key}`,...dataset[i]])),[totalMeasureName(measure.measure),...categoryValues.map(((value,i)=>(0,sum.Z)(dataset.map((row=>row[i])))))]],dataMin:(0,minBy.Z)(items,(o=>o[measureName]))?.[measureName],dataMax:(0,maxBy.Z)(items,(o=>o[measureName]))?.[measureName]}}(data,entityType,category,category2,measure),[categoryAxis,valueAxis]=axisOrient(chartAnnotation.chartType.orient),seriesComponents=category2Values.map((category2Value=>{const valueAxisIndex=measure.role===src.rRL.Axis2?1:0;return{...measure,member:category2Value,id:category2Value.key+measure.measure,name:category2Value.caption+measure.measure,caption:category2Value.caption,property:measureProperty,measure:(0,src.e_i)(measure),formatting:measure.formatting,seriesStack:(category2.role?category2.role===src.s3z.Stacked:"stacked"===chartAnnotation.chartType.variant)?(0,src.e_i)(measure):null,seriesLayoutBy:"row",valueAxisIndex,dataMin,dataMax,dataSize:data.length,visualMapDimension:category2Value.value}})),categoryValueTexts=new Map;categoryValues.forEach((({value,caption})=>categoryValueTexts.set(value,caption)));const category2ValueTexts=new Map;category2Values.forEach((({value,caption})=>category2ValueTexts.set(value,caption)));const tooltip=function getEChartsMatrixTooltip(tooltipOptions,chartCategory,seriesCategory,_categoryAxis,_valueAxis,categoryValueTexts,seriesValueTexts,seriesComponents,settings){const tooltip={trigger:tooltipOptions?.trigger||"item"},short=tooltipOptions?.shortNumber,showMeasureName=tooltipOptions?.showMeasureName,categoryAxis=AxisEnum[_categoryAxis],valueAxis=AxisEnum[_valueAxis],locale=settings?.locale;return tooltip.formatter=params=>{const texts=[];if(Array.isArray(params))params=params.filter((param=>seriesComponents[param.seriesIndex]&&!seriesComponents[param.seriesIndex].noDisplay&&"-"!==param.data[param.seriesName])),texts.push(formatCategoryLabel(params[0].data[params[0].encode[categoryAxis][0]],categoryValueTexts,chartCategory)),params.filter((param=>{const value=param.data[param.encode[valueAxis][0]];return void 0!==value&&"-"!==value})).forEach((param=>{const unitName=(0,src.M0K)(seriesComponents[param.seriesIndex]?.property);let unit="";unitName&&(unit=param.data[param.data.length-1][unitName],"P1"===unit&&(unit="%")),seriesComponents[param.seriesIndex]?.formatting?.unit&&(unit=seriesComponents[param.seriesIndex]?.formatting?.unit);let text=`${param.marker}${formatCategoryLabel(param.dimensionNames[param.encode[valueAxis][0]],seriesValueTexts,seriesCategory)}`;showMeasureName?(texts.push(text),texts.push(`${function getSeriesComponentMeasureName(seriesComponents,i){const component=seriesComponents[i];return component?.property?.caption||component?.property?.name}(seriesComponents,param.seriesIndex)}: ${echartsFormatNumber(param.data[param.encode[valueAxis][0]],settings?.digitsInfo,short,locale)} ${unit}`)):(text=`${text}: ${echartsFormatNumber(param.data[param.encode[valueAxis][0]],settings?.digitsInfo,short,locale)} ${unit}`,texts.push(text))}));else{const seriesComponent=seriesComponents.find((({name})=>name===params.seriesName));texts.push(formatCategoryLabel(params.data[params.encode[categoryAxis][0]],categoryValueTexts,chartCategory)),texts.push(formatCategoryLabel(params.dimensionNames[params.encode[valueAxis][0]],seriesValueTexts,seriesCategory)),texts.push(`${params.marker} ${seriesComponent?.property?.caption||seriesComponent?.property?.name}: ${echartsFormatNumber(params.data[params.encode[valueAxis][0]],settings?.digitsInfo,seriesComponent.formatting?.shortNumber??short,locale)}`)}return texts.join("<br>")},tooltip}(options?.tooltip,(0,src.e6_)(chartAnnotation),category2,categoryAxis,valueAxis,categoryValueTexts,category2ValueTexts,seriesComponents,settings);return{dataset:{id:(name=(0,src.e_i)(measure),`--${name}`),source,measure:(0,src.e_i)(measure),categories:categoryValues,series:category2Values},seriesComponents,tooltip};var name}function cartesian(data,chartAnnotation,entityType,settings,options,type){const[categoryAxis,valueAxis]=axisOrient(chartAnnotation.chartType.orient),context={data,entityType,settings,options,chartAnnotation,categoryAxis,valueAxis},coordinateDatas=trellisCoordinates(context,"pie"===type?"pie":"grid",cartesianCoordinate);return{...context,echartsOptions:gatherCoordinates(coordinateDatas,type,options)}}function cartesianCoordinate(context,data){const{chartAnnotation,entityType,settings,options}=context,category=(0,src.e6_)(chartAnnotation),categoryMemberCaption=(0,src.Imp)(category,entityType),category2=(0,src.rlo)(chartAnnotation);let datasets=[];if((0,src.HLD)(chartAnnotation))datasets=chartAnnotation.measures.filter((({role})=>!(0,includes.Z)([src.rRL.Tooltip,src.rRL.Size,src.rRL.Lightness],role))).map((measure=>stackedForMeasure(data,measure,chartAnnotation,entityType,settings,options)));else{const seriesComponents=measuresToSeriesComponents(chartAnnotation.measures,data,entityType);(data=data.map((row=>({...row}))))[0]&&(data[0]={...data[0]},chartAnnotation.measures.forEach((measure=>{const totalName=totalMeasureName(measure.measure),totalValue=(0,sumBy.Z)(data,measure.measure);data.forEach((row=>row[totalName]=totalValue)),(0,src.kKJ)(data[0][measure.measure])&&(data[0][measure.measure]="-")}))),datasets=[{dataset:{source:data},seriesComponents}]}context.datasets=datasets;const type="polar"===chartAnnotation.chartType.variant?"Polar":"Cartesian2d",{categoryAxis,valueAxis}="Polar"===type?getPolarCoordinateSystem(context,data,settings.locale):getCoordinateSystem(context,data,settings.locale),gridOptions={type,name:"",grid:mergeChartOptions({containLabel:!0},[],options?.grid),[categoryAxis.orient]:categoryAxis.axis,[valueAxis.orient]:valueAxis.axis,datasets:[],tooltip:[],legend:[],dataZoom:[]};if(categoryAxis.dataZooms&&gridOptions.dataZoom.push(...categoryAxis.dataZooms),valueAxis.dataZooms&&gridOptions.dataZoom.push(...valueAxis.dataZooms),isCoordinatePolar(gridOptions)&&(gridOptions.polar=mergeChartOptions({},[],options?.polar)),context.datasets.forEach((({dataset,seriesComponents})=>{gridOptions.datasets.push({dataset,series:seriesComponents.map((seriesComponent=>{const{series,visualMaps}=serializeSeriesComponent(dataset,seriesComponent,entityType,valueAxis,settings,options);return(0,src.kKJ)(seriesComponent.valueAxisIndex)||(series[valueAxis.orient+"Index"]=seriesComponent.valueAxisIndex),(0,src.kKJ)(series.seriesLayoutBy)&&(series.encode={[AxisEnum[categoryAxis.orient]]:(0,src.Ex7)(category),[AxisEnum[valueAxis.orient]]:category2?(0,src.Ex7)(category2):seriesComponent.measure,tooltip:seriesComponent.tooltip},settings?.universalTransition||(series.encode.itemName=categoryMemberCaption)),series.tooltip={valueFormatter:value=>formatMeasureNumber({measure:seriesComponent,property:seriesComponent.property},value,settings.locale,seriesComponent.formatting?.shortNumber)},{options:mergeChartOptions(series,[],options?.seriesStyle,seriesComponent.chartOptions?.seriesStyle),visualMaps}}))})})),"axis"===options?.tooltip?.trigger){const measure=getMeasureAxis(chartAnnotation,src.rRL.Axis1,0);gridOptions.tooltip.push({...(0,src.ezT)(options.tooltip),trigger:"axis",valueFormatter:value=>formatMeasureNumber({measure,property:null},value,settings.locale,measure.formatting?.shortNumber)})}else gridOptions.tooltip.push({...(0,src.ezT)(options?.tooltip),trigger:"item"});return options?.legend&&gridOptions.legend.push(mergeChartOptions({formatter:name=>{let label=name;return gridOptions.datasets.find((({series})=>series.find((item=>item.options.name===name&&(label=item.options.caption,!0))))),label||name}},[],options.legend)),gridOptions}function getVisualMapValueAxisIndex(dataset,seriesComponent,series){return series&&(0,src.kJL)(dataset)?dataset=dataset.find((item=>item.id===`--${seriesComponent.measure}`)):(0,src.kJL)(dataset)&&(dataset=dataset[0]),dataset.dimensions?(0,indexOf.Z)(dataset.dimensions,seriesComponent.measure):seriesComponent.member?seriesComponent.member.value:seriesComponent.measure}(0,extension.D)([install.N]);var time=__webpack_require__("./node_modules/echarts/lib/export/api/time.js"),api_format=__webpack_require__("./node_modules/echarts/lib/export/api/format.js"),echarts=__webpack_require__("./node_modules/echarts/lib/core/echarts.js"),graphic=__webpack_require__("./node_modules/echarts/lib/export/api/graphic.js"),globe_install=__webpack_require__("./node_modules/echarts-gl/lib/component/globe/install.js"),geo3D_install=__webpack_require__("./node_modules/echarts-gl/lib/component/geo3D/install.js"),lines3D_install=__webpack_require__("./node_modules/echarts-gl/lib/chart/lines3D/install.js"),polygons3D_install=__webpack_require__("./node_modules/echarts-gl/lib/chart/polygons3D/install.js"),surface_install=__webpack_require__("./node_modules/echarts-gl/lib/chart/surface/install.js"),map3D_install=__webpack_require__("./node_modules/echarts-gl/lib/chart/map3D/install.js"),scatterGL_install=__webpack_require__("./node_modules/echarts-gl/lib/chart/scatterGL/install.js"),graphGL_install=__webpack_require__("./node_modules/echarts-gl/lib/chart/graphGL/install.js"),flowGL_install=__webpack_require__("./node_modules/echarts-gl/lib/chart/flowGL/install.js"),linesGL_install=__webpack_require__("./node_modules/echarts-gl/lib/chart/linesGL/install.js"),BehaviorSubject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js"),combineLatest=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/combineLatest.js"),filter=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/filter.js"),distinctUntilChanged=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js"),from=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/from.js"),delayWhen=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/delayWhen.js"),withLatestFrom=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/withLatestFrom.js"),lastValueFrom=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/lastValueFrom.js"),catchError=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/catchError.js"),takeUntil=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js"),shareReplay=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),debounceTime=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js"),bar3D_install=__webpack_require__("./node_modules/echarts-gl/lib/chart/bar3D/install.js"),grid3D_install=__webpack_require__("./node_modules/echarts-gl/lib/component/grid3D/install.js");function cartesian3d(data,chartAnnotation,entityType,settings,options,type){const context={data,chartAnnotation,entityType,settings,options},cartesianCoordinate=function cartesianCoordinate3d(data,chartAnnotation,entityType,settings,options){const category=(0,src.e6_)(chartAnnotation),category2=chartAnnotation.dimensions[1],xHierarchy=(0,src.jEU)(entityType,category),xHierarchyCaption=(0,src.Imp)(category,entityType),yHierarchy=(0,src.jEU)(entityType,category2),yHierarchyCaption=(0,src.Imp)(category2,entityType),mainMeasure=chartAnnotation.measures[0],datasets=[{dataset:{source:data,dimensions:[...chartAnnotation.dimensions.map(src.HpB),...chartAnnotation.measures.map(src.e_i)]},seriesComponents:measuresToSeriesComponents(chartAnnotation.measures,data,entityType)}],tooltips=[{value:xHierarchyCaption,label:xHierarchy.caption||xHierarchy.name,valueFormatter:null},{value:yHierarchyCaption,label:yHierarchy.caption||yHierarchy.name,valueFormatter:null},...chartAnnotation.measures.map((measure=>{const measureProperty=(0,src.ZBB)(entityType,measure);return{value:measureProperty.name,label:measureProperty.caption||measureProperty.name,valueFormatter:value=>{const{value:digitsNumber,shortUnit,unit}=formatMeasureValue(measure,measureProperty,value,settings?.locale);return`${digitsNumber}${shortUnit?`<span style="font-size: smaller;">${shortUnit}</span>`:""}${unit?`<span>${unit}</span>`:""}`}}}))],grid3dOptions={grid3D:mergeChartOptions({top:0,right:0,bottom:0,left:0,containLabel:!0},[],options?.grid3D),xAxis3D:mergeChartOptions({type:"category",name:xHierarchy.caption,axisLabel:{formatter:(key,tick,...params)=>{const caption=data.find((item=>item[xHierarchy.name]===key))?.[xHierarchy.memberCaption];return caption||key}}},[],options?.xAxis3D,category.chartOptions?.axis),yAxis3D:mergeChartOptions({type:"category",name:yHierarchy.caption,axisLabel:{formatter:(key,tick,...params)=>{const caption=data.find((item=>item[yHierarchy.name]===key))?.[yHierarchy.memberCaption];return caption||key}}},[],options?.yAxis3D,category2.chartOptions?.axis),zAxis3D:mergeChartOptions({type:"value",axisLabel:{formatter:(value,index)=>function valueAxisLabelFormatter(measure,property,value,locale){const{value:digitsNumber,shortUnit}=formatMeasureValue(measure,property,value,locale);return shortUnit?`${digitsNumber}${shortUnit}`:digitsNumber}(mainMeasure,(0,src.ZBB)(entityType,mainMeasure),value,settings?.locale)}},[],options?.zAxis3D,mainMeasure.chartOptions?.axis),visualMap:[],datasets:[],tooltip:[mergeChartOptions({valueFormatter:params=>(console.log(params),""),formatter:params=>params.marker+tooltips.map((({value,label,valueFormatter})=>`<div style="display: flex; justify-content: space-between; align-items: center;">\n<span style="margin-right: 1rem;">${label}:</span><span style="font-weight: bold;">${valueFormatter?valueFormatter(params.data[value]):params.data[value]}</span>\n</div>`)).join("")},[],options?.tooltip)]};return datasets.forEach((({dataset,seriesComponents})=>{grid3dOptions.datasets.push({dataset,series:seriesComponents.map(((seriesComponent,seriesIndex)=>{const{series,visualMaps}=serializeSeriesComponent(dataset,seriesComponent,entityType,"z",settings,options);return grid3dOptions.visualMap.push(...visualMaps.map((item=>({...item,seriesIndex})))),series.encode={x:(0,src.Ex7)(category),y:(0,src.Ex7)(category2),z:seriesComponent.measure},mergeChartOptions(series,[],options?.seriesStyle,seriesComponent.chartOptions?.seriesStyle)}))})})),grid3dOptions}(data.data,chartAnnotation,entityType,settings,options),echartsOptions={dataset:[],grid3D:[],xAxis3D:[],yAxis3D:[],zAxis3D:[],series:[],visualMap:[],tooltip:[]};return[cartesianCoordinate].forEach((cartesianCoordinate=>{echartsOptions.grid3D.push(cartesianCoordinate.grid3D),echartsOptions.xAxis3D.push(cartesianCoordinate.xAxis3D),echartsOptions.yAxis3D.push(cartesianCoordinate.yAxis3D),echartsOptions.zAxis3D.push(cartesianCoordinate.zAxis3D),echartsOptions.visualMap.push(...cartesianCoordinate.visualMap),echartsOptions.tooltip.push(...cartesianCoordinate.tooltip),cartesianCoordinate.datasets.forEach((({dataset,series})=>{echartsOptions.dataset.push(dataset),series.forEach((series=>{echartsOptions.series.push({...series,datasetIndex:echartsOptions.dataset.length-1,type:series.type??type})}))}))})),{...context,echartsOptions:(0,src.kg4)(echartsOptions,pickEChartsGlobalOptions(options),Number.MAX_SAFE_INTEGER)}}(0,extension.D)([grid3D_install.N,bar3D_install.N]);const DEFAULT_GRID={containLabel:!0};function boxplotCoordinate(context,data){const{chartAnnotation,entityType,settings,options}=context,category=(0,src.e6_)(chartAnnotation);if(!category)throw new Error("No category dimension");if(!(0,src.HLD)(chartAnnotation))throw new Error("No series dimension");const measure=chartAnnotation.measures[0];if(!measure)throw new Error("No measure");const{source,categories}=function prepareBoxplotDataSource(entityType,category,measure,data){const categoryName=(0,src.Ex7)(category),categoryCaption=(0,src.Imp)(category,entityType),categoryMembers=(0,groupBy.Z)(data,categoryName),measureName=(0,src.e_i)(measure),categories=Object.keys(categoryMembers).map((key=>({key,caption:categoryMembers[key][0]?.[categoryCaption]})));return{source:Object.keys(categoryMembers).map((key=>categoryMembers[key].map((item=>item[measureName])))),categories}}(entityType,category,measure,data);return{type:"Cartesian2d",name:"boxplot",datasets:[{dataset:{source,transforms:[{transform:{type:"boxplot",config:{itemNameFormatter:({value})=>categories[value]?.caption}}},{fromDatasetIndex:1,fromTransformResult:1}]},series:[{options:mergeChartOptions({id:"boxplot",type:"boxplot",datasetIndex:1,tooltip:{trigger:"item",axisPointer:{type:"shadow"}}},[],options?.seriesStyle,measure.chartOptions?.seriesStyle)},{options:mergeChartOptions({id:"outlier",name:"outlier",type:"scatter",datasetIndex:2,tooltip:{trigger:"item",axisPointer:{type:"shadow"}}},[],options?.seriesStyle,measure.chartOptions?.seriesStyle)}]}],grid:mergeChartOptions({...DEFAULT_GRID},[],options?.grid),xAxis:[mergeChartOptions({type:"category"},[],options?.categoryAxis,category.chartOptions?.axis)],yAxis:[mergeChartOptions({type:"value",axisLabel:{formatter:(value,index)=>formatMeasureNumber({measure,property:(0,src.ZBB)(entityType,measure)},value,settings?.locale)}},[],options?.valueAxis,measure.chartOptions?.axis)],dataZoom:[...getAxisDataZooms(category,AxisEnum.x),...getAxisDataZooms(measure,AxisEnum.y)],tooltip:[{trigger:"item",axisPointer:{type:"shadow"}}]}}var isDate=__webpack_require__("./node_modules/date-fns/isDate.mjs"),parse=__webpack_require__("./node_modules/date-fns/parse.mjs"),date_fns_format=__webpack_require__("./node_modules/date-fns/format.mjs"),heatmap_install=__webpack_require__("./node_modules/echarts/lib/chart/heatmap/install.js");function heatmap_cartesianCoordinate(context,data){if(-1===context.chartAnnotation.dimensions.findIndex((item=>item.role===src.s3z.Category2))){context.chartAnnotation=(0,src.XhB)(context.chartAnnotation);const dimension=context.chartAnnotation.dimensions.slice(1).find((item=>!item.role));dimension&&(dimension.role=src.s3z.Category2)}const{chartAnnotation,entityType,settings,options}=context,category=(0,src.e6_)(chartAnnotation),category2=(0,src.rlo)(chartAnnotation),measure=chartAnnotation.measures?.[0];context.datasets=[];const seriesComponents=measuresToSeriesComponents(chartAnnotation.measures,data,entityType);(data=[...data])[0]&&(data[0]={...data[0]},chartAnnotation.measures.forEach((measure=>{(0,src.kKJ)(data[0][measure.measure])&&(data[0][measure.measure]="-")}))),context.datasets=[{dataset:{source:data},seriesComponents,tooltip:getEChartsTooltip(options?.tooltip,category,entityType,chartAnnotation.measures.map((measure=>({measure,property:(0,src.ZBB)(entityType,measure)}))),seriesComponents,settings.locale)}];const{categoryAxis,valueAxis}=getCoordinateSystem(context,data,settings.locale),gridOptions={type:"Cartesian2d",name:"",grid:(0,src.JHz)({containLabel:!0},options?.grid),[categoryAxis.orient]:categoryAxis.axis,[valueAxis.orient]:valueAxis.axis,datasets:[],tooltip:[],legend:[],dataZoom:[]};return categoryAxis.dataZooms&&gridOptions.dataZoom.push(...categoryAxis.dataZooms),valueAxis.dataZooms&&gridOptions.dataZoom.push(...valueAxis.dataZooms),context.datasets.forEach((({dataset,seriesComponents,tooltip})=>{gridOptions.datasets.push({dataset,series:seriesComponents.map((seriesComponent=>{const{series,visualMaps}=serializeSeriesComponent(dataset,seriesComponent,entityType,valueAxis,settings,options),_visualMaps=[];return(0,src.xbD)(visualMaps)?_visualMaps.push((0,src.kg4)(getMeasurePaletteVisualMap(seriesComponent,dataset.source,seriesComponent.property),seriesComponent.chartOptions?.visualMap,2)):_visualMaps.push(...visualMaps),(0,src.kKJ)(seriesComponent.valueAxisIndex)||(series[valueAxis.orient+"Index"]=seriesComponent.valueAxisIndex),(0,src.kKJ)(series.seriesLayoutBy)&&(series.encode={[AxisEnum[categoryAxis.orient]]:(0,src.Ex7)(category),[AxisEnum[valueAxis.orient]]:category2?(0,src.Ex7)(category2):seriesComponent.measure,value:chartAnnotation.measures[0].measure,tooltip:seriesComponent.tooltip}),{options:(0,src.kg4)(series,options?.seriesStyle,2),visualMaps:_visualMaps}}))})})),gridOptions.tooltip.push((0,src.kg4)({valueFormatter:value=>formatMeasureNumber({measure,property:null},value,settings.locale,measure.formatting?.shortNumber),axisPointer:{type:"cross",label:{}}},options?.tooltip,4)),options?.legend&&gridOptions.legend.push((0,src.kg4)({},options.legend)),gridOptions}function calendarCoordinate(context,data){const{chartAnnotation,entityType,settings,options}=context,measure=chartAnnotation.measures[0],calendar=getChartCalendar(chartAnnotation,entityType),calendarHierarchy=(0,src.jEU)(entityType,calendar),calendarCaption=(0,src.Imp)(calendar,entityType),dateFormatter=options?.seriesStyle?.dateFormatter,calendarLevelProperty=(0,src.uZv)(entityType,calendar),levelFormatter=calendarLevelProperty.semantics?.formatter;function formatter(row){if(!row)return"-";let value=row[calendarCaption];return dateFormatter&&!(0,isDate.J)(value)&&(value=(0,parse.Qc)(value,dateFormatter,new Date)),dateFormatter?(0,date_fns_format.WU)(value,"yyyy-MM-dd"):levelFormatter?(0,date_fns_format.WU)((0,parse.Qc)(row[calendarHierarchy.name],levelFormatter,new Date),"yyyy-MM-dd"):row[calendarCaption]}const seriesComponents=measuresToSeriesComponents(chartAnnotation.measures,data,entityType),calendarMin=(0,minBy.Z)(data,calendarCaption),calendarMax=(0,maxBy.Z)(data,calendarCaption),dataset={source:data},gridOptions={type:"Calendar",name:"",datasets:[],grid:{},calendar:(0,src.kg4)({orient:chartAnnotation.chartType.orient===src.lST.vertical?"vertical":"horizontal",range:[formatter(calendarMin),formatter(calendarMax)]},options?.calendar),tooltip:[],dataZoom:[]};return gridOptions.datasets=[{dataset,series:seriesComponents.map((seriesComponent=>{const{series}=serializeSeriesComponent(dataset,seriesComponent,entityType,null,settings,options);series.coordinateSystem="calendar",series.data=data.map((item=>({value:[formatter(item),item[measure.measure]],data:item,slicer:{dimension:calendar,members:[{value:item[calendarHierarchy.name],label:item[calendarCaption],caption:item[calendarCaption]}]}})));const visualMaps=[];if(seriesComponent.palette?.colors?.length){const visualMap=getMeasurePaletteVisualMap(seriesComponent,dataset.source,seriesComponent.property);visualMaps.push(visualMap)}else visualMaps.push((0,src.kg4)({min:seriesComponent.dataMin,max:seriesComponent.dataMax,text:[seriesComponent.property.caption||seriesComponent.property.name]},seriesComponent.chartOptions?.visualMap,2));return{options:(0,src.kg4)(series,options?.seriesStyle),visualMaps:visualMaps.map((item=>({...item,dimension:1})))}}))}],gridOptions.tooltip.push((0,src.kg4)({trigger:"item",valueFormatter:value=>formatMeasureNumber({measure,property:null},value,settings.locale,measure.formatting?.shortNumber)},options?.tooltip)),gridOptions}function getChartCalendar(chartAnnotation,entityType){return chartAnnotation.dimensions.find((item=>{const property=(0,src.ZBB)(entityType,item);return!!property.semantics?.semantic}))}(0,extension.D)([heatmap_install.N]);var treemap_install=__webpack_require__("./node_modules/echarts/lib/chart/treemap/install.js");function labelFormatter(formatter,measure,property,settings){return params=>{const{value,shortUnit,unit}=formatMeasureValue(measure,property,params.value,settings?.locale);if(formatter)return formatter.replace(/\{name\}/g,params.name).replace(/\{value\}/g,value+(shortUnit??"")).replace(/\{unit\}/g,unit??"");let values=`{value|${value+(shortUnit??"")}}`;return unit&&(values+=` {unit|${unit}}`),["{name|"+params.name+"}","{hr|}",values].join("\n")}}function seriesLabel(base,measure,property,settings,options){const formatter=measure.chartOptions?.seriesStyle?.label?.formatter??options?.seriesStyle?.label?.formatter;return(0,src.kg4)((0,src.kg4)({...base,formatter:labelFormatter(formatter??base.formatter,measure,property,settings),rich:{name:{fontSize:16,lineHeight:20},value:{fontSize:16,lineHeight:20},unit:{fontSize:9,backgroundColor:"rgba(0,0,0,0.3)",color:"#fff",borderRadius:2,padding:[2,4],lineHeight:20,align:"right"},hr:{width:"100%",borderColor:"rgba(255,255,255,0.2)",borderWidth:.5,height:0,lineHeight:10}}},(0,src.CEd)(options?.seriesStyle?.label,"formatter"),3),(0,src.CEd)(measure.chartOptions?.seriesStyle?.label,"formatter"),3)}function treemap(result,chartAnnotation,entityType,settings,options){const context={data:result,chartAnnotation,entityType,settings,options},series=chartAnnotation.measures.map((measure=>function treemapMeasure(measure,result,chartAnnotation,entityType,settings,options){const{data,levels}=treeDataForMeasure(measure,result,chartAnnotation,entityType),mainMeasureName=(0,src.e_i)(measure),property=(0,src.ZBB)(entityType,measure),label=seriesLabel({position:"insideTopLeft"},measure,property,settings,options),upperLabel=function seriesUpperLabel(base,measure,property,settings,options){const formatter=measure.chartOptions?.seriesStyle?.upperLabel?.formatter??options?.seriesStyle?.upperLabel?.formatter;return(0,src.kg4)((0,src.kg4)({...base,formatter:labelFormatter(formatter??"{name}",measure,property,settings)},(0,src.CEd)(options?.seriesStyle?.upperLabel,"formatter"),3),(0,src.CEd)(measure.chartOptions?.seriesStyle?.upperLabel,"formatter"),3)}({position:"insideLeft"},measure,property,settings,options),tooltip=(0,src.kg4)({valueFormatter:valueFormatter(measure,property,settings)},measure.chartOptions?.tooltip,3),series=(0,src.kg4)({type:"treemap",id:mainMeasureName,name:property.caption||mainMeasureName,data,universalTransition:settings?.universalTransition,levels,label,upperLabel,tooltip},(0,src.CEd)(measure.chartOptions?.seriesStyle??options?.seriesStyle,"label","upperLabel","tooltip"),5);return series}(measure,result,chartAnnotation,entityType,settings,options))),isHierarchy=!!result.schema?.recursiveHierarchy,legend=(0,src.kg4)({show:series.length>1,data:series.map((({name})=>name)),selectedMode:"single",itemGap:5,borderRadius:5},options?.legend),tooltip=(0,src.kg4)({trigger:"item"},options?.tooltip,3);return{...context,echartsOptions:(0,src.kg4)({legend,tooltip,series},pickEChartsGlobalOptions(options)),onClick:event=>onClick(event,chartAnnotation,isHierarchy)}}function sunburst(result,chartAnnotation,entityType,settings,options){const context={data:result,chartAnnotation,entityType,settings,options},series=chartAnnotation.measures.map((measure=>function sunburstMeasure(measure,result,chartAnnotation,entityType,settings,options){const{data,levels}=treeDataForMeasure(measure,result,chartAnnotation,entityType),mainMeasureName=(0,src.e_i)(measure),property=(0,src.ZBB)(entityType,measure),label=seriesLabel({formatter:"{name}"},measure,property,settings,options),tooltip=(0,src.kg4)({valueFormatter:valueFormatter(measure,property,settings)},measure.chartOptions?.tooltip,3),series=(0,src.kg4)((0,src.kg4)({type:"sunburst",id:mainMeasureName,name:property.caption||mainMeasureName,radius:[0,"90%"],data,itemStyle:{borderWidth:1,borderColor:"rgba(255,255,255,.5)"},levels,universalTransition:settings?.universalTransition,label,tooltip},(0,src.CEd)(options?.seriesStyle,"label","tooltip"),5),(0,src.CEd)(measure.chartOptions?.seriesStyle,"label","tooltip"),5);return series}(measure,result,chartAnnotation,entityType,settings,options))),isHierarchy=!!result.schema?.recursiveHierarchy,legend=(0,src.kg4)({show:series.length>1,data:series.map((({name})=>name)),selectedMode:"single",itemGap:5,borderRadius:5},options?.legend),tooltip=(0,src.kg4)({trigger:"item"},options?.tooltip,3);return{...context,echartsOptions:(0,src.kg4)({tooltip,legend,series},pickEChartsGlobalOptions(options)),onClick:event=>onClick(event,chartAnnotation,isHierarchy)}}function treeDataForMeasure(measure,result,chartAnnotation,entityType){const mainMeasureName=(0,src.e_i)(measure);let data,levels=[];measure.palette?.colors&&(levels=[{colorMappingBy:"value",color:measure.palette.colors},{colorMappingBy:"value",colorSaturation:[.35,.5]},{colorMappingBy:"value",colorSaturation:[.35,.5]}]);let recursiveHierarchy=!1;if(result.schema?.recursiveHierarchy){recursiveHierarchy=!0;const hierarchy=(0,src.jEU)(entityType,chartAnnotation.dimensions[0]);data=(0,src.LC)(result.data,result.schema?.recursiveHierarchy,{valueProperty:mainMeasureName,memberCaption:"name"}),hierarchy.hasAll&&(data=data[0]?.children??[])}else data=function leveledHierarchy(data,measure,levels,entityType,aggregator){const measureName=(0,src.e_i)(measure),results=[{name:"all",children:data,value:null}];let result=results;return levels.forEach((level=>{const levelName=(0,src.Ex7)(level),levelProperty=(0,src.jEU)(entityType,level),_result=result;result=[],_result.forEach((parent=>{const childs=(0,groupBy.Z)(parent.children,levelName);parent.children=Object.keys(childs).map((key=>{const item=childs[key][0],caption=(0,src.NSM)((0,src.H_E)(item,levelProperty,entityType),level.displayBehaviour),child={key,id:key,name:caption,caption,children:childs[key],value:aggregator(childs[key],measureName),dimension:level};return result.push(child),child}))}))})),results}(result.data,measure,chartAnnotation.dimensions,entityType,sumBy.Z)?.[0].children,levels=levels.map(((level,i)=>(0,src.kg4)(level,chartAnnotation.dimensions[i]?.chartOptions?.seriesStyle?.level,5)));return{data,levels,recursiveHierarchy,selectedMode:"single"}}function sankey(data,chartAnnotation,entityType,settings,options){const context={data,chartAnnotation,entityType,settings,options},series=chartAnnotation.measures.map((measure=>function sankeyMeasure(measure,data,chartAnnotation,entityType,settings,options){const mainMeasureName=(0,src.e_i)(measure),property=(0,src.ZBB)(entityType,measure),category=(0,src.e6_)(chartAnnotation),recursiveHierarchy=data.schema?.recursiveHierarchy,{nodes,links}=recursiveHierarchy?function convertTree2NodeLinks(entityType,data,child,parent,level,dimension,measure,options){const nodes=[],links=[],totalPlaceholder="Total",nodesMap=new Map;data.forEach((item=>{const caption=(0,src.NSM)((0,src.H_E)(item,child,entityType),dimension.displayBehaviour);nodesMap.set(item[child.name],{name:item[child.name],caption,depth:level?item[level]:null,value:Math.abs(item[measure]),rawValue:item,label:{formatter:caption}}),links.push({source:item[parent]||totalPlaceholder,target:item[child.name],targetCaption:caption,value:Math.abs(item[measure]),rawValue:item,label:{formatter:caption}})}));let totalValue=0;links.forEach((x=>{x.source===totalPlaceholder&&(totalValue+=Number(x.value))})),child.hasAll||nodes.push({name:totalPlaceholder,depth:0,value:totalValue});return nodesMap.forEach((node=>{nodes.push(node)})),nodes.forEach((x=>{x.totalValue=totalValue})),links.forEach((x=>{const source=nodes.find((node=>node.name===x.source));x.totalValue=totalValue,x.sourceValue=source?.value,x.sourceCaption=source?.caption})),{nodes,links}}(entityType,data.data,(0,src.jEU)(entityType,{hierarchy:recursiveHierarchy.valueProperty}),recursiveHierarchy.parentNodeProperty,recursiveHierarchy.levelProperty,category,mainMeasureName):leveledGraph(data.data,chartAnnotation,entityType,sumBy.Z),_valueFormatter=valueFormatter(measure,property,settings),tooltip=(0,src.kg4)({formatter:params=>"edge"===params.dataType?`${params.data.sourceCaption} > ${params.data.targetCaption}: ${_valueFormatter(params.value)}`:`${params.data.caption}: ${_valueFormatter(params.value)}`,valueFormatter:_valueFormatter},measure.chartOptions?.tooltip,3);return(0,src.kg4)((0,src.kg4)({type:"sankey",id:mainMeasureName,name:property.caption||mainMeasureName,universalTransition:settings?.universalTransition,data:nodes,links,orient:chartAnnotation.chartType.orient===src.lST.vertical?"vertical":"horizontal",tooltip},(0,src.CEd)(options?.seriesStyle,"tooltip"),5),(0,src.CEd)(measure.chartOptions?.seriesStyle,"tooltip"),5)}(measure,data,chartAnnotation,entityType,settings,options)));return{...context,echartsOptions:{legend:(0,src.kg4)({show:series.length>1,data:series.map((({name})=>name)),selectedMode:"single",itemGap:5,borderRadius:5},options?.legend),tooltip:(0,src.kg4)({trigger:"item"},options?.tooltip,5),series},onClick:event=>onClick(event,chartAnnotation,!!data.schema?.recursiveHierarchy)}}function leveledGraph(data,chartAnnotation,entityType,aggregator){const levels=chartAnnotation.dimensions,measures=chartAnnotation.measures,measureName=(0,src.e_i)(measures[0]);let result=[{name:"all",caption:"All",children:data}];const nodes={},links=[];return levels.forEach((level=>{const levelName=(0,src.Ex7)(level),levelProperty=(0,src.jEU)(entityType,level),_result=result;result=[],_result.forEach((parent=>{const childs=(0,groupBy.Z)(parent.children,levelName);Object.keys(childs).forEach((key=>{const item=childs[key][0],caption=(0,src.NSM)((0,src.H_E)(item,levelProperty,entityType),level.displayBehaviour);nodes[key]||(nodes[key]={key,name:key,caption,label:{formatter:caption},dimension:level});const child={name:key,caption,children:childs[key],parent:parent.name?parent:null};result.push(child),parent.name&&links.push({source:parent.name,sourceCaption:parent.caption,target:key,targetCaption:child.caption,value:aggregator(childs[key],measureName)})}))}))})),{nodes:Object.values(nodes),links}}function onClick(event,chartAnnotation,isHierarchy){if(!event.data||"edge"===event.dataType)return{...event,event:event.event?.event,filter:null};const slicer={dimension:isHierarchy?chartAnnotation.dimensions[0]:event.data.dimension,members:[{value:event.data.key||event.data.name,label:event.data.caption??event.data.label,caption:event.data.caption??event.data.label}]};return{...event,event:event.event?.event,slicers:[slicer]}}(0,extension.D)([treemap_install.N]);var line3D_install=__webpack_require__("./node_modules/echarts-gl/lib/chart/line3D/install.js");(0,extension.D)([grid3D_install.N,line3D_install.N]);var map_install=__webpack_require__("./node_modules/echarts/lib/chart/map/install.js"),tap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/tap.js"),firstValueFrom=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/firstValueFrom.js"),fetch=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/dom/fetch.js");(0,extension.D)([map_install.N]);const registerMaps={};let d3Geo,d3GeoProjection;function _mapChartAnnotation(){return _mapChartAnnotation=(0,asyncToGenerator.Z)((function*(chartAnnotation){const chartType={...chartAnnotation.chartType};if(!(0,src.nsn)(chartType))throw new Error("It's not supposed to be here: Not a Map type");if(chartType.mapUrl){const variant=function tinymd5(str,length){return length=length||16,(str=window.btoa(md5(str)).replace(/[aiueoAIUEO\+\/]/g,"").substring(0,length)).length<length&&(str+=Array(length-str.length).join("=")),str}(chartType.mapUrl+(chartType.isTopoJSON?chartType.features??""+chartType.mesh??"":""),5),mapType=chartType.map+"-"+variant;registerMaps[mapType]||(registerMaps[mapType]=(0,fetch.U)(chartType.mapUrl,{selector:res=>res.json()}).pipe((0,tap.b)(function(){var _ref=(0,asyncToGenerator.Z)((function*(result){if(chartType.isTopoJSON){const geoJson={type:"FeatureCollection",features:[]},topojson=yield __webpack_require__.e(6094).then(__webpack_require__.bind(__webpack_require__,"./node_modules/topojson-client/src/index.js"));chartType.features?.split(",").forEach((feature=>{const{features}=topojson.feature(result,result.objects[feature]);geoJson.features.push(...features)})),chartType.mesh&&chartType.mesh?.split(",").forEach((meshName=>{const mesh=topojson.mesh(result,result.objects[meshName]);geoJson.features.push({type:"Feature",geometry:mesh})})),(0,echarts.je)(mapType,geoJson)}else(0,echarts.je)(mapType,result)}));return function(_x2){return _ref.apply(this,arguments)}}()),(0,shareReplay.d)(1))),yield(0,firstValueFrom.z)(registerMaps[mapType]),chartType.map=mapType}return chartType.projection&&(d3Geo=yield __webpack_require__.e(1670).then(__webpack_require__.bind(__webpack_require__,"./node_modules/d3-geo/src/index.js")),d3GeoProjection=yield __webpack_require__.e(9653).then(__webpack_require__.bind(__webpack_require__,"./node_modules/d3-geo-projection/src/index.js"))),{...chartAnnotation,chartType}})),_mapChartAnnotation.apply(this,arguments)}function pieCoordinate(context,data){const{chartAnnotation,entityType,settings,options}=context,category=(0,src.e6_)(chartAnnotation),categoryMemberCaption=(0,src.Imp)(category,entityType);if(!(0,src.ZBB)(entityType,category))return null;context.datasets=[];const seriesComponents=measuresToSeriesComponents(chartAnnotation.measures,data,entityType);context.datasets=[{dataset:{source:data},seriesComponents,tooltip:getEChartsTooltip(options?.tooltip,category,entityType,chartAnnotation.measures.map((measure=>({measure,property:(0,src.ZBB)(entityType,measure)}))),seriesComponents,settings.locale)}];const{valueAxis}=getCoordinateSystem(context,data,settings.locale),gridOptions={type:"Pie",name:"",grid:(0,src.JHz)({containLabel:!0},options?.grid),datasets:[],tooltip:[],legend:[]};return context.datasets.forEach((({dataset,seriesComponents,tooltip})=>{gridOptions.datasets.push({dataset,series:seriesComponents.map((seriesComponent=>{const{series,visualMaps}=serializeSeriesComponent(dataset,{...seriesComponent,seriesType:"pie"},entityType,valueAxis,settings,options);return(0,src.kKJ)(series.seriesLayoutBy)&&(series.encode={itemId:(0,src.Ex7)(category),itemName:categoryMemberCaption,value:seriesComponent.measure,tooltip:seriesComponent.tooltip}),chartAnnotation.chartType.variant===src.OmR.Doughnut&&(series.radius=["40%","80%"],series.itemStyle={borderRadius:5}),chartAnnotation.chartType.variant===src.OmR.Nightingale&&(series.roseType="area",series.radius=["20%","80%"],series.itemStyle={borderRadius:5}),series.tooltip=tooltip,{options:mergeChartOptions(series,[],options?.seriesStyle,seriesComponent.chartOptions?.seriesStyle),visualMaps}}))}),gridOptions.tooltip.push(tooltip),seriesComponents.length>1?gridOptions.legend.push((0,src.kg4)({show:!0,data:seriesComponents.map((({name})=>name)),selectedMode:"single"},options?.legend,Number.MAX_SAFE_INTEGER)):options?.legend&&gridOptions.legend.push(options.legend)})),gridOptions}var isNil=__webpack_require__("./node_modules/lodash-es/isNil.js"),isEmpty=__webpack_require__("./node_modules/lodash-es/isEmpty.js"),lodash_es_assign=__webpack_require__("./node_modules/lodash-es/assign.js");function scatterCoordinate(context,data){const{chartAnnotation,entityType,settings,options}=context,category=(0,src.e6_)(chartAnnotation),categoryCaption=(0,src.Imp)(category,entityType),chartSeries=(0,src.HLD)(chartAnnotation),axis1=getMeasureAxis(chartAnnotation,src.rRL.Axis1,0),axis2=getMeasureAxis(chartAnnotation,src.rRL.Axis2,1);if(context.datasets=[],chartSeries){const chartSeriesName=(0,src.Ex7)(chartSeries),chartSeriesTextName=(0,src.Imp)(chartSeries,entityType),categoryValues=(0,uniqBy.Z)(data,chartSeriesName).map((x=>({value:x[chartSeriesName],label:x[chartSeriesTextName]}))),dataset={source:data,transforms:[]},seriesComponents=[];categoryValues.forEach((({value,label},index)=>{dataset.transforms.push({transform:[{type:"filter",config:{dimension:chartSeriesName,value}}]});const seriesComponent=dimensionToSeriesComponent(label||value,chartSeries,chartAnnotation.measures,data,entityType,settings);seriesComponent.datasetIndex=index+1,seriesComponents.push(seriesComponent)}));const visualMaps=dimensionVisualMaps(0,chartAnnotation,dataset,entityType);context.datasets.push({dataset,seriesComponents,tooltip:{valueFormatter:value=>[formatMeasureNumber({measure:axis1,property:null},value[0],settings.locale,axis1.formatting?.shortNumber),formatMeasureNumber({measure:axis2,property:null},value[1],settings.locale,axis2.formatting?.shortNumber)]},visualMaps})}else{const seriesComponent=dimensionToSeriesComponent(null,category,chartAnnotation.measures,data,entityType,settings),dataset={source:data},visualMaps=dimensionVisualMaps(0,chartAnnotation,dataset,entityType);context.datasets=[{dataset,seriesComponents:[seriesComponent],tooltip:getEChartsTooltip(options?.tooltip,category,entityType,chartAnnotation.measures.map((measure=>({measure,property:(0,src.ZBB)(entityType,measure)}))),[seriesComponent],settings.locale),visualMaps}]}const type="polar"===chartAnnotation.chartType.variant?"Polar":"Cartesian2d",{categoryAxis,valueAxis}="Polar"===type?getPolarCoordinateSystem(context,data,settings.locale):function scatter_getCoordinateSystem(context,items,locale){const{chartAnnotation,entityType,options:chartOptions}=context,[categoryOrient,valueOrient]=axisOrient(chartAnnotation.chartType.orient),axis1=getMeasureAxis(chartAnnotation,src.rRL.Axis1,0),axis2=getMeasureAxis(chartAnnotation,src.rRL.Axis2,1),valueAxises=getValueAxis(chartAnnotation,entityType,chartOptions,locale);return{categoryAxis:{orient:categoryOrient,axis:[valueAxises[0]],dataZooms:getAxisDataZooms(axis1,AxisEnum.x)},valueAxis:{orient:valueOrient,axis:[valueAxises[1]],dataZooms:getAxisDataZooms(axis2,AxisEnum.y)}}}(context,0,settings.locale),gridOptions={type,name:"",grid:(0,src.kg4)({containLabel:!0},options?.grid),[categoryAxis.orient]:categoryAxis.axis,[valueAxis.orient]:valueAxis.axis,visualMap:[],datasets:[],tooltip:[],legend:[],dataZoom:[]};if(categoryAxis.dataZooms&&gridOptions.dataZoom.push(...categoryAxis.dataZooms),valueAxis.dataZooms&&gridOptions.dataZoom.push(...valueAxis.dataZooms),isCoordinatePolar(gridOptions)&&(gridOptions.polar=mergeChartOptions({},[],options?.polar)),context.datasets.forEach((({dataset,seriesComponents,tooltip,visualMaps})=>{gridOptions.datasets.push({dataset,series:seriesComponents.map((seriesComponent=>{const{series}=serializeSeriesComponent(dataset,seriesComponent,entityType,valueAxis,settings,options);return(0,isNil.Z)(seriesComponent.valueAxisIndex)||(series[valueAxis.orient+"Index"]=seriesComponent.valueAxisIndex),(0,isNil.Z)(series.seriesLayoutBy)&&(series.encode={[AxisEnum[categoryAxis.orient]]:axis1?.measure,[AxisEnum[valueAxis.orient]]:axis2?.measure,itemName:categoryCaption,tooltip:[axis1?.measure,axis2?.measure,...seriesComponent.tooltip]}),(0,isEmpty.Z)(axis1?.referenceLines)&&(0,isEmpty.Z)(axis2?.referenceLines)||(series.markLine=mergeChartOptions({data:[]},[],options.seriesStyle.markLine),(0,lodash_es_assign.Z)(series,referenceLines(axis1,axis2,0,valueAxis.orient,settings?.locale))),series.tooltip=tooltip,{options:mergeChartOptions(series,[],options?.seriesStyle,seriesComponent.chartOptions?.seriesStyle),visualMaps:[]}}))}),gridOptions.visualMap.push(...visualMaps??[])})),"axis"===options?.tooltip?.trigger){const measure=getMeasureAxis(chartAnnotation,src.rRL.Axis1,0);gridOptions.tooltip.push({...(0,src.ezT)(options.tooltip),trigger:"axis",valueFormatter:value=>value.map((value=>formatMeasureNumber({measure,property:null},value,settings.locale,measure.formatting?.shortNumber)))})}else gridOptions.tooltip.push({...(0,src.ezT)(options?.tooltip),trigger:"item"});return options?.legend&&gridOptions.legend.push((0,src.ezT)(options.legend)),gridOptions}var scatter3D_install=__webpack_require__("./node_modules/echarts-gl/lib/chart/scatter3D/install.js");function themeRiverCoordinate(context,data){const{chartAnnotation,entityType,settings,options}=context,category=(0,src.e6_)(chartAnnotation),categoryCaption=(0,src.Imp)(category,entityType),category2=(0,src.HLD)(chartAnnotation);if(!category2)throw new Error("Can't find dimension for series");const category2Caption=(0,src.Imp)(category2,entityType),measure=chartAnnotation.measures[0],categoryName=(0,src.Ex7)(category),category2Name=(0,src.Ex7)(category2),categoryMembers=new Map,category2Members=new Map,itemsMap=new Map;data.forEach((item=>{categoryMembers.set(item[categoryName],item[categoryCaption]),category2Members.set(item[category2Name],item[category2Caption]),itemsMap.set(`${item[categoryName]}/${item[category2Name]}`,item)}));const categoryMembersIndex=new Map;let index=0;for(const m1 of categoryMembers.keys())index++,categoryMembersIndex.set(index,m1);const seriesData=[];for(const m2 of category2Members.keys())for(const index of categoryMembersIndex.keys()){const cell=itemsMap.get(`${categoryMembersIndex.get(index)}/${m2}`);seriesData.push([index,cell?.[measure.measure]??0,category2Members.get(m2),m2])}const coordinateOptions={type:"SingleAxis",name:"",datasets:[{series:[{options:(0,src.kg4)((0,src.kg4)({data:seriesData},options?.seriesStyle,Number.MAX_SAFE_INTEGER),measure.chartOptions?.seriesStyle,Number.MAX_SAFE_INTEGER)}]}],grid:(0,src.kg4)({},options?.grid),singleAxis:[(0,src.kg4)({axisLabel:{formatter:(value,index)=>`${categoryMembers.get(categoryMembersIndex.get(value))??""}`},axisPointer:{animation:!0,label:{show:!0,formatter:(params,index)=>`${categoryMembers.get(categoryMembersIndex.get(params.value))??""}`}},max:"dataMax"},options?.singleAxis)],tooltip:[],legend:[]};return options?.legend&&coordinateOptions.legend.push((0,src.ezT)(options.legend)),options?.tooltip&&coordinateOptions.tooltip.push((0,src.kg4)({valueFormatter:value=>formatMeasureNumber({measure,property:(0,src.ZBB)(entityType,measure.measure)},value,settings?.locale)},options.tooltip)),coordinateOptions}(0,extension.D)([grid3D_install.N,scatter3D_install.N]),(0,extension.D)([install.N]);const PlaceholderSeriesName="__placeholder__";function waterfallCoordinate(context,data){const{chartAnnotation,entityType,settings,options}=context,category=(0,src.e6_)(chartAnnotation),categoryCaption=(0,src.Imp)(category,entityType);let datasets=[];if((0,src.HLD)(chartAnnotation))datasets=chartAnnotation.measures.filter((({role})=>!(0,includes.Z)([src.rRL.Tooltip,src.rRL.Size,src.rRL.Lightness],role))).map((measure=>stackedForMeasure(data,measure,chartAnnotation,entityType,settings,options)));else{const seriesComponents=measuresToSeriesComponents(chartAnnotation.measures,data,entityType);(data=data.map((row=>({...row}))))[0]&&(data[0]={...data[0]},chartAnnotation.measures.forEach((measure=>{const totalName=totalMeasureName(measure.measure),totalValue=(0,sumBy.Z)(data,measure.measure);data.forEach((row=>row[totalName]=totalValue)),(0,src.kKJ)(data[0][measure.measure])&&(data[0][measure.measure]="-")}))),datasets=[{dataset:{source:data},seriesComponents}]}context.datasets=datasets;const type="polar"===chartAnnotation.chartType.variant?"Polar":"Cartesian2d",{categoryAxis,valueAxis}="Polar"===type?getPolarCoordinateSystem(context,data,settings.locale):getCoordinateSystem(context,data,settings.locale),gridOptions={type,name:"",grid:mergeChartOptions({containLabel:!0},[],options?.grid),[categoryAxis.orient]:categoryAxis.axis.map((axis=>({...axis,data:data.map((row=>row[categoryCaption]))}))),[valueAxis.orient]:valueAxis.axis,datasets:[],tooltip:[],legend:[],dataZoom:[]};categoryAxis.dataZooms&&gridOptions.dataZoom.push(...categoryAxis.dataZooms),valueAxis.dataZooms&&gridOptions.dataZoom.push(...valueAxis.dataZooms),isCoordinatePolar(gridOptions)&&(gridOptions.polar=mergeChartOptions({},[],options?.polar)),context.datasets.forEach((({dataset,seriesComponents})=>{gridOptions.datasets.push({dataset,series:waterfallSeriesComponent(context,dataset,seriesComponents,valueAxis)})}));const measure=getMeasureAxis(chartAnnotation,src.rRL.Axis1,0);if(gridOptions.tooltip.push({...(0,src.ezT)(options.tooltip),trigger:"axis",axisPointer:{type:"shadow"},formatter:function(params){let tar;return tar=params[1]&&"-"!==params[1].value?params[1]:params[2],tar&&tar.name+"<br/>"+tar.seriesName+" : "+formatMeasureNumber({measure,property:null},tar.value,settings.locale,measure.formatting?.shortNumber)}}),options?.legend){const data=[];gridOptions.datasets.forEach((({series})=>{series.forEach((({options})=>{options.name&&options.name!==PlaceholderSeriesName&&data.push(options.name)}))})),gridOptions.legend.push(mergeChartOptions({data},[],options.legend))}return gridOptions}function waterfallSeriesComponent(context,dataset,seriesComponents,valueAxis){const{chartAnnotation,entityType,settings,options}=context,{chartType}=chartAnnotation,data=dataset.source,seriesStyle=seriesComponents[0].chartOptions?.seriesStyle??{},{accumulate}=seriesStyle,{measure}=seriesComponents[0],property=(0,src.ZBB)(entityType,measure),caption=(0,src.Bgl)(property)||measure,digitsInfo=defaultDigitsInfo(seriesComponents[0]);let total=0;const seriesData=data.reduce(((acc,item,i)=>{if(accumulate){const increase=item[measure];return total+=increase,acc.total.push(total),acc.positive.push(increase>0?increase:"-"),acc.negative.push(increase<0?-increase:"-"),acc}const increase=item[measure]-total;return acc.positive.push(increase>0?increase:"-"),acc.negative.push(increase<0?-increase:"-"),i>0&&(increase<0&&(total+=increase),acc.total.push(total)),increase>0&&(total=item[measure]),acc}),{total:[0],positive:[],negative:[]});return[{name:PlaceholderSeriesName,type:"bar",stack:"Total",silent:!0,itemStyle:{borderColor:"transparent",color:"transparent"},emphasis:{itemStyle:{borderColor:"transparent",color:"transparent"}},data:seriesData.total.splice(0,data.length)},{...mergeChartOptions({label:{show:!0,position:chartType.orient===src.lST.horizontal?"right":"top",formatter:params=>formatNumber(params.value,settings?.locale,digitsInfo)}},[],options?.seriesStyle,seriesStyle),name:caption+" (+)",type:"bar",stack:"Total",data:seriesData.positive},{...mergeChartOptions({label:{show:!0,position:chartType.orient===src.lST.horizontal?"left":"bottom",formatter:params=>formatNumber(params.value,settings?.locale,digitsInfo)}},[],options?.seriesStyle,seriesStyle),name:caption+" (-)",type:"bar",stack:"Total",data:seriesData.negative}].map((item=>({options:item,visualMaps:[]})))}(0,extension.D)([globe_install.N,geo3D_install.N,lines3D_install.N,polygons3D_install.N,surface_install.N,map3D_install.N,scatterGL_install.N,graphGL_install.N,flowGL_install.N,linesGL_install.N]);class SmartEChartEngine extends src.HTq{get echarts(){return this.echartsInstance$.value}set echarts(value){this.echartsInstance$.next(value)}constructor(){var _this;super({}),_this=this,this.echartsInstance$=new BehaviorSubject.X(null),this.error$=new BehaviorSubject.X(null),this.echartsOptions$=(0,combineLatest.a)([this.data$.pipe((0,filter.h)((value=>!!value))),this.chartAnnotation$.pipe((0,distinctUntilChanged.x)(src.Xyp),(0,filter.h)((chartAnnotation=>!(0,src.xbD)(chartAnnotation?.dimensions)||!(0,src.xbD)(chartAnnotation?.measures))),(0,switchMap.w)((chartAnnotation=>(0,src.nsn)(chartAnnotation.chartType)?(0,from.D)(function mapChartAnnotation(_x){return _mapChartAnnotation.apply(this,arguments)}(chartAnnotation)):(0,of.of)(chartAnnotation)))),this.settings$.pipe((0,distinctUntilChanged.x)(src.Xyp)),this.options$.pipe((0,distinctUntilChanged.x)(src.Xyp))]).pipe((0,delayWhen.j)((()=>this.echartsInstance$.pipe((0,filter.h)(src.vJr)))),(0,withLatestFrom.M)(this.entityType$),(0,switchMap.w)(function(){var _ref=(0,asyncToGenerator.Z)((function*([[data,chartAnnotation,settings,chartOptions],entityType]){chartOptions=mergeChartOptions({},[],chartOptions,chartAnnotation.chartType?.chartOptions);try{(settings={...settings??{}}).locale=settings.locale??"en";const type=chartAnnotation.chartType?.type;let context=null;if("Custom"===type){if(!chartAnnotation.chartType.scripts)throw new Error("Not provide script for 'Custom' chart type!");{let customLogic;try{customLogic=new Function("queryResult","chartAnnotation","entityType","locale","chartsInstance","utils","data",chartAnnotation.chartType.scripts)}catch(error){throw console.error(error),_this.error$.next(error.message),customLogic=null,new Error("Can't create custom script function, error: "+error.message)}if(customLogic)try{let customContext=customLogic(data,chartAnnotation,entityType,settings.locale,_this.echarts,{echarts:{time,format:api_format,use:extension.D,registerMap:echarts.je,getMap:echarts.FU,graphic},getEntityHierarchy:src.jEU,getEntityProperty:src.ZBB,getDimensionMemberCaption:src.Imp,getDefaultHierarchy:src.gyH,stringifyProperty:src.kwV,isVisible:src.pn4,isWrapBrackets:src.DJ1,wrapBrackets:src.KbT,unwrapBrackets:src.Mlb,wrapHierarchyValue:src.qZt,fromFetch:fetch.U,lastValueFrom:lastValueFrom.n,assignDeepOmitBlank:src.kg4,omitBlank:src.ezT,formatting:src.nt_,getPropertyCaption},data);customContext&&(customContext=yield Promise.resolve(customContext),context={...customContext,echartsOptions:(0,src.kg4)(customContext.options,pickEChartsGlobalOptions(chartOptions),Number.MAX_SAFE_INTEGER)})}catch(err){throw new Error("Execute custom script error: "+err.message)}}}if("Bar"===type&&(context=function bar(data,chartAnnotation,entityType,settings,options){return cartesian(data,chartAnnotation,entityType,settings,options,"bar")}(data,chartAnnotation,entityType,settings,chartOptions)),"Waterfall"===type&&(context=function waterfallChart(data,chartAnnotation,entityType,settings,options){const[categoryAxis,valueAxis]=axisOrient(chartAnnotation.chartType.orient),context={data,entityType,settings,options,chartAnnotation,categoryAxis,valueAxis},coordinateDatas=trellisCoordinates(context,"grid",waterfallCoordinate);return{...context,echartsOptions:gatherCoordinates(coordinateDatas,"bar",options)}}(data,chartAnnotation,entityType,settings,chartOptions)),"Line"===type&&(context=function line(data,chartAnnotation,entityType,settings,options){return cartesian(data,chartAnnotation,entityType,settings,options,"line")}(data,chartAnnotation,entityType,settings,chartOptions)),"Pie"===type&&(context=function pie(data,chartAnnotation,entityType,settings,options){if(data.data?.length>(settings?.maximumLimit??100))throw new Error(`Too much data, length ${data.data?.length}`);const context={data,chartAnnotation,entityType,settings,options},pieCoordinates=trellisCoordinates(context,"pie",pieCoordinate);return{...context,echartsOptions:gatherCoordinates(pieCoordinates,"pie",options)}}(data,chartAnnotation,entityType,settings,chartOptions)),"Scatter"!==type&&"EffectScatter"!==type||(context=function scatter(data,chartAnnotation,entityType,settings,options){const context={data,entityType,settings,options,chartAnnotation},pieCoordinates=trellisCoordinates(context,"grid",scatterCoordinate);return{...context,echartsOptions:gatherCoordinates(pieCoordinates,"scatter",options),onClick:event=>{const dimension=chartAnnotation.dimensions[0],hierarchy=(0,src.jEU)(entityType,dimension),caption=(0,src.Imp)(dimension,entityType),slicer=chartAnnotation.dimensions.length>1?{filteringLogic:src.vLo.And,children:chartAnnotation.dimensions.map((dimension=>{const hierarchy=(0,src.jEU)(entityType,dimension),caption=(0,src.Imp)(dimension,entityType);return{dimension,members:[{key:event.data[hierarchy.name],value:event.data[hierarchy.name],label:event.data[caption],caption:event.data[caption]}]}}))}:{dimension,members:[{key:event.data[hierarchy.name],value:event.data[hierarchy.name],label:event.data[caption],caption:event.data[caption]}]};return{...event,event:event.event?.event,slicers:[slicer]}}}}(data,chartAnnotation,entityType,settings,chartOptions)),"Heatmap"===type&&(context=function heatmap(data,chartAnnotation,entityType,settings,options){const context={data,entityType,settings,options,chartAnnotation};if("calendar"===chartAnnotation.chartType.variant)return getChartCalendar(chartAnnotation,entityType),{...context,echartsOptions:gatherCoordinates(trellisCoordinates(context,"grid",calendarCoordinate),"heatmap",options)};const coordinateDatas=trellisCoordinates(context,"grid",heatmap_cartesianCoordinate);return{...context,echartsOptions:gatherCoordinates(coordinateDatas,"heatmap",options)}}(data,chartAnnotation,entityType,settings,chartOptions)),"Bar3D"===type&&(context=function bar3d(data,chartAnnotation,entityType,settings,options){return cartesian3d(data,chartAnnotation,entityType,settings,options,"bar3D")}(data,chartAnnotation,entityType,settings,chartOptions)),"Scatter3D"===type&&(context=function scatter3d(data,chartAnnotation,entityType,settings,options){return cartesian3d(data,chartAnnotation,entityType,settings,options,"scatter3D")}(data,chartAnnotation,entityType,settings,chartOptions)),"Line3D"===type&&(context=function line3d(data,chartAnnotation,entityType,settings,options){return cartesian3d(data,chartAnnotation,entityType,settings,options,"line3D")}(data,chartAnnotation,entityType,settings,chartOptions)),"Tree"===type&&(context=function tree(data,chartAnnotation,entityType,settings,options){const context={data,chartAnnotation,entityType,settings,options},baseSeries={type:"tree",universalTransition:settings?.universalTransition,initialTreeDepth:2,emphasis:{focus:"descendant"}};if("radial"===chartAnnotation.chartType.variant?baseSeries.layout="radial":baseSeries.orient=chartAnnotation.chartType.orient===src.lST.vertical?"reverse"===chartAnnotation.chartType.variant?"BT":"vertical":"reverse"===chartAnnotation.chartType.variant?"RL":"horizontal",data.schema?.recursiveHierarchy){const series=(0,src.kg4)({...baseSeries,data:(0,src.LC)(data.data,data.schema?.recursiveHierarchy)},options?.seriesStyle),tooltip=(0,src.kg4)({valueFormatter:DefaultValueFormatter},options?.tooltip);return{...context,echartsOptions:{tooltip,series:[series]},onClick:event=>onClick(event,chartAnnotation,!0)}}{const{nodes,links}=leveledGraph(data.data,chartAnnotation,entityType,sumBy.Z),mainMeasureName=(0,src.e_i)(chartAnnotation.measures[0]);return{...context,echartsOptions:{series:[{type:"tree",id:mainMeasureName,universalTransition:settings?.universalTransition,data:nodes,links}]},onClick:event=>onClick(event,chartAnnotation,!1)}}}(data,chartAnnotation,entityType,settings,chartOptions)),"Treemap"===type&&(context=treemap(data,chartAnnotation,entityType,settings,chartOptions)),"Sunburst"===type&&(context=sunburst(data,chartAnnotation,entityType,settings,chartOptions)),"Sankey"===type&&(context=sankey(data,chartAnnotation,entityType,settings,chartOptions)),"Funnel"===type&&(context=function Funnel(data,chartAnnotation,entityType,settings,options){const context={data,chartAnnotation,entityType,settings,options},item=data.data[0],series={type:"funnel",minSize:"20%",maxSize:"100%",data:chartAnnotation.measures.map((measure=>{const property=(0,src.ZBB)(entityType,measure);return{value:item[measure.measure],name:property.caption||property.name,tooltip:(0,src.kg4)({valueFormatter:value=>formatMeasureNumber({measure,property},value,settings.locale,measure.formatting?.shortNumber)},measure.chartOptions?.tooltip)}}))},echartsOptions={tooltip:(0,src.kg4)({trigger:"item"},options?.tooltip),series:[(0,src.kg4)(series,options?.seriesStyle)]};return options?.legend&&(echartsOptions.legend=(0,src.kg4)({},options.legend)),(0,src.JHz)(echartsOptions,pickEChartsGlobalOptions(options)),{...context,echartsOptions}}(data,chartAnnotation,entityType,settings,chartOptions)),"ThemeRiver"===type&&(context=function themeRiver(data,chartAnnotation,entityType,settings,options){if(-1===chartAnnotation.dimensions.findIndex((item=>item.role===src.s3z.Stacked))){const dimension=(chartAnnotation=(0,src.XhB)(chartAnnotation)).dimensions.slice(1).find((item=>!item.role));dimension&&(dimension.role=src.s3z.Stacked)}const context={data,entityType,settings,options,chartAnnotation},coordinateDatas=trellisCoordinates(context,"grid",themeRiverCoordinate);return{...context,echartsOptions:gatherCoordinates(coordinateDatas,"themeRiver",options),onClick:event=>{console.log(event,chartAnnotation);const slicer={dimension:(0,src.HLD)(chartAnnotation),members:[{key:event.value[3],value:event.value[3],label:event.value[2],caption:event.value[2]}]};return{...event,event:event.event?.event,slicers:[slicer]}}}}(data,chartAnnotation,entityType,settings,chartOptions)),"Boxplot"===type&&(context=function boxplot(data,chartAnnotation,entityType,settings,options){const context={data,entityType,settings,options,chartAnnotation},pieCoordinates=trellisCoordinates(context,"grid",boxplotCoordinate);return{...context,echartsOptions:gatherCoordinates(pieCoordinates,"boxplot",options)}}(data,chartAnnotation,entityType,settings,chartOptions)),"GeoMap"===type&&(context=function mapChart(queryReturn,chartAnnotation,entityType,settings,options){const context={data:queryReturn,entityType,settings,options,chartAnnotation},chartType={...chartAnnotation.chartType};if(!(0,src.nsn)(chartType))throw new Error("It's not supposed to be here: Not a Map type");const chartCategory=(0,src.e6_)(chartAnnotation),chartCategoryName=(0,src.Ex7)(chartCategory),chartCategoryCaption=(0,src.Imp)(chartCategory,entityType),chartMeasure=chartAnnotation.measures[0],chartMeasureName=(0,src.e_i)(chartMeasure),seriesComponents=measuresToSeriesComponents(chartAnnotation.measures,queryReturn.data,entityType);let projection;if(chartType.projection)try{projection=d3Geo["geo"+chartType.projection]()}catch(err){try{projection=d3GeoProjection["geo"+chartType.projection]()}catch(err){throw new Error(`Can't find the projection '${chartType.projection}' in 'd3-geo' and 'd3-geo-projection' lib`)}}const visualMaps=[],series=seriesComponents.map((seriesComponent=>{let data;if(seriesComponent.shapeType){const latName=(0,src.HpB)(chartAnnotation.dimensions.find((item=>item.role===src.s3z.Lat))),longName=(0,src.HpB)(chartAnnotation.dimensions.find((item=>item.role===src.s3z.Long)));data=queryReturn.data.map((item=>({name:item[chartCategoryCaption??chartCategoryName],value:[item[longName],item[latName],item[chartMeasureName]??"-"]})))}else data=queryReturn.data.map((item=>({id:item[chartCategoryName],name:item[chartCategoryCaption],value:item[chartMeasureName]??"-"})));const _series={id:seriesComponent.id,name:seriesComponent.name??seriesComponent.measure,type:seriesComponent.shapeType??"map",geoIndex:0,emphasis:{label:{show:!0}},data,universalTransition:settings?.universalTransition};return visualMaps.push(getMeasurePaletteVisualMap((0,src.kg4)({palette:{name:"BrBG"}},seriesComponent),queryReturn.data,seriesComponent.property)),(0,src.kg4)(_series,options?.seriesStyle,Number.MAX_SAFE_INTEGER)})),echartsOptions={geo:(0,src.kg4)({map:chartType.map,projection:projection?{project:point=>projection(point),unproject:point=>projection.invert(point)}:null,roam:!0,emphasis:{label:{show:!0}}},options?.geo,Number.MAX_SAFE_INTEGER),visualMap:visualMaps,tooltip:(0,src.kg4)({trigger:"item",showDelay:0,transitionDuration:.2,valueFormatter:value=>seriesComponents[0]?formatMeasureNumber({measure:seriesComponents[0],property:seriesComponents[0].property},value,settings?.locale):formatNumber(Number(value),settings?.locale)},options?.tooltip,Number.MAX_SAFE_INTEGER),series};return{...context,echartsOptions:(0,src.kg4)(echartsOptions,pickEChartsGlobalOptions(options),Number.MAX_SAFE_INTEGER)}}(data,chartAnnotation,entityType,settings,chartOptions)),!context)throw new Error(`Unimplements type '${type}'`);return(0,src.xbD)(chartOptions?.colors?.color)||(context.echartsOptions.color=chartOptions.colors.color),chartOptions?.aria&&(context.echartsOptions.aria=(0,src.JHz)(context.aria,chartOptions.aria)),_this.context=context,{options:context.echartsOptions}}catch(err){return console.error(err),_this.error$.next(err.message),{error:err.message}}}));return function(_x){return _ref.apply(this,arguments)}}()),(0,catchError.K)((err=>(console.error(err),this.error$.next(err),empty.E))),(0,takeUntil.R)(this.destroy$),(0,shareReplay.d)(1)),this.chartClick$=this.createLazyEvent("click").pipe((0,withLatestFrom.M)(this.chartAnnotation$,this.entityType$),(0,map.U)((([event,chartAnnotation,entityType])=>{if(this.context.onClick)return this.context.onClick(event);const item=event.data?.item||event.data;return isSeriesDataItem(event.data)?{...event,event:event.event?.event,filter:event.data.slicer}:{...event,event:event.event?.event,filter:{filteringLogic:src.vLo.And,children:chartAnnotation.dimensions.map((dimension=>{const property=(0,src.jEU)(entityType,dimension),caption=(0,src.Imp)(dimension,entityType);return{dimension,members:[{key:item[property.name],value:item[property.name],label:item[caption],caption:item[caption]}]}}))}}})),(0,takeUntil.R)(this.destroy$),(0,shareReplay.d)(1)),this.selectChanged$=this.createLazyEvent("selectchanged").pipe((0,withLatestFrom.M)(this.echartsOptions$,this.chartAnnotation$,this.entityType$),(0,debounceTime.b)(100),(0,withLatestFrom.M)(this.chartClick$),(0,map.U)((([[event,echartsOptions,chartAnnotation,entityType],chartClick])=>{if("unselect"===event.fromAction)return{event:chartClick.event,slicers:null};if(chartClick.slicers?.length)return{...event,event:chartClick.event,slicers:chartClick.slicers};const category=(0,src.e6_)(chartAnnotation),chartSeries=(0,src.HLD)(chartAnnotation),dimensions=(0,src.mNm)(chartAnnotation.dimensions,((a,b)=>(a.hierarchy||a.dimension)===(b.hierarchy||b.dimension))),children=event.selected?.length?event.selected.filter((({dataType})=>!["edge"].includes(dataType))).map((({seriesIndex,dataIndex})=>{const series=echartsOptions.options.series[seriesIndex],datasetIndex=series.datasetIndex;if((0,src.kKJ)(datasetIndex)){const slicer={dimension:category,members:[]};return dataIndex.map((index=>{if(isSeriesDataItem(series.data[index]))slicer.dimension=series.data[index].slicer.dimension,slicer.members.push(...series.data[index].slicer.members);else{const caption=series.data[index].caption??series.data[index].name,key=series.data[index].id??series.data[index].name;slicer.members.push({value:key,label:caption,caption})}})),slicer}const dataset=echartsOptions.options.dataset[datasetIndex];return dataset.transform?chartClick.filter:chartSeries?{filteringLogic:src.vLo.And,children:[{dimension:category,members:dataIndex.map((index=>{const value=dataset.source[0][index+1];return{value,label:dataset.categories?.find((item=>item.value===value))?.caption,caption:dataset.categories?.find((item=>item.value===value))?.caption}}))},{dimension:chartSeries,members:[series.member]}]}:{filteringLogic:src.vLo.And,children:dimensions.map((dimension=>{const hierarchy=(0,src.jEU)(entityType,dimension),caption=(0,src.Imp)(dimension,entityType);return{dimension,members:dataIndex.map((index=>({key:dataset.source[index][hierarchy.name],value:dataset.source[index][hierarchy.name],label:dataset.source[index][caption],caption:dataset.source[index][caption]})))}}))}})):chartClick.filter?[chartClick.filter]:[];return{event:chartClick.event,slicers:1===children.length&&(0,src.wMY)(children[0])?children[0].children:children}})),(0,takeUntil.R)(this.destroy$),(0,shareReplay.d)(1)),this.chartContextMenu$=this.createLazyEvent("contextmenu").pipe((0,map.U)((event=>({...event,event:event.event?.event,slicers:null})))),this.chartHighlight$=this.createLazyEvent("highlight")}selectChartOptions(){return this.echartsOptions$}dispatchAction(event){this.echartsInstance$.value.dispatchAction(event)}createLazyEvent(eventName){return this.echartsInstance$.pipe((0,filter.h)((c=>!!c)),(0,switchMap.w)((chart=>new Observable.y((observer=>(chart.on(eventName,(params=>{observer.next(params)})),()=>{chart?.isDisposed()||chart.off(eventName)}))))))}}function getPropertyCaption(property){return property.memberCaption||property.name}var _AnalyticalCardService,store_src=__webpack_require__("./packages/store/src/index.ts"),cloneDeep=__webpack_require__("./node_modules/lodash-es/cloneDeep.js"),findIndex=__webpack_require__("./node_modules/lodash-es/findIndex.js"),skip=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/skip.js"),startWith=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/startWith.js"),pairwise=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/pairwise.js"),smart_filter_bar_service=__webpack_require__("./packages/angular/core/services/smart-filter-bar.service.ts");let AnalyticalCardService=((_AnalyticalCardService=class AnalyticalCardService extends src.gFA{constructor(dsCoreService,filterBarService){super(dsCoreService,filterBarService)}ngOnDestroy(){super.onDestroy()}}).ctorParameters=()=>[{type:core_service.q},{type:smart_filter_bar_service.N,decorators:[{type:core.Optional}]}],_AnalyticalCardService);AnalyticalCardService=(0,tslib_es6.gn)([(0,core.Injectable)(),(0,tslib_es6.w6)("design:paramtypes",[core_service.q,smart_filter_bar_service.N])],AnalyticalCardService);var _AnalyticalCardComponent,_destroyRef,rxjs_interop=__webpack_require__("./node_modules/@angular/core/fesm2022/rxjs-interop.mjs");let AnalyticalCardComponent=(_destroyRef=new WeakMap,_AnalyticalCardComponent=class AnalyticalCardComponent extends store_src.m1{get dataSettings(){return this.get((state=>state.dataSettings))}set dataSettings(value){this._dataSettings.set(value),this.patchState({dataSettings:value})}get slicers(){return this.get((state=>state.slicers))}set slicers(value){this.patchState({slicers:value})}get displayDensity(){return this.appearance?.displayDensity}get chartType(){return this.dataSettings?.chartAnnotation?.chartType}set chartType(chartType){this.patchState({dataSettings:{...this.dataSettings,chartAnnotation:{...this.dataSettings.chartAnnotation??{},chartType}}})}set empty(value){this._empty$.next(value)}constructor(){super({}),(0,classPrivateFieldInitSpec.Z)(this,_destroyRef,void 0),this.DisplayDensity=displayDensity.A,this.businessService=(0,core.inject)(AnalyticalCardService),this.translate=(0,core.inject)(ngx_translate_core.sK),this._ngZone=(0,core.inject)(core.NgZone),this._cdr=(0,core.inject)(core.ChangeDetectorRef),(0,classPrivateFieldSet2.Z)(_destroyRef,this,(0,core.inject)(core.DestroyRef)),this.echartsEngine=new SmartEChartEngine,this._slicersChanging$=new BehaviorSubject.X(null),this._isAnalyticalCard=!0,this._dataSettings$=this.select((state=>state.dataSettings)),this._dataSettings=(0,core.signal)(null),this.slicersChange=new core.EventEmitter,this.slicersChanging=this._slicersChanging$.pipe((0,skip.T)(1),(0,distinctUntilChanged.x)(src.Xyp)),this.chartClick=this.echartsEngine.chartClick$,this.chartHighlight=this.echartsEngine.chartHighlight$,this.chartContextMenu=this.echartsEngine.chartContextMenu$,this.explain=new core.EventEmitter,this.contextMenuPosition={x:"0px",y:"0px"},this.options$=this.echartsEngine.selectChartOptions().pipe((0,filter.h)((({error})=>(error?this.error$.next(error):this.error$.next(null),!error))),(0,map.U)((({options})=>options)),(0,startWith.O)({})),this.isLoading$=this.businessService.loading$,this.error$=new BehaviorSubject.X(null),this._empty$=new BehaviorSubject.X(!1),this.empty$=(0,combineLatest.a)([this._empty$,this.error$]).pipe((0,map.U)((([empty,error])=>empty&&!error))),this.selectedDrilledDimensions$=this.select((state=>state.selectedDrilledDimensions)),this.selectedSlicers$=this.select((state=>state.selectedSlicers)),this.drilledDimensions$=this.select((state=>state.drilledDimensions)),this.breadcrumbs$=this.drilledDimensions$.pipe((0,map.U)((drills=>drills?.map((item=>({value:item,label:item.slicer.members[0].label||item.slicer.members[0].value,active:!0})))))),this.dillSlicers$=this.selectedSlicers$.pipe((0,map.U)((slicers=>(0,src.wMY)(slicers?.[0])?slicers[0].children:slicers)),(0,withLatestFrom.M)(this.businessService.selectEntityType()),(0,map.U)((([slicers,entityType])=>slicers?.map((slicer=>{const property=(0,src.ZBB)(entityType,slicer.dimension);return{value:slicer,label:(property.caption||property.name)+":"+(0,src.J4Q)(slicer)}}))))),this.drillDimensions$=this.select(this.businessService.presentationVariant$,this.businessService.selectEntityType(),this.selectedDrilledDimensions$,((presentationVariant,entityType,selectedDrilledDimensions)=>presentationVariant?.groupBy?.map((item=>({dimension:item,property:(0,src.ZBB)(entityType,item),disabled:!!selectedDrilledDimensions?.find((selected=>(0,src.HpB)(selected.dimension)===(0,src.HpB)(item)))}))).filter((({property})=>!!property)))),this.canDrillDimensions$=this.drillDimensions$.pipe((0,map.U)((drillDimensions=>!(0,isEmpty.Z)(drillDimensions)))),this.dataSettings$=(0,combineLatest.a)([this._dataSettings$,this.select((state=>state.slicers)),this.selectedDrilledDimensions$]).pipe((0,filter.h)((([dataSettings])=>!(0,isNil.Z)(dataSettings))),(0,map.U)((([dataSettings,slicers,selectedHierachyLevels])=>{const chartAnnotation=dataSettings.chartAnnotation,_selectOptions=dataSettings.selectionVariant?.selectOptions??[],selectionVariant={...dataSettings.selectionVariant??{},selectOptions:slicers?.reduce(((slicers,item)=>(0,src.KsU)(slicers,item)),_selectOptions)??_selectOptions};if((0,isEmpty.Z)(selectedHierachyLevels))return{...dataSettings,selectionVariant};const _chartAnnotation=(0,cloneDeep.Z)(chartAnnotation),dimensions=_chartAnnotation.dimensions;selectedHierachyLevels.forEach((item=>{const index=(0,findIndex.Z)(dimensions,(o=>(0,src.HpB)(o)===(0,src.HpB)(item.parent)));dimensions.splice(index,1,{...dimensions[index],...item.dimension})}));const selectOptions=selectedHierachyLevels.reduce(((slicers,item)=>(0,src.KsU)(slicers,item.slicer)),selectionVariant.selectOptions);return(0,lodash_es_assign.Z)((0,cloneDeep.Z)(dataSettings),{chartAnnotation:{..._chartAnnotation,dimensions},selectionVariant:{...selectionVariant,selectOptions}})})),(0,rxjs_interop.sL)(),(0,shareReplay.d)(1)),this.drillLevels$=(0,combineLatest.a)([this.dataSettings$,this.businessService.selectEntityType(),this.select((state=>state.selectedSlicers))]).pipe((0,map.U)((([dataSettings,entityType,selectedSlicers])=>dataSettings.chartAnnotation.dimensions.map((dimension=>({dimension,hierarchy:(0,src.jEU)(entityType,dimension)}))).filter((({hierarchy})=>hierarchy?.levels)).map((({dimension,hierarchy})=>{const selectedSlicer=selectedSlicers[0],slicer=(0,src.wMY)(selectedSlicer)?selectedSlicer.children?.find((slicer=>slicer.dimension.dimension===dimension.dimension)):selectedSlicer;if(slicer?.dimension?.dimension!==dimension.dimension)return{property:hierarchy,slicer:null};const slicerLevel=(0,src.uZv)(entityType,slicer?.dimension);return{slicer,property:hierarchy,levels:hierarchy.levels.map((level=>({property:level,disabled:level.levelNumber<=(slicerLevel?.levelNumber||0)}))),slicerCaption:(0,src.J4Q)(slicer)}})).filter((({slicer})=>(0,src.vJr)(slicer))))),(0,rxjs_interop.sL)(),(0,shareReplay.d)(1)),this.canDrillLevels$=this.drillLevels$.pipe((0,map.U)((levels=>!(0,isEmpty.Z)(levels)))),this.dilldown$=this.selectedSlicers$.pipe((0,map.U)((selectedSlicers=>{const first=selectedSlicers[0];return(0,src.wMY)(first)?first.children[0]:(0,src.oHo)(first)?first:null}))),this._dataSettingsSub=this.dataSettings$.pipe((0,filter.h)(Boolean),(0,startWith.O)(null),(0,pairwise.G)(),(0,rxjs_interop.sL)()).subscribe((([a,b])=>{(0,src.Xyp)({...a??{},chartAnnotation:(0,src.CEd)(a?.chartAnnotation,"chartType")},{...b,chartAnnotation:(0,src.CEd)(b.chartAnnotation,"chartType")})&&(this.echartsEngine.chartAnnotation=b?.chartAnnotation),this.businessService.dataSettings=b})),this._explainSub=(0,combineLatest.a)([this.dataSettings$,this.businessService.selectResult(),this.echartsEngine.selectChartOptions().pipe((0,startWith.O)(null))]).pipe((0,rxjs_interop.sL)()).subscribe((([dataSettings,queryReturn,chartOptions])=>{this.explain.emit([dataSettings,queryReturn,chartOptions])})),this._echartsOptionSub=this.echartsEngine.selectChartOptions().pipe((0,rxjs_interop.sL)()).subscribe((()=>{this.openContextMenu(null)})),this._contextMenuSub=this.echartsEngine.chartContextMenu$.pipe((0,rxjs_interop.sL)()).subscribe((event=>{event.event.stopPropagation(),event.event.preventDefault(),this.echartsEngine.dispatchAction({...(0,src.eiS)(event,"seriesIndex","seriesId","seriesName","dataIndex","name"),type:"unselect"})})),this._selectChangedSub=this.echartsEngine.selectChanged$.pipe((0,rxjs_interop.sL)()).subscribe((event=>{this._ngZone.run((()=>{this.openContextMenu(event.slicers,event.event)}))})),this.drill=this.updater(((state,drillLevel)=>{state.selectedDrilledDimensions=state.selectedDrilledDimensions||[],state.drilledDimensions=state.drilledDimensions||[],state.drilledDimensions=[...state.selectedDrilledDimensions,drillLevel],state.selectedDrilledDimensions=[...state.drilledDimensions]})),this.reselectDrill=this.updater(((state,drillLevels)=>{state.selectedDrilledDimensions=drillLevels.map((({value})=>value))})),this.drillLevel=this.effect((origin$=>origin$.pipe((0,withLatestFrom.M)(this.businessService.selectEntityType()),(0,tap.b)((([{slicer,property},entityType])=>{if((0,src.wMY)(slicer)){const parentFilter=slicer.children.find((item=>(0,src.Ex7)(item.dimension)===property.hierarchyLevelFor));parentFilter.drill=src.GDu.Children,this.drill({parent:parentFilter.dimension,slicer:parentFilter,dimension:(0,src.rUp)(property.name,entityType)})}else this.drill({parent:slicer.dimension,slicer:{...slicer,drill:src.GDu.Children},dimension:(0,src.rUp)(property.name,entityType)});this.contextMenu.closeMenu()}))))),this.drillDown=this.updater(((state,slicer)=>{(0,src.wMY)(slicer)?slicer.children.forEach((slicer=>{this.drill({parent:slicer.dimension,slicer:{...slicer,drill:src.GDu.Children},dimension:slicer.dimension})})):this.drill({parent:slicer.dimension,slicer:{...slicer,drill:src.GDu.Children},dimension:slicer.dimension})})),this.clearDrill=this.updater((state=>{state.drilledDimensions=null,state.selectedDrilledDimensions=null}))}ngOnInit(){var _this=this;this.businessService.selectResult().pipe((0,filter.h)((({error})=>(error?this.error$.next(error):this.error$.next(null),!error))),(0,withLatestFrom.M)(this.businessService.chartAnnotation$),(0,rxjs_interop.sL)((0,classPrivateFieldGet2.Z)(_destroyRef,this))).subscribe((([result,chartAnnotation])=>{this.empty=!result.data?.length,this.echartsEngine.data=result,this.echartsEngine.chartAnnotation=chartAnnotation})),this.businessService.onAfterServiceInit().pipe((0,rxjs_interop.sL)((0,classPrivateFieldGet2.Z)(_destroyRef,this))).subscribe((0,asyncToGenerator.Z)((function*(){_this.echartsEngine.entityType=yield _this.businessService.getEntityType(),_this.refresh()})))}ngOnChanges({dataSettings,chartSettings,chartOptions}){(dataSettings||chartSettings||chartOptions)&&this.error$.next(null),chartSettings&&(this.echartsEngine.settings=chartSettings.currentValue),chartOptions&&(this.echartsEngine.options=chartOptions.currentValue)}refresh(force){this.businessService.refresh(force)}onChartInit(event){this.echartsEngine.echarts=event}onOptionsError(event){this.error$.next(event.message),this.echartsEngine.echarts.dispose(),this._cdr.detectChanges()}openContextMenu(slicers,event){event?.stopPropagation(),event?.preventDefault(),this.patchState({selectedSlicers:slicers}),"touchend"===event?.type?(this.contextMenuPosition.x=event.zrX+50+"px",this.contextMenuPosition.y=event.zrY+"px"):event&&(this.contextMenuPosition.x=event.offsetX+50+"px",this.contextMenuPosition.y=event.offsetY+"px"),this.contextMenu.menuData={slicers},(0,isEmpty.Z)(slicers)?(this.contextMenu.closeMenu(),this.onLinkAnalysis([])):(this.options?.disableContextMenu||this.contextMenu.openMenu(),this.options?.realtimeLinked&&this.onLinkAnalysis(slicers))}onLinkAnalysis(slicers){this.slicersChange.emit(slicers),this._slicersChanging$.next(slicers)}screenshot(){const baseImage=this.echartsEngine.echarts.getDataURL({type:"png"}),downloadLink=document.createElement("a");document.body.appendChild(downloadLink),downloadLink.href=baseImage,downloadLink.target="_self",downloadLink.download=(this.title||"image")+".png",downloadLink.click()}downloadData(){(0,csv.O)(this.echartsEngine.data.data,(this.title||"data")+".csv",",")}get _drilled(){return this.get((state=>state.selectedDrilledDimensions))}ngOnDestroy(){this.echartsEngine.onDestroy(),super.onDestroy()}},_AnalyticalCardComponent.ctorParameters=()=>[],_AnalyticalCardComponent.propDecorators={_isAnalyticalCard:[{type:core.HostBinding,args:["class.ngm-analytical-card"]}],title:[{type:core.Input}],appearance:[{type:core.Input}],dataSettings:[{type:core.Input}],chartSettings:[{type:core.Input}],chartOptions:[{type:core.Input}],options:[{type:core.Input}],slicers:[{type:core.Input}],slicersChange:[{type:core.Output}],slicersChanging:[{type:core.Output}],chartClick:[{type:core.Output}],chartHighlight:[{type:core.Output}],chartContextMenu:[{type:core.Output}],explain:[{type:core.Output}],contextMenu:[{type:core.ViewChild,args:["contextMenuTrigger"]}],_drilled:[{type:core.HostBinding,args:["class.ngm-analytical-card__drilled"]}]},_AnalyticalCardComponent);AnalyticalCardComponent=(0,tslib_es6.gn)([(0,core.Component)({changeDetection:core.ChangeDetectionStrategy.OnPush,selector:"ngm-analytical-card",template:'@if (!options?.hideHeader) {\n  <div class="ngm-card-header flex justify-between items-center">\n    <div class="ngm-card-header__title">{{ title }}</div>\n    \n    <div class="flex-1 flex justify-end items-center">\n\n      <ng-content></ng-content>\n\n      <mat-button-toggle-group *ngIf="chartSettings?.chartTypes?.length" displayDensity="compact" ngmAppearance="color" color="primary"\n        [(ngModel)]="chartType"  \n      >\n        <mat-button-toggle *ngIf="_dataSettings()?.chartAnnotation?.chartType"\n          [value]="_dataSettings().chartAnnotation.chartType">\n          {{ _dataSettings().chartAnnotation.chartType.name || _dataSettings().chartAnnotation.chartType.type }}\n        </mat-button-toggle>\n        <mat-button-toggle *ngFor="let chartType of chartSettings.chartTypes" [value]="chartType">\n          {{ chartType?.name || chartType?.type }}\n        </mat-button-toggle>\n      </mat-button-toggle-group>\n    </div>\n\n    <div class="actions flex justify-around items-center">\n\n      <ng-content select="[ngmAction]"></ng-content>\n\n      \x3c!-- data download --\x3e\n      <button mat-icon-button *ngIf="!options?.hideDataDownload" displayDensity="cosy" [matTooltip]=" \'Ngm.AnalyticalCard.DataDownload\' | translate: {Default: \'Data Download\'} "\n        (click)="downloadData()">\n        <mat-icon fontSet="material-icons-outlined">file_download</mat-icon>\n      </button>\n\n      \x3c!-- screenshot --\x3e\n      <button mat-icon-button *ngIf="!options?.hideScreenshot" displayDensity="cosy" [matTooltip]=" \'Ngm.AnalyticalCard.Screenshot\' | translate: {Default: \'Screenshot\'} "\n        (click)="screenshot()">\n        <mat-icon fontSet="material-icons-outlined">photo_camera</mat-icon>\n      </button>\n\n      \x3c!-- Refresh & Loading icon --\x3e\n      <button mat-icon-button class="ngm-analytical-card__refresh" displayDensity="cosy"\n        [matTooltip]=" \'Ngm.AnalyticalCard.Refresh\' | translate: {Default: \'Refresh\'} "\n        [style.visibility]="(isLoading$ | async) ? \'hidden\' : \'visible\'"\n        (click)="refresh()">\n        <mat-icon fontSet="material-icons-outlined">refresh</mat-icon>\n      </button>\n      <mat-spinner *ngIf="isLoading$ | async" class="ngm-analytical-card__loading"\n        [diameter]="20"\n        [strokeWidth]="1"\n      >\n      </mat-spinner>\n    </div>\n  </div>\n}\n\n@if (breadcrumbs$ | async; as breadcrumbs) {\n  <ngm-breadcrumb-bar class="shrink-0" [displayDensity]="appearance?.displayDensity ?? DisplayDensity.compact"\n    [steps]="breadcrumbs"\n    (selectedChange)="reselectDrill($event)"\n    (close)="clearDrill()">\n  </ngm-breadcrumb-bar>\n}\n\n<div class="ngm-card-content">\n  <div *ngIf="error$ | async as error" class="ngm-card-error">\n    <span class="title-icon text-2xl font-notoColorEmoji">🐞</span>\n    <span>\n      {{ error }}\n    </span>\n  </div>\n\n  <div *ngIf="empty$ | async" class="ngm-card-error">\n    <span class="title-icon text-2xl font-notoColorEmoji">🛒</span>\n    <span>\n      {{ \'Ngm.AnalyticalCard.DataEmpty\' | translate: {Default: "Data Empty"} }}\n    </span>\n  </div>\n\n  <ng-container *ngIf="!((error$ | async) || (empty$ | async))">\n    <div echarts class="echarts-chart"\n      [options]="options$ | async"\n      [theme]="chartSettings?.theme ?? \'default\'"\n      (chartInit)="onChartInit($event)"\n      (optionsError)="onOptionsError($event)"\n    >\n    </div>\n  </ng-container>\n    \n</div>\n\n\n<div style="visibility: hidden; position: absolute;"\n  #contextMenuTrigger="matMenuTrigger"\n    [style.left]="contextMenuPosition.x"\n    [style.top]="contextMenuPosition.y"\n    [matMenuTriggerFor]="contextMenu">\n</div>\n\n\x3c!-- [hasBackdrop]="false" --\x3e\n<mat-menu #contextMenu="matMenu" class="ngm-density__compact">\n\t<ng-template matMenuContent let-slicers="slicers">\n\n    <button mat-menu-item (click)="onLinkAnalysis(slicers)">\n      <mat-icon displayDensity="cosy">add_link</mat-icon>\n      {{ \'Ngm.AnalyticalCard.LinkAnalysis\' | translate: {Default: "Link Analysis"} }}\n    </button>\n\n    <ng-container *ngIf="canDrillLevels$ | async">\n      <mat-divider></mat-divider>\n      <button mat-menu-item disableRipple disabled>\n        {{ \'Ngm.AnalyticalCard.DrillLevel\' | translate: {Default: "Drill Level"} }}\n      </button>\n      <button mat-menu-item *ngFor="let drill of drillLevels$ | async"\n        [matMenuTriggerFor]="drillLevelsMenu"\n        [matMenuTriggerData]="{slicer: drill.slicer, levels: drill.levels}">\n        <mat-icon displayDensity="cosy">format_list_numbered</mat-icon>\n        <div class="flex-1 overflow-hidden whitespace-nowrap text-ellipsis">\n          {{drill.property.caption || drill.property.name}}:{{drill.slicerCaption}}\n        </div>\n      </button>\n    </ng-container>\n\n    <ng-container *ngIf="canDrillDimensions$ | async">\n      <mat-divider></mat-divider>\n      <button mat-menu-item disableRipple disabled>\n        {{ \'Ngm.AnalyticalCard.DrillDimension\' | translate: {Default: "Drill Dimension"} }}\n      </button>\n\n      <button mat-menu-item *ngFor="let item of dillSlicers$ | async"\n        [matMenuTriggerFor]="drillDimensionsMenu"\n        [matMenuTriggerData]="{slicer: item.value}">\n        <mat-icon displayDensity="cosy">tag</mat-icon>{{ item.label }}\n      </button>\n\n    </ng-container>\n\n    <ng-container *ngIf="dilldown$ | async as slicer">\n      <mat-divider></mat-divider>\n      <button mat-menu-item  (click)="drillDown(slicer)">\n        <mat-icon displayDensity="cosy">arrow_drop_down</mat-icon>\n        {{ \'Ngm.AnalyticalCard.DrillDown\' | translate: {Default: "Drill Down"} }}\n      </button>\n    </ng-container>\n\t\t\n\t</ng-template>\n</mat-menu>\n\n<mat-menu #drillLevelsMenu="matMenu" class="ngm-density__compact">\n  <ng-template matMenuContent let-levels="levels" let-slicer="slicer">\n    <button mat-menu-item *ngFor="let item of levels" \n      [disabled]="item.disabled"\n      (click)="drillLevel({property: item.property, slicer})">\n      <ngm-entity-property [property]="item.property"></ngm-entity-property>\n    </button>\n  </ng-template>\n</mat-menu>\n\n<mat-menu #drillDimensionsMenu="matMenu" class="ngm-density__compact">\n  <ng-template matMenuContent let-slicer="slicer">\n    <button mat-menu-item *ngFor="let item of drillDimensions$ | async" \n      [disabled]="item.disabled"\n      (click)="drill({parent: slicer.dimension, dimension: item.dimension, slicer})">\n      <ngm-entity-property [property]="item.property"></ngm-entity-property>\n    </button>\n  </ng-template>\n</mat-menu>\n',providers:[AnalyticalCardService],host:{"[class.ngm-density__compact]":"!displayDensity||displayDensity==='compact'","[class.ngm-density__cosy]":"displayDensity==='cosy'"},styles:[analytical_card_componentngResource_default()]}),(0,tslib_es6.w6)("design:paramtypes",[])],AnalyticalCardComponent);var fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),fesm2022_button=__webpack_require__("./node_modules/@angular/material/fesm2022/button.mjs"),button_toggle=__webpack_require__("./node_modules/@angular/material/fesm2022/button-toggle.mjs"),card=__webpack_require__("./node_modules/@angular/material/fesm2022/card.mjs"),divider=__webpack_require__("./node_modules/@angular/material/fesm2022/divider.mjs"),icon=__webpack_require__("./node_modules/@angular/material/fesm2022/icon.mjs"),menu=__webpack_require__("./node_modules/@angular/material/fesm2022/menu.mjs"),progress_spinner=__webpack_require__("./node_modules/@angular/material/fesm2022/progress-spinner.mjs"),tooltip=__webpack_require__("./node_modules/@angular/material/fesm2022/tooltip.mjs"),common_module=__webpack_require__("./packages/angular/common/common.module.ts"),property_component=__webpack_require__("./packages/angular/entity/property/property.component.ts");let AnalyticalCardModule=class AnalyticalCardModule{};AnalyticalCardModule=(0,tslib_es6.gn)([(0,core.NgModule)({imports:[common.CommonModule,fesm2022_forms.u5,card.QW,fesm2022_button.ot,icon.Ps,menu.Tx,progress_spinner.Cq,divider.t,tooltip.AV,button_toggle.vV,NgxEchartsModule,ngx_translate_core.aw,common_module.N,property_component.lG,core_module.A],declarations:[AnalyticalCardComponent],exports:[AnalyticalCardComponent]})],AnalyticalCardModule);const analytical_card_component_stories={title:"Story/AnalyticalCard",component:AnalyticalCardComponent,decorators:[(0,dist.applicationConfig)({providers:[(0,animations.provideAnimations)(),(0,core.importProvidersFrom)(ngx_translate_core.aw.forRoot({missingTranslationHandler:{provide:ngx_translate_core.gC,useClass:missing_tanslation.l},loader:{provide:ngx_translate_core.Zw,useClass:class CustomLoader{getTranslation(lang){return(0,of.of)(zhHans.q)}}},defaultLanguage:"zh-Hans"})),(0,core.importProvidersFrom)(core_module.A),(0,core.importProvidersFrom)(NgxEchartsModule.forRoot({echarts:()=>__webpack_require__.e(1692).then(__webpack_require__.bind(__webpack_require__,"./node_modules/echarts/index.js"))}))]}),(0,dist.moduleMetadata)({imports:[common.CommonModule,AnalyticalCardModule],providers:[core_service.q,{provide:types.fH,useClass:agent_mock_service.ch,multi:!0},{provide:types.OF,useValue:{type:"SQL",factory:(_ref=(0,asyncToGenerator.Z)((function*(){const{SQLDataSource}=yield __webpack_require__.e(3958).then(__webpack_require__.bind(__webpack_require__,"./packages/sql/src/index.ts"));return SQLDataSource})),function factory(){return _ref.apply(this,arguments)})},multi:!0},{provide:types.ET,useValue:{name:"Sales",type:"SQL",agentType:src.buO.Browser,settings:{ignoreUnknownProperty:!0},schema:{cubes:[agent_mock_service.nH,{...agent_mock_service.nH,name:"SalesOrder10s"},{...agent_mock_service.nH,name:"Empty"}]}},multi:!0}]})]};var _ref;const Primary={args:{title:"Primary Analytical Card",appearance:{},dataSettings:{dataSource:"Sales",entitySet:"SalesOrder",chartAnnotation:{chartType:{type:"Bar"},dimensions:[{dimension:"[Product]"}],measures:[{dimension:src.QPo,measure:"Sales"}]}},options:{}}},Appearance={args:{title:"Display Density Compact",appearance:{displayDensity:displayDensity.A.compact},dataSettings:{dataSource:"Sales",entitySet:"SalesOrder",chartAnnotation:{chartType:{type:"Bar"},dimensions:[{dimension:"[Product]"}],measures:[{dimension:src.QPo,measure:"Sales"}]}},options:{}}},Loading={args:{title:"Loading",appearance:{displayDensity:displayDensity.A.compact},dataSettings:{dataSource:"Sales",entitySet:"SalesOrder10s",chartAnnotation:{chartType:{type:"Bar"},dimensions:[{dimension:"[Product]"}],measures:[{dimension:src.QPo,measure:"Sales"}]}},options:{}}},HideButtons={args:{title:"Hide Buttons",appearance:{},dataSettings:{dataSource:"Sales",entitySet:"SalesOrder",chartAnnotation:{chartType:{type:"Bar"},dimensions:[{dimension:"[Product]"}],measures:[{dimension:src.QPo,measure:"Sales"}]}},options:{}}},Empty={args:{title:"Empty Data",appearance:{},dataSettings:{dataSource:"Sales",entitySet:"Empty",chartAnnotation:{chartType:{type:"Bar"},dimensions:[{dimension:"[Product]"}],measures:[{dimension:src.QPo,measure:"Sales"}]}},options:{}}},analytical_card_component_stories_Error={args:{title:"Error",appearance:{},dataSettings:{dataSource:"Sales",entitySet:"SalesOrder",chartAnnotation:{chartType:{type:"Bar"},dimensions:[{dimension:"[Product]"}],measures:[{dimension:src.QPo,measure:"Sales1"}]}},options:{}}},SetOptionError={args:{title:"SetOption Error",appearance:{},dataSettings:{dataSource:"Sales",entitySet:"SalesOrder",chartAnnotation:{chartType:{type:"Bar"},dimensions:[{dimension:"[Product]"}],measures:[{dimension:src.QPo,measure:"Sales"},{dimension:src.QPo,measure:"Sales"}]}},options:{}}},DrillDimensions={args:{title:"Drill Dimensions",appearance:{},dataSettings:{dataSource:"Sales",entitySet:"SalesOrder",chartAnnotation:{chartType:{type:"Bar"},dimensions:[{dimension:"[Product]"}],measures:[{dimension:src.QPo,measure:"Sales"}]},presentationVariant:{groupBy:[{dimension:"[Department]",level:"[Department].[Department]"}]}},options:{}}},ChartTypes={args:{title:"Chart Types",appearance:{},dataSettings:{dataSource:"Sales",entitySet:"SalesOrder",chartAnnotation:{chartType:{type:"Bar"},dimensions:[{dimension:"[Product]"}],measures:[{dimension:src.QPo,measure:"Sales"}]},presentationVariant:{groupBy:[{dimension:"[Department]",level:"[Department].[Department]"}]}},chartSettings:{chartTypes:[{type:"Line"}]},options:{}}};Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'Primary Analytical Card',\n    appearance: {\n      // displayBehaviour: DisplayBehaviour.auto,\n    },\n    dataSettings: {\n      dataSource: 'Sales',\n      entitySet: 'SalesOrder',\n      chartAnnotation: {\n        chartType: {\n          type: 'Bar'\n        },\n        dimensions: [{\n          dimension: '[Product]'\n        }],\n        measures: [{\n          dimension: C_MEASURES,\n          measure: 'Sales'\n        }]\n      }\n    },\n    options: {}\n  }\n}",...Primary.parameters?.docs?.source}}},Appearance.parameters={...Appearance.parameters,docs:{...Appearance.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'Display Density Compact',\n    appearance: {\n      displayDensity: DisplayDensity.compact\n    },\n    dataSettings: {\n      dataSource: 'Sales',\n      entitySet: 'SalesOrder',\n      chartAnnotation: {\n        chartType: {\n          type: 'Bar'\n        },\n        dimensions: [{\n          dimension: '[Product]'\n        }],\n        measures: [{\n          dimension: C_MEASURES,\n          measure: 'Sales'\n        }]\n      }\n    },\n    options: {}\n  }\n}",...Appearance.parameters?.docs?.source}}},Loading.parameters={...Loading.parameters,docs:{...Loading.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'Loading',\n    appearance: {\n      displayDensity: DisplayDensity.compact\n    },\n    dataSettings: {\n      dataSource: 'Sales',\n      entitySet: 'SalesOrder10s',\n      chartAnnotation: {\n        chartType: {\n          type: 'Bar'\n        },\n        dimensions: [{\n          dimension: '[Product]'\n        }],\n        measures: [{\n          dimension: C_MEASURES,\n          measure: 'Sales'\n        }]\n      }\n    },\n    options: {}\n  }\n}",...Loading.parameters?.docs?.source}}},HideButtons.parameters={...HideButtons.parameters,docs:{...HideButtons.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'Hide Buttons',\n    appearance: {},\n    dataSettings: {\n      dataSource: 'Sales',\n      entitySet: 'SalesOrder',\n      chartAnnotation: {\n        chartType: {\n          type: 'Bar'\n        },\n        dimensions: [{\n          dimension: '[Product]'\n        }],\n        measures: [{\n          dimension: C_MEASURES,\n          measure: 'Sales'\n        }]\n      }\n    },\n    options: {}\n  }\n}",...HideButtons.parameters?.docs?.source}}},Empty.parameters={...Empty.parameters,docs:{...Empty.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'Empty Data',\n    appearance: {},\n    dataSettings: {\n      dataSource: 'Sales',\n      entitySet: 'Empty',\n      chartAnnotation: {\n        chartType: {\n          type: 'Bar'\n        },\n        dimensions: [{\n          dimension: '[Product]'\n        }],\n        measures: [{\n          dimension: C_MEASURES,\n          measure: 'Sales'\n        }]\n      }\n    },\n    options: {}\n  }\n}",...Empty.parameters?.docs?.source}}},analytical_card_component_stories_Error.parameters={...analytical_card_component_stories_Error.parameters,docs:{...analytical_card_component_stories_Error.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'Error',\n    appearance: {},\n    dataSettings: {\n      dataSource: 'Sales',\n      entitySet: 'SalesOrder',\n      chartAnnotation: {\n        chartType: {\n          type: 'Bar'\n        },\n        dimensions: [{\n          dimension: '[Product]'\n        }],\n        measures: [{\n          dimension: C_MEASURES,\n          measure: 'Sales1'\n        }]\n      }\n    },\n    options: {}\n  }\n}",...analytical_card_component_stories_Error.parameters?.docs?.source}}},SetOptionError.parameters={...SetOptionError.parameters,docs:{...SetOptionError.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'SetOption Error',\n    appearance: {},\n    dataSettings: {\n      dataSource: 'Sales',\n      entitySet: 'SalesOrder',\n      chartAnnotation: {\n        chartType: {\n          type: 'Bar'\n        },\n        dimensions: [{\n          dimension: '[Product]'\n        }],\n        measures: [{\n          dimension: C_MEASURES,\n          measure: 'Sales'\n        }, {\n          dimension: C_MEASURES,\n          measure: 'Sales'\n        }]\n      }\n    },\n    options: {}\n  }\n}",...SetOptionError.parameters?.docs?.source}}},DrillDimensions.parameters={...DrillDimensions.parameters,docs:{...DrillDimensions.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'Drill Dimensions',\n    appearance: {},\n    dataSettings: {\n      dataSource: 'Sales',\n      entitySet: 'SalesOrder',\n      chartAnnotation: {\n        chartType: {\n          type: 'Bar'\n        },\n        dimensions: [{\n          dimension: '[Product]'\n        }],\n        measures: [{\n          dimension: C_MEASURES,\n          measure: 'Sales'\n        }]\n      },\n      presentationVariant: {\n        groupBy: [{\n          dimension: '[Department]',\n          level: '[Department].[Department]'\n        }]\n      }\n    },\n    options: {}\n  }\n}",...DrillDimensions.parameters?.docs?.source}}},ChartTypes.parameters={...ChartTypes.parameters,docs:{...ChartTypes.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'Chart Types',\n    appearance: {},\n    dataSettings: {\n      dataSource: 'Sales',\n      entitySet: 'SalesOrder',\n      chartAnnotation: {\n        chartType: {\n          type: 'Bar'\n        },\n        dimensions: [{\n          dimension: '[Product]'\n        }],\n        measures: [{\n          dimension: C_MEASURES,\n          measure: 'Sales'\n        }]\n      },\n      presentationVariant: {\n        groupBy: [{\n          dimension: '[Department]',\n          level: '[Department].[Department]'\n        }]\n      }\n    },\n    chartSettings: {\n      chartTypes: [{\n        type: 'Line'\n      }]\n    },\n    options: {}\n  }\n}",...ChartTypes.parameters?.docs?.source}}};const __namedExportsOrder=["Primary","Appearance","Loading","HideButtons","Empty","Error","SetOptionError","DrillDimensions","ChartTypes"]},"?d4c0":()=>{}}]);