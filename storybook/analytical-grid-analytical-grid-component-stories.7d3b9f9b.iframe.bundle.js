(self.webpackChunkocap=self.webpackChunkocap||[]).push([[7237],{"./packages/angular/analytical-grid/analytical-grid.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{A1Primary:()=>A1Primary,A2Sticky:()=>A2Sticky,A3StickyGrid:()=>A3StickyGrid,DensityCompact:()=>DensityCompact,DisplayHierarchy:()=>DisplayHierarchy,Error:()=>analytical_grid_component_stories_Error,Loading:()=>Loading,MultipleMeasures:()=>MultipleMeasures,Paging:()=>Paging,PagingCompact:()=>PagingCompact,PagingError:()=>PagingError,ShowToolbar:()=>ShowToolbar,Sortable:()=>Sortable,SwitchTemplate:()=>SwitchTemplate,default:()=>analytical_grid_component_stories});var asyncToGenerator=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),animations=__webpack_require__("./node_modules/@angular/platform-browser/fesm2022/animations.mjs"),missing_tanslation=__webpack_require__("./packages/angular/core/i18n/missing-tanslation.ts"),core_module=__webpack_require__("./packages/angular/core/core.module.ts"),core_service=__webpack_require__("./packages/angular/core/core.service.ts"),types=__webpack_require__("./packages/angular/core/types.ts"),displayDensity=__webpack_require__("./packages/angular/core/directives/displayDensity.ts"),src=__webpack_require__("./packages/core/src/index.ts"),ngx_translate_core=__webpack_require__("./node_modules/@ngx-translate/core/fesm2020/ngx-translate-core.mjs"),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),agent_mock_service=__webpack_require__("./packages/angular/mock/agent-mock.service.ts");var _class,analytical_grid_componentngResource=__webpack_require__("./packages/angular/analytical-grid/analytical-grid.component.scss?ngResource"),analytical_grid_componentngResource_default=__webpack_require__.n(analytical_grid_componentngResource),a11y=__webpack_require__("./node_modules/@angular/cdk/fesm2022/a11y.mjs"),coercion=__webpack_require__("./node_modules/@angular/cdk/fesm2022/coercion.mjs"),tree=__webpack_require__("./node_modules/@angular/cdk/fesm2022/tree.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),rxjs_interop=__webpack_require__("./node_modules/@angular/core/fesm2022/rxjs-interop.mjs"),paginator=__webpack_require__("./node_modules/@angular/material/fesm2022/paginator.mjs"),sort=__webpack_require__("./node_modules/@angular/material/fesm2022/sort.mjs"),fesm2022_tree=__webpack_require__("./node_modules/@angular/material/fesm2022/tree.mjs"),csv=__webpack_require__("./packages/angular/core/services/csv.ts"),ngneat_until_destroy=__webpack_require__("./node_modules/@ngneat/until-destroy/fesm2020/ngneat-until-destroy.mjs"),minBy=__webpack_require__("./node_modules/lodash-es/minBy.js"),maxBy=__webpack_require__("./node_modules/lodash-es/maxBy.js"),orderBy=__webpack_require__("./node_modules/lodash-es/orderBy.js"),BehaviorSubject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js"),combineLatest=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/combineLatest.js"),of=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js"),firstValueFrom=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/firstValueFrom.js"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),combineLatestWith=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/combineLatestWith.js"),shareReplay=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js"),filter=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/filter.js"),withLatestFrom=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/withLatestFrom.js"),debounceTime=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js"),smart_filter_bar_service=__webpack_require__("./packages/angular/core/services/smart-filter-bar.service.ts");let NgmAnalyticsBusinessService=((_class=class NgmAnalyticsBusinessService extends src.St3{constructor(dsCoreService,smartFilterbar){super(dsCoreService,smartFilterbar),this.dsCoreService=dsCoreService}ngOnDestroy(){super.onDestroy()}}).ctorParameters=()=>[{type:core_service.q},{type:smart_filter_bar_service.N,decorators:[{type:core.Optional}]}],_class);NgmAnalyticsBusinessService=(0,tslib_es6.gn)([(0,core.Injectable)(),(0,tslib_es6.w6)("design:paramtypes",[core_service.q,smart_filter_bar_service.N])],NgmAnalyticsBusinessService);var NxChromaticType,ordinal=__webpack_require__("./node_modules/d3-scale/src/ordinal.js"),sequential=__webpack_require__("./node_modules/d3-scale/src/sequential.js"),category10=__webpack_require__("./node_modules/d3-scale-chromatic/src/categorical/category10.js"),Accent=__webpack_require__("./node_modules/d3-scale-chromatic/src/categorical/Accent.js"),Dark2=__webpack_require__("./node_modules/d3-scale-chromatic/src/categorical/Dark2.js"),Paired=__webpack_require__("./node_modules/d3-scale-chromatic/src/categorical/Paired.js"),Pastel1=__webpack_require__("./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js"),Pastel2=__webpack_require__("./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js"),Set1=__webpack_require__("./node_modules/d3-scale-chromatic/src/categorical/Set1.js"),Set2=__webpack_require__("./node_modules/d3-scale-chromatic/src/categorical/Set2.js"),Set3=__webpack_require__("./node_modules/d3-scale-chromatic/src/categorical/Set3.js"),BrBG=__webpack_require__("./node_modules/d3-scale-chromatic/src/diverging/BrBG.js"),PRGn=__webpack_require__("./node_modules/d3-scale-chromatic/src/diverging/PRGn.js"),PiYG=__webpack_require__("./node_modules/d3-scale-chromatic/src/diverging/PiYG.js"),Spectral=__webpack_require__("./node_modules/d3-scale-chromatic/src/diverging/Spectral.js"),RdBu=__webpack_require__("./node_modules/d3-scale-chromatic/src/diverging/RdBu.js"),RdGy=__webpack_require__("./node_modules/d3-scale-chromatic/src/diverging/RdGy.js"),RdYlBu=__webpack_require__("./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js"),RdYlGn=__webpack_require__("./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js"),PuOr=__webpack_require__("./node_modules/d3-scale-chromatic/src/diverging/PuOr.js"),Blues=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js"),Greens=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js"),Greys=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js"),Oranges=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js"),Purples=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js"),Reds=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js"),viridis=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js"),rainbow=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js"),cubehelix=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js"),BuGn=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js"),BuPu=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js"),GnBu=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js"),OrRd=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js"),PuBuGn=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js"),PuBu=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js"),PuRd=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js"),RdPu=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js"),YlGnBu=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js"),YlGn=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js"),YlOrBr=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js"),YlOrRd=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js"),sinebow=__webpack_require__("./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js");!function(NxChromaticType){NxChromaticType.Single="Single",NxChromaticType.Sequential="Sequential",NxChromaticType.Categorical="Categorical"}(NxChromaticType||(NxChromaticType={}));const CHROMATICS=[{provide:1,useValue:{group:"Categorical",name:"Category10",type:NxChromaticType.Categorical,value:category10.Z},multi:!0},{provide:1,useValue:{group:"Categorical",name:"Accent",type:NxChromaticType.Categorical,value:Accent.Z},multi:!0},{provide:1,useValue:{group:"Categorical",name:"Dark2",type:NxChromaticType.Categorical,value:Dark2.Z},multi:!0},{provide:1,useValue:{group:"Categorical",name:"Paired",type:NxChromaticType.Categorical,value:Paired.Z},multi:!0},{provide:1,useValue:{group:"Categorical",name:"Pastel1",type:NxChromaticType.Categorical,value:Pastel1.Z},multi:!0},{provide:1,useValue:{group:"Categorical",name:"Pastel2",type:NxChromaticType.Categorical,value:Pastel2.Z},multi:!0},{provide:1,useValue:{group:"Categorical",name:"Set1",type:NxChromaticType.Categorical,value:Set1.Z},multi:!0},{provide:1,useValue:{group:"Categorical",name:"Set2",type:NxChromaticType.Categorical,value:Set2.Z},multi:!0},{provide:1,useValue:{group:"Categorical",name:"Set3",type:NxChromaticType.Categorical,value:Set3.Z},multi:!0},{provide:1,useValue:{group:"Diverging",name:"BrBG",type:NxChromaticType.Sequential,value:BrBG.Z},multi:!0},{provide:1,useValue:{group:"Diverging",name:"PRGn",type:NxChromaticType.Sequential,value:PRGn.Z},multi:!0},{provide:1,useValue:{group:"Diverging",name:"PiYG",type:NxChromaticType.Sequential,value:PiYG.Z},multi:!0},{provide:1,useValue:{group:"Diverging",name:"Spectral",type:NxChromaticType.Sequential,value:Spectral.Z},multi:!0},{provide:1,useValue:{group:"Diverging",name:"RdBu",type:NxChromaticType.Sequential,value:RdBu.Z},multi:!0},{provide:1,useValue:{group:"Diverging",name:"RdGy",type:NxChromaticType.Sequential,value:RdGy.Z},multi:!0},{provide:1,useValue:{group:"Diverging",name:"RdYlBu",type:NxChromaticType.Sequential,value:RdYlBu.Z},multi:!0},{provide:1,useValue:{group:"Diverging",name:"RdYlGn",type:NxChromaticType.Sequential,value:RdYlGn.Z},multi:!0},{provide:1,useValue:{group:"Diverging",name:"PuOr",type:NxChromaticType.Sequential,value:PuOr.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Single Hue)",name:"Blues",type:NxChromaticType.Sequential,value:Blues.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Single Hue)",name:"Greens",type:NxChromaticType.Sequential,value:Greens.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Single Hue)",name:"Greys",type:NxChromaticType.Sequential,value:Greys.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Single Hue)",name:"Oranges",type:NxChromaticType.Sequential,value:Oranges.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Single Hue)",name:"Purples",type:NxChromaticType.Sequential,value:Purples.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Single Hue)",name:"Reds",type:NxChromaticType.Sequential,value:Reds.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"Viridis",type:NxChromaticType.Sequential,value:viridis.ZP},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"Inferno",type:NxChromaticType.Sequential,value:viridis.yy},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"Magma",type:NxChromaticType.Sequential,value:viridis.uX},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"Plasma",type:NxChromaticType.Sequential,value:viridis.zD},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"Warm",type:NxChromaticType.Sequential,value:rainbow.s7},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"Cool",type:NxChromaticType.Sequential,value:rainbow.H7},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"Cubehelix",type:NxChromaticType.Sequential,value:cubehelix.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"BuGn",type:NxChromaticType.Sequential,value:BuGn.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"BuPu",type:NxChromaticType.Sequential,value:BuPu.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"GnBu",type:NxChromaticType.Sequential,value:GnBu.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"OrRd",type:NxChromaticType.Sequential,value:OrRd.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"PuBuGn",type:NxChromaticType.Sequential,value:PuBuGn.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"PuBu",type:NxChromaticType.Sequential,value:PuBu.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"PuRd",type:NxChromaticType.Sequential,value:PuRd.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"RdPu",type:NxChromaticType.Sequential,value:RdPu.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"YlGnBu",type:NxChromaticType.Sequential,value:YlGnBu.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"YlGn",type:NxChromaticType.Sequential,value:YlGn.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"YlOrBr",type:NxChromaticType.Sequential,value:YlOrBr.Z},multi:!0},{provide:1,useValue:{group:"Sequential (Multi-Hue)",name:"YlOrRd",type:NxChromaticType.Sequential,value:YlOrRd.Z},multi:!0},{provide:1,useValue:{group:"Cyclical",name:"Rainbow",value:rainbow.ZP},multi:!0},{provide:1,useValue:{group:"Cyclical",name:"Sinebow",value:sinebow.Z},multi:!0}];var table=__webpack_require__("./node_modules/@angular/material/fesm2022/table.mjs");class NgmFlatTableDataSource extends table.by{constructor(){super(...arguments),this.sortingDataAccessor=(data,sortHeaderId)=>{const cell=data[sortHeaderId],value="string"==typeof cell?cell:cell?.value;if((0,coercion.t6)(value)){const numberValue=Number(value);return numberValue<9007199254740991?numberValue:value}return value}}}var SemanticStyle,expr_eval_dist=__webpack_require__("./node_modules/expr-eval/dist/index.mjs");function filterArray(data,filters){return Object.keys(filters).reduce(((data,dimension)=>data.filter((item=>filters[dimension].includes(item[dimension])))),data)}function moveLeft(arr,value){const index=arr.findIndex((item=>item===value));if(index>0){const items=arr.splice(index,1);return arr.splice(index-1,0,...items),[...arr]}return arr}function moveRight(arr,value){const index=arr.findIndex((item=>item===value));if(index>-1){const items=arr.splice(index,1);return arr.splice(index+1,0,...items),[...arr]}return arr}!function(SemanticStyle){SemanticStyle["border-left"]="border-left",SemanticStyle["border-right"]="border-right",SemanticStyle["border-top"]="border-top",SemanticStyle["border-bottom"]="border-bottom",SemanticStyle.color="color",SemanticStyle.background="background"}(SemanticStyle||(SemanticStyle={}));var analytical_grid_component_class,Subject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js"),distinctUntilChanged=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js"),switchMap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/switchMap.js"),merge=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/merge.js");class NgmTreeFlatDataSource extends fesm2022_tree.kc{constructor(){super(...arguments),this._paginator=new BehaviorSubject.X(null),this._internalPageChanges=new Subject.x}get paginator(){return this._paginator.value}set paginator(paginator){this._paginator.next(paginator)}connect(collectionViewer){return super.connect(collectionViewer).pipe((0,combineLatestWith.V)(this._paginator.pipe((0,distinctUntilChanged.x)(),(0,switchMap.w)((_paginator=>_paginator?(0,merge.T)(_paginator.page,this._internalPageChanges,_paginator.initialized):(0,of.of)(null))))),(0,map.U)((([data])=>(this.paginator&&this._updatePaginator(data.length),this._pageData(data)))))}_pageData(data){if(!this.paginator)return data;const startIndex=this.paginator.pageIndex*this.paginator.pageSize;return data.slice(startIndex,startIndex+this.paginator.pageSize)}_updatePaginator(filteredDataLength){Promise.resolve().then((()=>{const paginator=this.paginator;if(paginator&&(paginator.length=filteredDataLength,paginator.pageIndex>0)){const lastPageIndex=Math.ceil(paginator.length/paginator.pageSize)-1||0,newPageIndex=Math.min(paginator.pageIndex,lastPageIndex);newPageIndex!==paginator.pageIndex&&(paginator.pageIndex=newPageIndex,this._internalPageChanges.next())}}))}}let AnalyticalGridComponent=((analytical_grid_component_class=class AnalyticalGridComponent{get disabled(){return this._disabled}set disabled(value){this._disabled=(0,coercion.Ig)(value)}get dataSettings(){return this._dataSettings()}set dataSettings(value){this._dataSettings.set(value)}get options(){return this.options$.value}set options(value){this.options$.next((0,src.ezT)(value))}get columns(){return this._columns$.value}set columns(value){this._columns$.next(value??{})}get slicers(){return this._slicers()}set slicers(value){this._slicers.set(value)}set paginator(v){this._paginator.set(v)}get dimensionFilters(){return this._dimensionFilters$.value}set dimensionFilters(filters){this._dimensionFilters$.next(filters)}get dataSource(){return this.rowTreeProperty()?this.rowDataSource:this.flatDataSource}get pivotColumns(){return this._pivotColumns$.value}set pivotColumns(value){this._pivotColumns$.next(value)}constructor(translateService,cdr,_focusMonitor,elementRef){this.translateService=translateService,this.cdr=cdr,this._focusMonitor=_focusMonitor,this.elementRef=elementRef,this.AggregationRole=src.uFO,this.C_MEASURES=src.QPo,this.isNil=src.kKJ,this.analyticsService=(0,core.inject)(NgmAnalyticsBusinessService),this._disabled=!1,this._dataSettings=(0,core.signal)(null,{equal:src.Xyp}),this.options$=new BehaviorSubject.X(null),this._columns$=new BehaviorSubject.X({}),this._slicers=(0,core.signal)([],{equal:src.Xyp}),this.columnSelectionChanging=new core.EventEmitter,this.slicersChanging=new core.EventEmitter,this.explain=new core.EventEmitter,this.entityTypeChange=new core.EventEmitter,this._paginator=(0,core.signal)(null),this.matSortActive="",this.selected={prevI:null,prevColumn:null,i:null,column:null},this.virtualScrollItemSize=48,this.flatDataSource=new NgmFlatTableDataSource([]),this.rowRecursiveHierarchy=null,this.rowTreeProperty=(0,core.signal)(null),this.rowUnfold=!1,this.columnUnfold=!1,this._data$=new BehaviorSubject.X([]),this._dimensionFilters$=new BehaviorSubject.X({}),this.filteredData$=(0,combineLatest.a)([this._data$,this._dimensionFilters$]).pipe((0,map.U)((([data,filters])=>filters?filterArray(data,filters):[...data]))),this.treeNodePadding=16,this.rowAxes=[],this.matHeaders=[],this.matRestHeaders=[],this.columnAxes=[],this.matRowColumns=[],this.pivotColumnRowCount=0,this._pivotColumns$=new BehaviorSubject.X([]),this.cellColumns$=new BehaviorSubject.X([]),this.isLoading$=this.analyticsService.loading$,this.error$=this.analyticsService.selectResult().pipe((0,map.U)((result=>result.error))),this.data$=this.analyticsService.selectResult().pipe((0,map.U)((result=>result.data))),this.rowAxes$=this.analyticsService.analytics$.pipe((0,map.U)((analytics=>analytics.rows?.map((column=>(column.name=column.dimension===src.QPo?(0,src.KbT)(src.QPo):column.property?.name,column.caption=column.caption||column.dimension===src.QPo?src.QPo:column.property?.caption??column.name,column.memberCaption=column.memberCaption||column.dimension===src.QPo?"[Measures]_Text":column.property?(0,src.wSo)(column.property):column.name,column.displayBehaviour=column.displayBehaviour??src.CXV.descriptionOnly,column))).filter((column=>!(0,src.kKJ)(column?.name)))??[])),(0,combineLatestWith.V)(this._columns$),(0,map.U)((([_columns,_columnsOptions])=>_columns.map((column=>this.mergeColumnOptions(column,column.name,_columnsOptions))))),(0,ngneat_until_destroy.t)(this),(0,shareReplay.d)(1)),this.columnAxes$=this.analyticsService.selectResult().pipe((0,filter.h)((({error})=>!error)),(0,withLatestFrom.M)(this.analyticsService.selectEntityType()),(0,map.U)((([{schema},entityType])=>schema.columnAxes?.map((dimension=>{const property=(0,src.kb1)(dimension)?(0,src.ZBB)(entityType,dimension):(0,src.jEU)(entityType,dimension),measureCaption=this.getTranslation("Ngm.Common.Measures",{Default:"Measures"});return{...dimension,caption:(0,src.kb1)(dimension)?measureCaption:property.caption}}))))),this.querySchemaColumns=[],this.querySchemaColumns$=new BehaviorSubject.X([]),this.columnTreeControl=new tree.C2((node=>node.treeLevel),(node=>node.expandable)),this.columnsDataSource=new fesm2022_tree.kc(this.columnTreeControl,new fesm2022_tree.JZ(((node,level)=>({...(0,src.CEd)(node.raw,"label"),expandable:node.raw.childrenCardinality>0,caption:node.caption,treeLevel:level,colspan:node.raw.columns?.length||1})),(node=>node.treeLevel),(node=>node.expandable),(node=>node.children)),[]),this.rowTreeControl=new tree.C2((node=>node.level),(node=>node.expandable)),this.rowDataSource=new NgmTreeFlatDataSource(this.rowTreeControl,new fesm2022_tree.JZ(((node,level)=>({...node.raw??node,expandable:node.children?.length>0,key:node.key,name:node.name,caption:node.caption,level})),(node=>node.level),(node=>node.expandable),(node=>node.children)),[]),this.entityType=(0,core.signal)(null),this.visualMaps={},this.entityTypeSub=this.analyticsService.selectEntityType().pipe((0,rxjs_interop.sL)()).subscribe((entityType=>{this.entityTypeChange.emit(entityType),this.entityType.set(entityType)})),this.refreshSub=this.analyticsService.onAfterServiceInit().pipe((0,rxjs_interop.sL)()).subscribe((()=>{this.refresh()})),this.visualMapSub=this.analyticsService.analytics$.subscribe({next:analytics=>{this.visualMaps=[...analytics.columns??[],...analytics.rows??[]].reduce(((visualMaps,dimension)=>((0,src.kb1)(dimension)&&(dimension.palette?.name||dimension.palette?.colors?.length)&&(dimension.measure?visualMaps[dimension.measure]=dimension:dimension.members&&dimension.members.filter(src.HD0).forEach((measure=>{visualMaps[measure]={...dimension,measure}}))),visualMaps)),{})}}),this.explainSub=(0,combineLatest.a)([this.analyticsService.dataSettings$,this.analyticsService.selectResult()]).pipe((0,rxjs_interop.sL)()).subscribe((([dataSettings,queryReturn])=>{this.explain.emit([dataSettings,queryReturn])})),this.pivotColumnsSub=this.columnsDataSource.connect({viewChange:(0,of.of)()}).pipe((0,rxjs_interop.sL)()).subscribe((columns=>{const levels=[[]];columns.forEach((pivotCol=>{let isCell,pivotcolspan=0;pivotCol.columns?.length?(levels[1]=levels[1]??[],pivotCol.columns.forEach((subCol=>{let colspan=1;subCol.columns?.length?(levels[2]=levels[2]??[],levels[2].push(...subCol.columns.map((item=>({...item,parent:subCol})))),colspan=subCol.columns.length):subCol.isCell=!0,levels[1].push({...subCol,parent:pivotCol,colspan}),pivotcolspan+=colspan}))):(pivotcolspan=1,isCell=!0),pivotCol.colspan=pivotcolspan,pivotCol.isCell=isCell,pivotCol.isCell&&(pivotCol.measure=pivotCol.name),levels[0].push(pivotCol)})),this.pivotColumns=levels})),this.querySchemaColumnsSub=this.querySchemaColumns$.pipe((0,rxjs_interop.sL)()).subscribe((columns=>{const treeDataNodes=columns.length?(0,src.LC)(columns,{valueProperty:"uniqueName",parentNodeProperty:"parentUniqueName",labelProperty:"caption"}):[];this.columnsDataSource.data=treeDataNodes,this.options?.initialColumnLevel>0&&this.columnTreeControl.dataNodes.forEach((node=>{this.columnTreeControl.getLevel(node)<this.options.initialColumnLevel&&this.columnTreeControl.expand(node)}))})),this.schemaColumnsSub=this.analyticsService.selectResult().pipe((0,filter.h)((({error})=>!error)),(0,debounceTime.b)(100),(0,withLatestFrom.M)(this.analyticsService.analytics$.pipe((0,map.U)((({columns})=>columns))),this.analyticsService.selectEntityType()),(0,combineLatestWith.V)(this._columns$),(0,rxjs_interop.sL)()).subscribe((([[result,_columns,entityType],_columnsOptions])=>{Object.keys(this.visualMaps).forEach((name=>{this.visualMaps[name].maxValue=null,this.visualMaps[name].minValue=null}));const cellColumns=[],querySchemaColumns=result.schema?.columns?.map((item=>{const column=this.characteristicValue(this.mergeColumnOptions(item,item.name,_columnsOptions,_columns,entityType),result.data);return column.columns?.length||cellColumns.push(column),{...result.schema.columnAxes[0],...column,columns:item.columns?.map((item=>{const column=this.characteristicValue(this.mergeColumnOptions(item,item.measure,_columnsOptions,_columns,entityType),result.data);return column.columns?.length||cellColumns.push(column),{...result.schema.columnAxes[1],...column,columns:item.columns?.map((item=>{const column=this.characteristicValue(this.mergeColumnOptions(item,item.measure,_columnsOptions,_columns,entityType),result.data);return column.columns?.length||cellColumns.push(column),{...result.schema.columnAxes[2],...column}}))}}))}}));this.cellColumns$.next(cellColumns),this.querySchemaColumns=querySchemaColumns,this.querySchemaColumns$.next(querySchemaColumns?[...querySchemaColumns]:[])})),this._pivotColumnsSub=this._pivotColumns$.pipe((0,withLatestFrom.M)(this.rowAxes$,this.columnAxes$)).subscribe((([levels,rowAxes,columnAxes])=>{this.rowAxes=rowAxes,this.columnAxes=columnAxes;const pivotColumnNames=levels.map((item=>item.map((column=>column.name))));this.pivotColumnRowCount=pivotColumnNames.length;const rowColumns=rowAxes.map((row=>row.name));this.pivotColumnRowCount>1?(this.matHeaders=(0,src.oA$)([...rowColumns,columnAxes[0].dimension,...pivotColumnNames[0]]),this.matRestHeaders=pivotColumnNames.slice(1).map(((columns,index)=>(0,src.oA$)([columnAxes[index+1].dimension,...columns])))):this.matHeaders=(0,src.oA$)([...rowColumns,...pivotColumnNames[0]]),this.matRowColumns=(0,src.oA$)(rowColumns.length?[...rowColumns,...pivotColumnNames[pivotColumnNames.length-1]]:[columnAxes[columnAxes.length-1].dimension,...pivotColumnNames[pivotColumnNames.length-1]]),this.cdr.detectChanges()})),this.filteredTreeDataSub=this.filteredData$.pipe((0,filter.h)((()=>this.rowRecursiveHierarchy)),(0,withLatestFrom.M)(this.rowAxes$),(0,rxjs_interop.sL)()).subscribe({next:([data,rows])=>{const compositeKeys=rows.map((row=>row.name)).filter((key=>key!==this.rowRecursiveHierarchy.valueProperty));this.rowDataSource.data=(0,src.LC)(data,this.rowRecursiveHierarchy,{compositeKeys}),this.options?.initialRowLevel>0&&this.rowTreeControl.dataNodes.forEach((node=>{this.rowTreeControl.getLevel(node)<this.options.initialRowLevel&&this.rowTreeControl.expand(node)})),this.cdr.detectChanges()}}),this.dataSub=this.analyticsService.selectResult().pipe((0,filter.h)((({error})=>!error)),(0,debounceTime.b)(200),(0,withLatestFrom.M)(this.cellColumns$),(0,ngneat_until_destroy.t)(this)).subscribe((([{data,schema},columns])=>{schema?.recursiveHierarchy?(this.rowRecursiveHierarchy=schema.recursiveHierarchy,this.rowTreeProperty.set(schema.rowHierarchy)):(this.rowRecursiveHierarchy=null,this.rowTreeProperty.set(null)),data=data.map((item=>({...item}))),columns.forEach((column=>{data.forEach((row=>{row[column.name]={value:row[column.name],...this.calcCellStyles(column,row),classes:this.calcCellClasses(column,row)}}))})),this._data$.next(data)})),this.filteredFlatDataSub=this.filteredData$.pipe((0,filter.h)((()=>!this.rowRecursiveHierarchy)),(0,rxjs_interop.sL)()).subscribe((data=>{this.flatDataSource.data=data})),this._columnMembers=new Map,this.treeData=(0,rxjs_interop.O4)(this.rowDataSource.connect({viewChange:(0,of.of)({start:0,end:Number.MAX_SAFE_INTEGER})})),this.flatData=(0,rxjs_interop.O4)(this.flatDataSource.connect()),(0,core.effect)((()=>{const slicers=this._slicers();if(this.dataSettings){const dataSettings={...this.dataSettings,selectionVariant:{...this.dataSettings.selectionVariant??{},selectOptions:[...this.dataSettings.selectionVariant?.selectOptions??[]]}};slicers&&dataSettings.selectionVariant.selectOptions.push(...slicers),this.analyticsService.dataSettings=dataSettings}}),{allowSignalWrites:!0}),(0,core.effect)((()=>{this._paginator()?this.rowTreeProperty()?(this.flatDataSource.paginator=null,this.rowDataSource.paginator=this._paginator()):(this.flatDataSource.paginator=this._paginator(),this.rowDataSource.paginator=null):(this.flatDataSource.paginator=null,this.rowDataSource.paginator=null)}),{allowSignalWrites:!0})}focus(origin,options){origin?this._focusMonitor.focusVia(this._getHostElement(),origin,options):this._getHostElement().focus(options)}_getHostElement(){return this.elementRef.nativeElement}ngOnChanges({appearance}){appearance&&(this.appearance?.displayDensity===displayDensity.A.compact?this.virtualScrollItemSize=30:this.appearance?.displayDensity===displayDensity.A.cosy?this.virtualScrollItemSize=36:this.virtualScrollItemSize=48)}ngAfterViewInit(){this.flatDataSource.sort=this.sort,this._focusMonitor.monitor(this.elementRef,!0)}refresh(force){this.analyticsService.refresh(force)}mergeColumnOptions(column,columnName,_columnsOptions,_columns,entityType){const property=(0,src.ZBB)(entityType,columnName);if((0,src.mKs)(property)){const formatting=property.formatting??{};column={...column,formatting:(0,src.kg4)(formatting,column.formatting)}}const originColumn=_columns?.filter(src.kb1).find((item=>item.measure===columnName));originColumn&&(0,src.JHz)(column,originColumn);const options=_columnsOptions?.[column.name];if(options&&((0,src.JHz)(column,options),options.semantic)){(Array.isArray(options.semantic)?options.semantic:[options.semantic]).forEach((_semantic=>{column.cellClasses=(0,src.f0i)(column.cellClasses,function resolveSemanticClasses(semantic,columnName){const classes={},parser=new expr_eval_dist._b,styles=semantic.style||"";return Object.keys(semantic.expression).forEach((key=>{const expression=semantic.expression[key].replace(/\{Value\}/g,"__x__"),expr=parser.parse(expression);styles.split(" ").forEach((style=>{classes[style?`ngm-semantic--${key}--${style}`:`ngm-semantic--${key}`]=(rowData,columnKey)=>expr.evaluate({...rowData,__x__:rowData[columnKey]})}))})),classes}(_semantic,column.name))}))}return!column.formatting?.digitsInfo&&(0,src.hj$)(column.formatting?.decimal)&&(column.formatting={...column.formatting,digitsInfo:`0.${column.formatting.decimal}-${column.formatting.decimal}`}),column}characteristicValue(column,data){return!column.columns?.length&&column.measure&&(column.bar||this.visualMaps[column.measure])&&(column.minValue=(0,minBy.Z)(data,column.name)?.[column.name],column.maxValue=(0,maxBy.Z)(data,column.name)?.[column.name],this.visualMaps[column.measure]&&(!(0,src.kKJ)(column.minValue)&&((0,src.kKJ)(this.visualMaps[column.measure].minValue)||column.minValue<this.visualMaps[column.measure].minValue)&&(this.visualMaps[column.measure].minValue=column.minValue),!(0,src.kKJ)(column.maxValue)&&((0,src.kKJ)(this.visualMaps[column.measure].maxValue)||column.maxValue>this.visualMaps[column.measure].maxValue)&&(this.visualMaps[column.measure].maxValue=column.maxValue))),column}isRowSelected(row,i){return this.selected.i===i&&this.selected.rowMembers&&!Object.keys(this.selected.rowMembers).some((name=>this.selected.rowMembers[name]!==row[name]))}isRowCell(element,column,j){return(0,src.kb1)(this.selected.column)?this.selected.rowMembers?.[column.name]===element[column.name]:this.selected.column?.name===column.name}selectRow(i,row){const rowMembers=this.rowAxes.reduce(((acc,column)=>(acc[column.name]=row[column.name],acc)),{});if(this.selected.i===i&&(0,src.Xyp)(rowMembers,this.selected.rowMembers)&&this.selected.prevColumn===this.selected.column.name)this.selected.i=null,this.selected.rowMembers=null,this.selected.column=null,this.selected.columnMembers=null,this.unlinkAnalysis();else{this.selected.prevI=this.selected.i,this.selected.i=i,this.selected.rowMembers=rowMembers;let slicers=[];if((0,src.kb1)(this.selected.column))slicers=[...this.rowAxes.map((column=>({dimension:{dimension:column.dimension,hierarchy:column.hierarchy},members:[{key:row[(0,src.Ex7)(column)],caption:row[column.memberCaption||(0,src.wSo)(column.property)],value:row[(0,src.Ex7)(column)]}]}))),...Object.values(this.selected.columnMembers).filter((0,src.tkI)(src.kb1)).map((column=>({dimension:{dimension:column.dimension,hierarchy:column.hierarchy},members:[column.member]})))];else{const column=this.selected.column;slicers=[{dimension:{dimension:column.dimension,hierarchy:column.hierarchy},members:[{key:row[(0,src.Ex7)(column)],caption:row[column.memberCaption||(0,src.wSo)(column.property)],value:row[(0,src.Ex7)(column)]}]}]}this.onLinkAnalysis(slicers)}}selectCell(column){for(this.selected.prevColumn=this.selected.column?.name,this.selected.column=column,this.selected.columnMembers={};column;)this.selected.columnMembers[column.name]=column,column=column.parent}onClickColumnHeader(event,column){this.options?.selectable&&(event.stopPropagation(),event.preventDefault(),this.selected.column?.name===column.name?(this.selected.column=null,this.columnSelectionChanging.emit({owner:this,newSelection:[]})):(this.selected.column=column,this.columnSelectionChanging.emit({owner:this,newSelection:[this.selected.column]})))}toggleColumnTree(column){const member=this.columnTreeControl.dataNodes.find((item=>item.name===column.name));this.columnTreeControl.toggle(member)}toggleRowUnfold(event){event.stopPropagation(),this.rowUnfold=!this.rowUnfold,this.rowUnfold?this.rowTreeControl.expandAll():this.rowTreeControl.collapseAll()}toggleColumnUnfold(event){event.stopPropagation(),this.columnUnfold=!this.columnUnfold,this.columnUnfold?this.columnTreeControl.expandAll():this.columnTreeControl.collapseAll()}toggleRowTree(event,row){event.preventDefault(),event.stopPropagation(),this.rowTreeControl.toggle(row)}onFilterSelectAll(event,column,members){event.checked?column._selections=members.map((({value})=>value)):column._selections=[]}allFiltering(column,members){return column._selections?.length===members?.length}someFiltering(column,members){return!!(column._selections?.length&&column._selections.length<members?.length)}onFilterApply(column,members){this.allFiltering(column,members)?column.selections=[]:column.selections=[...column._selections],column.selections.length?this.dimensionFilters={...this.dimensionFilters,[column.name]:column.selections}:this.dimensionFilters=(0,src.CEd)(this.dimensionFilters,column.name),this.cdr.detectChanges()}moveLeft(name){this.matHeaders=moveLeft(this.matHeaders,name),this.matRowColumns=moveLeft(this.matRowColumns,name)}moveRight(name){this.matHeaders=moveRight(this.matHeaders,name),this.matRowColumns=moveRight(this.matRowColumns,name)}onColumnMemberSearch(column,text){this._columnMembers.get(column.name).search.next(text)}calcCellClasses(column,row){return Object.entries(column.cellClasses??{}).reduce(((cellClasses,[name,fun])=>{try{cellClasses[name]="string"==typeof fun?fun:fun(row,column.name)}catch(err){}return cellClasses}),{})}calcCellStyles(column,row){const styles={cellStyles:{},barStyles:{}},visualStyles=this.calcHeatmapColor(column,row);return column.bar?(styles.barStyles={...visualStyles},styles.cellStyles={color:visualStyles.color,textAlign:"left"},(0,src.hj$)(row[column.name])&&(row[column.name]>0?column.minValue>0?styles.barStyles.width=(row[column.name]-column.minValue)/(column.maxValue-column.minValue)*100+"%":(styles.barStyles.width=(row[column.name]-0)/(column.maxValue-column.minValue)*100+"%",styles.barStyles.left=(0-column.minValue)/(column.maxValue-column.minValue)*100+"%"):(styles.barStyles.width=(0-row[column.name])/(column.maxValue-column.minValue)*100+"%",styles.barStyles.left=(row[column.name]-column.minValue)/(column.maxValue-column.minValue)*100+"%",styles.barClasses="bar-negative"))):styles.cellStyles={...visualStyles},styles}calcHeatmapColor(column,row){const styles={},visualMap=this.visualMaps[column.measure];if(!(0,src.kKJ)(visualMap)&&(0,src.hj$)(row[column.name])){let backgroundColor=null;if(visualMap.palette.colors?.length){const size=visualMap.palette.colors.length,index=Math.ceil((row[column.name]-visualMap.minValue)/(visualMap.maxValue-visualMap.minValue)*size);backgroundColor=visualMap.palette.colors[0===index?index:index-1]}else{backgroundColor=function getChromaticScale(name,domain,reverse){const colorScheme=CHROMATICS?.find((item=>item.useValue.name===name))?.useValue;if(!colorScheme)throw new Error(`Can't find colorScheme for name '${name}'`);let scaleFun=null;return scaleFun=colorScheme.type===NxChromaticType.Categorical?reverse?(0,ordinal.Z)(Array.from(colorScheme.value).reverse()):(0,ordinal.Z)(colorScheme.value):(0,sequential.ZP)(reverse?t=>colorScheme.value(1-t):colorScheme.value),domain?.length?scaleFun.domain(domain):scaleFun}(visualMap.palette.name,[0,100],visualMap.palette.reverse)(Math.ceil((row[column.name]-visualMap.minValue)/(visualMap.maxValue-visualMap.minValue)*100))}styles["background-color"]=backgroundColor,styles.color=function getContrastYIQ(hexcolor){return hexcolor?(hexcolor.startsWith("rgb(")&&(hexcolor=function rgb2hex(c){return"#"+c.match(/\d+/g).map((x=>(+x).toString(16).padStart(2,"0"))).join("")}(hexcolor)),(299*parseInt(hexcolor.slice(1,3),16)+587*parseInt(hexcolor.slice(3,5),16)+114*parseInt(hexcolor.slice(5,7),16))/1e3>=128?"black":"white"):null}(backgroundColor)}return styles}calcBar(column,row){const styles={};if(column.bar&&(0,src.hj$)(row[column.name])){const percent=Math.ceil((row[column.name]-column.minValue)/(column.maxValue-column.minValue)*100);styles.width=percent+"%"}return styles}toggleColumnOrder(index){const columnLevel=this.columnAxes[index];columnLevel.sortDirection=columnLevel.sortDirection?"asc"===columnLevel.sortDirection?"desc":null:"asc";let querySchemaColumns=this.columnAxes[0].sortDirection?(0,orderBy.Z)(this.querySchemaColumns,"name",this.columnAxes[0].sortDirection):[...this.querySchemaColumns];this.columnAxes[1].sortDirection&&(querySchemaColumns=querySchemaColumns.map((item=>({...item,columns:(0,orderBy.Z)(item.columns,"name",this.columnAxes[1].sortDirection)})))),this.querySchemaColumns$.next(querySchemaColumns)}subscribeColumnMembers(column){if(!this._columnMembers.get(column.name)){const search=new BehaviorSubject.X(null),members=this._data$.pipe((0,combineLatestWith.V)(this._dimensionFilters$.pipe((0,map.U)((filters=>(0,src.CEd)(filters,column.name))))),(0,map.U)((([data,filters])=>(0,src.mNm)(filterArray(data,filters),column.name).map((item=>({value:item[column.name],label:item[column.name]?item[column.memberCaption]:"(Blanks)"}))))),(0,shareReplay.d)(1));this._columnMembers.set(column.name,{members,filteredMembers:members.pipe((0,combineLatestWith.V)(search),(0,map.U)((([members,text])=>(text=text?.trim().toLowerCase(),text?members.filter((({value,label})=>label.toLowerCase().includes(text.toLowerCase()))):members))),(0,shareReplay.d)(1)),search})}return this._columnMembers.get(column.name).members}subscribeColumnFilteredMembers(column){return this._columnMembers.get(column.name).filteredMembers}downloadData(){var _this=this;return(0,asyncToGenerator.Z)((function*(){const result=yield(0,firstValueFrom.z)(_this.analyticsService.selectResult());(0,csv.O)(result.data,(_this.title||"data")+".csv",",")}))()}copy(selected){const treeData=this.treeData(),flatData=this.flatData();try{let text=null;(0,src.kKJ)(selected.i)||(0,src.kKJ)(selected.j)?selected.column&&(text=(treeData.length?treeData:flatData).map((row=>row[selected.column].value)).join("\r\n")):text=`${(treeData.length?treeData:flatData)[selected.i][selected.j].value}`,text&&navigator.clipboard.writeText(text).catch((()=>{console.error("Unable to copy cell")}))}catch(err){}}onLinkAnalysis(slicers){this.slicersChanging.emit(slicers)}unlinkAnalysis(){this.onLinkAnalysis([])}getTranslation(keyWord,params){let result="";return this.translateService.get(keyWord,params).subscribe((text=>{result=text})),result}get _isStriped(){return this.options?.strip}get _withToolbar(){return this.options?.showToolbar}keyUpEvent(event){event.ctrlKey&&"c"===event.key&&this.copy(this.selected)}ngOnDestroy(){this._focusMonitor.stopMonitoring(this.elementRef)}}).ctorParameters=()=>[{type:ngx_translate_core.sK},{type:core.ChangeDetectorRef},{type:a11y.tE},{type:core.ElementRef}],analytical_grid_component_class.propDecorators={title:[{type:core.Input}],dataSettings:[{type:core.Input}],options:[{type:core.Input}],appearance:[{type:core.Input}],styling:[{type:core.Input}],columns:[{type:core.Input}],slicers:[{type:core.Input}],columnSelectionChanging:[{type:core.Output}],slicersChanging:[{type:core.Output}],explain:[{type:core.Output}],entityTypeChange:[{type:core.Output}],paginator:[{type:core.ViewChild,args:[paginator.NW]}],sort:[{type:core.ViewChild,args:[sort.YE]}],_isStriped:[{type:core.HostBinding,args:["class.striped"]}],_withToolbar:[{type:core.HostBinding,args:["class.ngm-with-toolbar"]}],keyUpEvent:[{type:core.HostListener,args:["document:keyup",["$event"]]}]},analytical_grid_component_class);AnalyticalGridComponent=(0,tslib_es6.gn)([(0,ngneat_until_destroy.c)({checkProperties:!0}),(0,core.Component)({changeDetection:core.ChangeDetectionStrategy.OnPush,selector:"ngm-analytical-grid",template:'<div *ngIf="options?.showToolbar" class="ngm-card-header flex justify-between items-center" [ngStyle]="styling?.bar">\n  <div>{{ title }}</div>\n\n  <div style="flex: 1; display: flex; place-content: center flex-end; align-items: center;">\n    <ng-content></ng-content>\n  </div>\n\n  <div class="actions flex justify-around items-center">\n\n    <ng-content select="[ngmAction]"></ng-content>\n\n    \x3c!-- data download --\x3e\n    <button mat-icon-button *ngIf="!options?.hideDataDownload" displayDensity="cosy"\n      [matTooltip]=" \'Ngm.AnalyticalGrid.DataDownload\' | translate: {Default: \'Data Download\'} "\n      (click)="downloadData()">\n      <mat-icon fontSet="material-icons-outlined">file_download</mat-icon>\n    </button>\n\n    \x3c!-- Refresh & Loading icon --\x3e\n    <button mat-icon-button class="ngm-analytical-grid__refresh" displayDensity="cosy"\n      [style.opacity]="(isLoading$ | async) ? \'0\' : \'1\'"\n      [style.visibility]="(isLoading$ | async) ? \'hidden\' : \'visible\'"\n      (click)="refresh()">\n      <mat-icon fontSet="material-icons-outlined">refresh</mat-icon>\n    </button>\n    \n    <mat-spinner *ngIf="isLoading$ | async" displayDensity="cosy"\n      [diameter]="20"\n      [strokeWidth]="1"\n    >\n    </mat-spinner>\n  </div>\n</div>\n\n<div class="ngm-card-content">\n  <div *ngIf="error$ | async as error; else content" class="ngm-card-error">\n    <span class="text-2xl font-notoColorEmoji">🐞</span>\n    <span>{{error}}</span>\n  </div>\n\n  <ng-template #content>\n  <table mat-table [class.ngm-table-grid]="options?.grid" [displayDensity]="appearance?.displayDensity"\n    [dataSource]="dataSource"\n    matSort [matSortDisabled]="!options?.sortable"\n    [matSortActive]="matSortActive"\n    [matSortDirection]="matSortDirection"\n    >\n    \x3c!-- rows --\x3e\n    <ng-container *ngFor="let column of rowAxes; let j = index; last as last">\n      <ng-container [matColumnDef]="column.name" [sticky]="column.sticky">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header [attr.rowspan]="pivotColumnRowCount"\n          class="ngm-analytical-grid__dimension"\n          [class.ngm-analytical-grid__measure]="column.property?.role === AggregationRole.measure"\n        >\n          <button *ngIf="column.name === rowTreeProperty()" mat-icon-button [displayDensity]="appearance?.displayDensity"\n            (click)="toggleRowUnfold($event)">\n            <mat-icon *ngIf="!rowUnfold">unfold_more</mat-icon>\n            <mat-icon *ngIf="rowUnfold">unfold_less</mat-icon>\n          </button>\n  \n          {{column.caption || column.name}}\n  \n          <button mat-icon-button displayDensity="compact" [color]="column.selections?.length ? \'accent\' : \'\'"\n            cdkOverlayOrigin #trigger="cdkOverlayOrigin"\n            (click)="$event.stopPropagation();$event.preventDefault();column.isFilterOpen=!column.isFilterOpen">\n            <mat-icon [color]="column.selections?.length ? \'accent\' : \'\'">more_vert</mat-icon>\n          </button>\n          <ng-template\n            cdkConnectedOverlay cdkConnectedOverlayHasBackdrop\n            [cdkConnectedOverlayOrigin]="trigger"\n            [cdkConnectedOverlayOpen]="column.isFilterOpen"\n            (backdropClick)="column.isFilterOpen=false"\n          >\n            <mat-card *ngIf="subscribeColumnMembers(column) | async as members" class="ngm-analytical-grid__filtering-card"\n              [displayDensity]="appearance?.displayDensity" >\n              <mat-card-title class="text-lg p-2">\n                <ngm-display-behaviour [option]="{value: column.name, label: column.caption}"></ngm-display-behaviour>\n              </mat-card-title>\n              <div class="flex flex-col justify-start items-stretch gap-1 px-2">\n                <div>{{\'Ngm.AnalyticalGrid.SORT\' | translate: {Default: \'SORT\'} }}</div>\n                <div class="flex justify-between items-center">\n                  <button mat-button displayDensity="cosy" [color]="matSortActive===column.name && matSortDirection===\'asc\' ? \'accent\' : \'\'"\n                    (click)="matSortActive===column.name && matSortDirection===\'asc\' ? ((matSortActive=null)&&matSortDirection=null) : ((matSortActive=column.name)&&matSortDirection=\'asc\')">\n                    <mat-icon>arrow_upward</mat-icon>\n                    {{ \'Ngm.AnalyticalGrid.ASCENDING\' | translate: {Default: \'ASCENDING\'} }}\n                  </button>\n                  <button mat-button displayDensity="cosy" [color]="matSortActive===column.name && matSortDirection===\'desc\' ? \'accent\' : \'\'"\n                    (click)="matSortActive===column.name && matSortDirection===\'desc\' ? ((matSortActive=null)&&matSortDirection=null) : ((matSortActive=column.name)&&matSortDirection=\'desc\')"\n                    ><mat-icon>arrow_downward</mat-icon>\n                    {{ \'Ngm.AnalyticalGrid.DESCENDGING\' | translate: {Default: \'DESCENDGING\'} }}\n                  </button>\n                </div>\n                <div>{{\'Ngm.AnalyticalGrid.MOVE\' | translate: {Default: \'MOVE\'} }}</div>\n                <div class="flex justify-between items-center">\n                  <button mat-button displayDensity="cosy" (click)="moveLeft(column.name)"><mat-icon>arrow_back</mat-icon>\n                    {{ \'Ngm.AnalyticalGrid.MOVELEFT\' | translate: {Default: \'MOVE LEFT\'} }}\n                  </button>\n                  <button mat-button displayDensity="cosy" (click)="moveRight(column.name)">{{ \'Ngm.AnalyticalGrid.MOVERIGHT\' | translate: {Default: \'MOVE RIGHT\'} }}<mat-icon>arrow_forward</mat-icon></button>\n                </div>\n\n                <button mat-button class="w-full" displayDensity="cosy" [color]="column.sticky?\'accent\':\'\'" (click)="column.sticky=!column.sticky">\n                  <mat-icon>push_pin</mat-icon>{{ \'Ngm.AnalyticalGrid.Pin\' | translate: {Default: \'Pin\'} }}\n                </button>\n  \n                <ngm-search class="shrink-0" [(ngModel)]="column.search" (ngModelChange)="onColumnMemberSearch(column, $event)"></ngm-search>\n              </div>\n              <div class="ngm-analytical-grid__filtering">\n                <mat-divider ngmAppearance="dashed"></mat-divider>\n                \n                <cdk-virtual-scroll-viewport [itemSize]="virtualScrollItemSize" minBufferPx="200" maxBufferPx="400" class="ngm-analytical-grid__viewport">\n                  <mat-selection-list *ngIf="subscribeColumnFilteredMembers(column) | async as members" [displayDensity]="appearance?.displayDensity"\n                    [(ngModel)]="column._selections">\n                    <div matSubheader class="ngm-selection-list__select-all flex">\n                      <mat-checkbox class="flex-1" labelPosition="before"\n                        [checked]="allFiltering(column, members)"\n                        [indeterminate]="someFiltering(column, members)"\n                        (change)="onFilterSelectAll($event, column, members)"\n                      >{{ \'Ngm.AnalyticalGrid.SelectAll\' | translate: {Default: \'Select All\'} }}</mat-checkbox>\n                    </div>\n                    <mat-list-option *cdkVirtualFor="let member of members" class="rounded-lg"\n                      [value]="member.value"\n                      >\n                      <ngm-display-behaviour class="flex-1"\n                        [option]="member"\n                        [displayBehaviour]="column.displayBehaviour">\n                      </ngm-display-behaviour>\n                    </mat-list-option>\n                  </mat-selection-list>\n                </cdk-virtual-scroll-viewport>\n              </div>\n              <mat-divider ngmAppearance="dashed"></mat-divider>\n              <div class="ngm-analytical-grid__filtering-actions pt-2">\n                <div ngmButtonGroup displayDensity="cosy">\n                  <button mat-flat-button displayDensity="cosy"\n                    (click)="column.isFilterOpen=false;column._selections=column.selections">\n                    {{ \'Ngm.Common.Cancel\' | translate: {Default: \'Cancel\'} }}\n                  </button>\n                  <button mat-raised-button color="accent" displayDensity="cosy" [disabled]="!column._selections?.length"\n                    (click)="column.isFilterOpen=false;onFilterApply(column, members)">\n                    {{ \'Ngm.Common.Apply\' | translate: {Default: \'Apply\'} }}\n                  </button>\n                </div>\n              </div>\n            </mat-card>\n          </ng-template>\n        </th>\n        \n        <td mat-cell *matCellDef="let element;" [attr.colspan]="last && pivotColumnRowCount > 1 ? 2 : 1"\n          class="ngm-analytical-grid__dimension"\n          [class.ngm-analytical-grid__measure]="column.property?.role === AggregationRole.measure"\n          [class.selected-member]="isRowCell(element, column, j)"\n          [class.selected]="column.name === selected.column?.name"\n          (click)="selectCell(column)"\n        >\n          <div class="flex justify-start items-center">\n            <ng-container *ngIf="column.name === rowTreeProperty()">\n              <button mat-icon-button [displayDensity]="appearance?.displayDensity"\n                  [style.visibility]="!element.expandable ? \'hidden\' : \'\'"\n                  [style.marginLeft.px]="element.level * treeNodePadding"\n                  (click)="toggleRowTree($event, element)"\n                  >\n                  <mat-icon class="mat-icon-rtl-mirror">\n                    {{rowTreeControl.isExpanded(element) ? \'expand_more\' : \'chevron_right\'}}\n                  </mat-icon>\n              </button>\n            </ng-container>\n      \n            <ngm-display-behaviour *ngIf="column.property?.role !== AggregationRole.measure" class="flex-1"\n              [option]="{key: element[column.name], value: element[column.name], caption: element[column.memberCaption]}"\n              [displayBehaviour]="column.displayBehaviour">\n            </ngm-display-behaviour>\n          </div>\n        </td>\n      </ng-container>\n    </ng-container>\n    \n    <ng-container *ngIf="pivotColumnRowCount > 1">\n      <ng-container *ngFor="let columnAxis of columnAxes; let i = index" [matColumnDef]="columnAxis.dimension">\n        <th *matHeaderCellDef mat-header-cell>\n          <button *ngIf="columnAxis.displayHierarchy" mat-icon-button [displayDensity]="appearance?.displayDensity"\n            (click)="toggleColumnUnfold($event)">\n            <mat-icon *ngIf="!columnUnfold">unfold_more</mat-icon>\n            <mat-icon *ngIf="columnUnfold">unfold_less</mat-icon>\n          </button>\n          {{columnAxis.caption || columnAxis.dimension}}\n          \n          <ng-container *ngIf="options?.sortable && columnAxis.dimension !== C_MEASURES">\n            <button mat-icon-button *ngIf="columnAxis.sortDirection" displayDensity="compact"\n              (click)="toggleColumnOrder(i)">\n              <mat-icon *ngIf="columnAxis.sortDirection===\'asc\'">arrow_left</mat-icon>\n              <mat-icon *ngIf="columnAxis.sortDirection===\'desc\'">arrow_right</mat-icon>\n            </button>\n            <button mat-icon-button *ngIf="!columnAxis.sortDirection" displayDensity="compact" class="ngm-analytical-grid__want-order"\n              (click)="toggleColumnOrder(i)">\n              <mat-icon>arrow_left</mat-icon>\n            </button>\n          </ng-container>\n        </th>\n\n        <td mat-cell *matCellDef="let element;">\n        </td>\n      </ng-container>\n    </ng-container>\n\n    \x3c!-- columns --\x3e\n    <ng-container *ngFor="let columns of pivotColumns; let i = index; last as last">\n      <ng-container [matColumnDef]="column.name" *ngFor="let column of columns; let j = index;">\n        <th mat-header-cell *matHeaderCellDef \n          [attr.colspan]="column.colspan"\n          [class.ngm-analytical-grid__measure]="last"\n          [class.selected-member]="selected.columnMembers?.[column.name]"\n          [class.selected]="selected.column?.name === column.name"\n          (click)="onClickColumnHeader($event, column)"\n          >\n          <div class="flex justify-start items-center" [style.marginTop.px]="column.treeLevel * treeNodePadding">\n            <button mat-icon-button *ngIf="column.expandable" [displayDensity]="appearance?.displayDensity"\n              [style.visibility]="!column.expandable ? \'hidden\' : \'\'"\n              (click)="toggleColumnTree(column)"\n              >\n              <mat-icon class="mat-icon-rtl-mirror">\n                {{columnTreeControl.isExpanded(column) ? \'expand_more\' : \'chevron_right\'}}\n              </mat-icon>\n            </button>\n\n            <div class="pivot-column-header-content">\n              {{column.caption || column.name}}\n            </div>\n\n            <div *ngIf="last" mat-sort-header [disabled]="!options?.sortable"></div>\n          </div>\n        </th>\n\n        <ng-container *ngIf="last">\n          <td mat-cell *matCellDef="let element;" class="ngm-analytical-grid__measure"\n            [class.selected-cell]="selected.column?.name === column.name"\n            [class.ngm-analytical-grid__cell-empty]="isNil(element[column.name]?.value)"\n            [ngStyle]="element[column.name]?.cellStyles"\n            [ngClass]="element[column.name]?.classes"\n            (mousedown)="selectCell(column)">\n            <div *ngIf="column.bar" [ngStyle]="element[column.name]?.barStyles"\n              [ngClass]="element[column.name]?.barClasses"\n              class="ngm-analytical-grid__cell-bar"\n            ></div>\n            <span *ngIf="element[column.name]?.value === null || element[column.name]?.value === undefined; else cell" class="cell-value">-</span>\n            <ng-template #cell>\n              <span *ngIf="column.formatting?.currencyCode || options?.currencyCode; else plain" class="cell-value">\n                {{element[column.name]?.value | currency: column.formatting?.currencyCode || options?.currencyCode:\'symbol\':column.formatting?.digitsInfo || options?.digitsInfo}}\n              </span>\n            </ng-template>\n\n            <ng-template #plain>\n              <span class="cell-value">\n                <span *ngIf="(column.formatting?.unit ?? options?.unit) === \'%\'; else digits" class="ngm-analytical-grid__measure-value">\n                  {{element[column.name].value * 100 | number: column.formatting?.digitsInfo || options?.digitsInfo ?? \'0.0-2\'}}\n                </span>\n                \n                <span *ngIf="column.formatting?.unit || options?.unit" class="ngm-analytical-grid__measure-unit">\n                  {{column.formatting?.unit || options?.unit}}\n                </span>\n              </span>\n            </ng-template>\n\n            <ng-template #digits>\n              <span class="ngm-analytical-grid__measure-value">\n                {{element[column.name]?.value | number: column.formatting?.digitsInfo || options?.digitsInfo || \'0.0-2\'}}\n              </span>\n            </ng-template>\n          </td>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n    \n    \x3c!-- 单独设置一行抬头是因为全部放在下面循环里创建的话没有被识别出来, 还未找到原因 --\x3e\n    <tr mat-header-row *matHeaderRowDef="matHeaders; sticky:options?.sticky" [ngStyle]="styling?.bar"></tr>\n    <tr mat-header-row *matHeaderRowDef="matRestHeaders[0]; sticky:options?.sticky" [class.empty]="!matRestHeaders[0]" [ngStyle]="styling?.bar"></tr>\n    <tr mat-header-row *matHeaderRowDef="matRestHeaders[1]; sticky:options?.sticky;" [class.empty]="!matRestHeaders[1]" [ngStyle]="styling?.bar"></tr>\n\n    \x3c!-- 循环里的 mat-header-row 当变化时没有被识别出来, 所以固定写死几行 header row 用 empty class 的方式将空行其隐藏 --\x3e\n    \x3c!-- <ng-container *ngFor="let columns of displayedColumns;">\n      <tr mat-header-row *matHeaderRowDef="columns; sticky:options?.sticky"></tr>\n    </ng-container> --\x3e\n\n    <tr mat-row *matRowDef="let row; columns: matRowColumns; let i = index"\n      [class.selected]="isRowSelected(row, i)"\n      (click)="selectRow(i, row)"\n      >\n    </tr>\n  </table>\n  </ng-template>\n</div>\n\n<mat-paginator *ngIf="options?.paging" [displayDensity]="appearance?.displayDensity"\n  [pageSize]="options?.pageSize" [pageSizeOptions]="[20, 50, 100]" showFirstLastButtons></mat-paginator>\n\n<div *ngIf="isLoading$ | async" class="absolute top-0 left-0 w-full h-full flex justify-center items-center">\n  <mat-spinner strokeWidth="2" diameter="30"></mat-spinner>\n</div>\n',host:{"[attr.tabindex]":"disabled ? -1 : 0","[attr.disabled]":"disabled || null","[attr.aria-disabled]":"disabled.toString()",class:"ngm-analytical-grid mat-focus-indicator"},providers:[NgmAnalyticsBusinessService,{provide:paginator.Zf,useValue:{formFieldAppearance:"outline"}}],styles:[analytical_grid_componentngResource_default()]}),(0,tslib_es6.w6)("design:paramtypes",[ngx_translate_core.sK,core.ChangeDetectorRef,a11y.tE,core.ElementRef])],AnalyticalGridComponent);var overlay=__webpack_require__("./node_modules/@angular/cdk/fesm2022/overlay.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),fesm2022_button=__webpack_require__("./node_modules/@angular/material/fesm2022/button.mjs"),card=__webpack_require__("./node_modules/@angular/material/fesm2022/card.mjs"),fesm2022_checkbox=__webpack_require__("./node_modules/@angular/material/fesm2022/checkbox.mjs"),divider=__webpack_require__("./node_modules/@angular/material/fesm2022/divider.mjs"),form_field=__webpack_require__("./node_modules/@angular/material/fesm2022/form-field.mjs"),icon=__webpack_require__("./node_modules/@angular/material/fesm2022/icon.mjs"),input=__webpack_require__("./node_modules/@angular/material/fesm2022/input.mjs"),list=__webpack_require__("./node_modules/@angular/material/fesm2022/list.mjs"),menu=__webpack_require__("./node_modules/@angular/material/fesm2022/menu.mjs"),progress_spinner=__webpack_require__("./node_modules/@angular/material/fesm2022/progress-spinner.mjs"),tooltip=__webpack_require__("./node_modules/@angular/material/fesm2022/tooltip.mjs"),common_module=__webpack_require__("./packages/angular/common/common.module.ts");let AnalyticalGridModule=class AnalyticalGridModule{};AnalyticalGridModule=(0,tslib_es6.gn)([(0,core.NgModule)({imports:[common.CommonModule,fesm2022_forms.u5,a11y.rt,table.p0,paginator.TU,fesm2022_button.ot,icon.Ps,menu.Tx,progress_spinner.Cq,divider.t,tooltip.AV,sort.JX,overlay.U8,card.QW,list.ie,form_field.lN,input.c,fesm2022_checkbox.p9,ngx_translate_core.aw,core_module.A,common_module.N],exports:[AnalyticalGridComponent],declarations:[AnalyticalGridComponent],providers:[]})],AnalyticalGridModule);var loader_spec=__webpack_require__("./packages/angular/core/i18n/loader.spec.ts");let GridsComponent=class GridsComponent{constructor(){this.a={dataSettings:{dataSource:"Sales",entitySet:"SalesOrder",analytics:{rows:[{dimension:"[Product]"}],columns:[{dimension:src.QPo,measure:"Sales"}]}}},this.b={dataSettings:{dataSource:"Sales",entitySet:"SalesOrder",analytics:{rows:[{dimension:"[Department]"}],columns:[{dimension:src.QPo,measure:"Sales"}]}}},this.grid=this.a}switch(){this.grid===this.a?this.grid=this.b:this.grid=this.a}};GridsComponent=(0,tslib_es6.gn)([(0,core.Component)({standalone:!0,imports:[common.CommonModule,fesm2022_button.ot,AnalyticalGridModule],selector:"ngm-story-component-switch-grid",template:'<button mat-button (click)="switch()">Switch</button>\n  <ngm-analytical-grid style="width: 400px; height: 400px;"\n    [dataSettings]="grid.dataSettings"\n    [options]="grid.options"\n  ></ngm-analytical-grid>\n  '})],GridsComponent);const analytical_grid_component_stories={title:"AnalyticalGridComponent",component:AnalyticalGridComponent,decorators:[(0,dist.moduleMetadata)({imports:[animations.BrowserAnimationsModule,ngx_translate_core.aw.forRoot({missingTranslationHandler:{provide:ngx_translate_core.gC,useClass:missing_tanslation.l},loader:{provide:ngx_translate_core.Zw,useClass:loader_spec.H},defaultLanguage:"zh-Hans"}),AnalyticalGridModule,core_module.A,GridsComponent],providers:[core_service.q,{provide:types.fH,useClass:agent_mock_service.c,multi:!0},{provide:types.OF,useValue:{type:"SQL",factory:(_ref=(0,asyncToGenerator.Z)((function*(){const{SQLDataSource}=yield __webpack_require__.e(9593).then(__webpack_require__.bind(__webpack_require__,"./packages/sql/src/index.ts"));return SQLDataSource})),function factory(){return _ref.apply(this,arguments)})},multi:!0},{provide:types.ET,useValue:{name:"Sales",type:"SQL",agentType:src.buO.Browser,settings:{ignoreUnknownProperty:!0},schema:{cubes:[agent_mock_service.n,{...agent_mock_service.n,name:"SalesOrder10s"}]}},multi:!0}]})]};var _ref;const render=args=>({props:args,styles:[".ngm-analytical-grid {height: 400px;}"]}),A1Primary={render,args:{title:"Primary Analytical Grid",appearance:{},dataSettings:{dataSource:"Sales",entitySet:"SalesOrder",analytics:{rows:[{dimension:"[Product]"}],columns:[{dimension:src.QPo,measure:"Sales"}]}},options:{}}},A2Sticky={render,args:{title:"Primary Analytical Grid",appearance:{},dataSettings:{dataSource:"Sales",entitySet:"SalesOrder",analytics:{rows:[{dimension:"[Product]"}],columns:[{dimension:src.QPo,measure:"Sales"}]}},options:{sticky:!0}}},A3StickyGrid={render,args:{title:"Primary Analytical Grid",appearance:{},dataSettings:{dataSource:"Sales",entitySet:"SalesOrder",analytics:{rows:[{dimension:"[Product]"}],columns:[{dimension:src.QPo,measure:"Sales"}]}},options:{sticky:!0,grid:!0}}},Loading={render,args:{title:"Loading Analytical Grid",appearance:{},dataSettings:{dataSource:"Sales",entitySet:"SalesOrder10s",analytics:{rows:[{dimension:"[Product]"}],columns:[{dimension:src.QPo,measure:"Sales"}]}},options:{}}},DensityCompact={render,args:{title:"Analytical Grid compact",appearance:{displayDensity:displayDensity.A.compact},dataSettings:{dataSource:"Sales",entitySet:"SalesOrder",analytics:{rows:[{dimension:"[Product]"}],columns:[{dimension:src.QPo,measure:"Sales"}]}},options:{}}},DisplayHierarchy={render,args:{title:"Analytical Grid Hierarchy",appearance:{displayDensity:displayDensity.A.compact},dataSettings:{dataSource:"Sales",entitySet:"SalesOrder",analytics:{rows:[{dimension:"[Product]",displayHierarchy:!0}],columns:[{dimension:src.QPo,measure:"Sales"}]}},options:{}}},ShowToolbar={render,args:{title:"Analytical Grid Show Toolbar",appearance:{},dataSettings:{dataSource:"Sales",entitySet:"SalesOrder",analytics:{rows:[{dimension:"[Product]"}],columns:[{dimension:src.QPo,measure:"Sales"}]}},options:{showToolbar:!0}}},analytical_grid_component_stories_Error={render,args:{title:"Analytical Grid Error",appearance:{},dataSettings:{dataSource:"Sales",entitySet:"SalesOrder",analytics:{rows:[{dimension:"[Product]"}],columns:[{dimension:src.QPo,measure:"Sales1"}]}},options:{showToolbar:!0}}},Paging={render,args:{title:"Primary Analytical Grid",appearance:{},dataSettings:{dataSource:"Sales",entitySet:"SalesOrder",analytics:{rows:[{dimension:"[Product]"}],columns:[{dimension:src.QPo,measure:"Sales"}]}},options:{paging:!0,pageSize:3}}},PagingCompact={render,args:{title:"Primary Analytical Grid",dataSettings:{dataSource:"Sales",entitySet:"SalesOrder",analytics:{rows:[{dimension:"[Product]"}],columns:[{dimension:src.QPo,measure:"Sales"}]}},options:{paging:!0,pageSize:3},appearance:{displayDensity:displayDensity.A.compact}}},PagingError={render,args:{title:"Primary Analytical Grid",dataSettings:{dataSource:"Sales",entitySet:"SalesOrder",analytics:{rows:[{dimension:"[Product]"}],columns:[{dimension:src.QPo,measure:"Sales1"}]}},options:{paging:!0,pageSize:3,showToolbar:!0},appearance:{displayDensity:displayDensity.A.compact}}},Sortable={render,args:{title:"Sortable",appearance:{},dataSettings:{dataSource:"Sales",entitySet:"SalesOrder",analytics:{rows:[{dimension:"[Product]"},{dimension:"[Department]"}],columns:[{dimension:src.QPo,measure:"Sales"}]}},options:{sortable:!0}}},MultipleMeasures={render,args:{title:"Multiple Measures Grid",appearance:{},dataSettings:{dataSource:"Sales",entitySet:"SalesOrder",analytics:{rows:[{dimension:"[Product]"}],columns:[{dimension:"[Department]"},{dimension:src.QPo,measure:"Sales"},{dimension:src.QPo,measure:"Cost"}]}},options:{}}},SwitchTemplate={render:args=>({props:args,template:"<ngm-story-component-switch-grid></ngm-story-component-switch-grid>"}),args:{}}},"./packages/angular/core/i18n/loader.spec.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{H:()=>CustomTranslateLoader});var _metad_ocap_angular_i18n__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/angular/i18n/zhHans.ts"),rxjs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js");class CustomTranslateLoader{getTranslation(lang){return(0,rxjs__WEBPACK_IMPORTED_MODULE_0__.of)(_metad_ocap_angular_i18n__WEBPACK_IMPORTED_MODULE_1__.q)}}},"./packages/angular/core/services/csv.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";function csvDownload(data,name,delimiter){const items=data,filename=name||"export.csv",d=delimiter||",",header=Array.from(new Set(items.reduce(((r,e)=>[...r,...Object.keys(e)]),[]))),csv=items.map((row=>header.map((fieldName=>JSON.stringify(0===row[fieldName]?0:row[fieldName]||""))).join(d)));csv.unshift(header.join(d));const csvStr=csv.join("\r\n"),blob=new Blob([csvStr],{type:"text/plain;charset=utf-8"}),link=document.createElement("a"),url=URL.createObjectURL(blob);link.href=url,link.download=filename,link.style.display="none",document.body.appendChild(link),link.click(),document.body.removeChild(link)}__webpack_require__.d(__webpack_exports__,{O:()=>csvDownload})},"./packages/angular/core/services/smart-filter-bar.service.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{N:()=>NgmSmartFilterBarService});var _class,tslib__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_metad_ocap_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./packages/core/src/index.ts");let NgmSmartFilterBarService=((_class=class NgmSmartFilterBarService extends _metad_ocap_core__WEBPACK_IMPORTED_MODULE_0__.QXJ{constructor(parent){super(parent)}ngOnDestroy(){super.onDestroy()}}).ctorParameters=()=>[{type:_class,decorators:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Optional},{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.SkipSelf}]}],_class);NgmSmartFilterBarService=(0,tslib__WEBPACK_IMPORTED_MODULE_2__.gn)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable)(),(0,tslib__WEBPACK_IMPORTED_MODULE_2__.w6)("design:paramtypes",[NgmSmartFilterBarService])],NgmSmartFilterBarService)},"./packages/angular/i18n/zhHans.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{q:()=>ZhHans});const ZhHans={Ngm:{Common:{Cancel:"取消",Apply:"应用",Search:"搜索",Select:"选择",Search_Placeholder:"请输入关键词",DisplayBehaviour_Description:"描述",DisplayBehaviour_DescriptionID:"描述 ID",DisplayBehaviour_IDDescription:"ID 描述",DisplayBehaviour_ID:"ID",DisplayBehaviour_Auto:"自动",SelectionType_Single:"单选",SelectionType_Multiple:"多选",Presentation_Flat:"平铺",Presentation_Hierarchy:"层级",HierarchySelectionMode_Individual:"单个",HierarchySelectionMode_SelfDescendants:"自己和后代",HierarchySelectionMode_DescendantsOnly:"只后代",HierarchySelectionMode_SelfChildren:"自己和子代",HierarchySelectionMode_ChildrenOnly:"只子代",Measures:"度量",None:"无",Default:"默认"},Controls:{ValueHelp:{Title:"为{{value}}设置过滤器",AvailableMembers:"可选成员",DisplayBehaviour:"展现形式",SelectedMembers:"选中成员",ClearSelection:"清空选择",ShowUnbookedMembers:"显示未分配成员",ShowAllMember:"显示‘所有’成员",ShowOnlyLeaves:"只显示叶子节点",ExcludeSelectedMembers:"排除选中成员",SelectionType:"选择类型",Presentation:"展现形式",HierarchySelectionMode:"层级选择模式",Hierarchy:"层次结构"}},AnalyticalCard:{Screenshot:"截图",DataDownload:"下载数据",Refresh:"刷新",DrillDown:"下钻",DrillLevel:"层级下钻",DrillDimension:"维度下钻",LinkAnalysis:"联动筛选",DataEmpty:"数据为空"},AnalyticalGrid:{DataDownload:"下载数据",SORT:"排序",MOVE:"移动",ASCENDING:"正序",DESCENDGING:"倒序",MOVELEFT:"向左",MOVERIGHT:"向右",Search:"搜索",SelectAll:"选择所有",Pin:"固定"},Entity:{SelectEntities:"选择数据集"},EntitySchema:{Parameters:"参数",Measures:"度量",Properties:"属性"},Formula:{Editor:{EditFormula:"编辑公式",Format:"格式化",Help:"帮助"}}}}},"./packages/angular/analytical-grid/analytical-grid.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n:host .ngm-card-header .actions {\n  opacity: 0.1;\n  position: relative;\n}\n:host .ngm-card-header .actions .mat-mdc-progress-spinner {\n  position: absolute;\n  right: 0;\n  margin: 5px;\n}\n:host:hover .ngm-card-header .actions {\n  opacity: 1;\n}\n\n.cell-value {\n  white-space: nowrap;\n}\n\n.mdc-data-table__header-cell.ngm-analytical-grid__measure .pivot-column-header-content {\n  flex: 1;\n  text-align: right;\n}\n\n.mdc-data-table__header-cell,\n.mat-mdc-cell {\n  white-space: nowrap;\n}\n\n.mdc-data-table__header-cell.ngm-measure,\n.mat-mdc-cell.ngm-measure {\n  text-align: right;\n}\n\n.ngm-card-content {\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  position: relative;\n  overflow: auto;\n}\n\n.cdk-header-row.empty {\n  height: 0;\n  display: none;\n}\n\n.ngm-card-error {\n  height: 100%;\n}\n\n.ngm-analytical-grid__filtering {\n  flex-direction: column;\n  box-sizing: border-box;\n  display: flex;\n  place-content: stretch space-between;\n  align-items: stretch;\n}\n\n.cdk-cell.ngm-analytical-grid__measure {\n  text-align: right;\n  position: relative;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);